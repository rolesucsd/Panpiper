[shovill] Hello roles
[shovill] You ran: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/shovill --nocorr --trim --force --cpus 0 --ram 8 --opts -m 1024 --outdir /panfs/roles/BF/Assembly/363192065_S248_L001 --R1 /panfs/roles/Isolates/Reference/All/363192065_S248_L001_1.fastq --R2 /panfs/roles/Isolates/Reference/All/363192065_S248_L001_2.fastq
[shovill] This is shovill 1.1.0
[shovill] Written by Torsten Seemann
[shovill] Homepage is https://github.com/tseemann/shovill
[shovill] Operating system is linux
[shovill] Perl version is v5.32.1
[shovill] Machine has 64 CPU cores and 503.65 GB RAM
[shovill] Using bwa - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/bwa | Version: 0.7.17-r1188
[shovill] Using flash - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/flash | FLASH v1.2.11
[shovill] Using java - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/java | openjdk version "11.0.15-internal" 2022-04-19
[shovill] Using kmc - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/kmc | K-Mer Counter (KMC) ver. 3.2.1 (2022-01-04)
[shovill] Using lighter - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/lighter | Lighter v1.1.2
[shovill] Using megahit - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/megahit | MEGAHIT v1.2.9
[shovill] Using megahit_toolkit - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/megahit_toolkit | v1.2.9
[shovill] Using pigz - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/pigz | pigz 2.6
[shovill] Using pilon - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/pilon | Pilon version 1.24 Thu Jan 28 13:00:45 2021 -0500
[shovill] Using samclip - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/samclip | samclip 0.4.0
[shovill] Using samtools - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/samtools | Version: 1.16.1 (using htslib 1.16)
[shovill] Using seqtk - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/seqtk | Version: 1.3-r106
[shovill] Using skesa - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/skesa | SKESA 2.4.0
[shovill] Using spades.py - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/spades.py | SPAdes genome assembler v3.15.5
[shovill] Using trimmomatic - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/trimmomatic | 0.39
[shovill] Using velvetg - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/velvetg | Version 1.2.10
[shovill] Using velveth - /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/velveth | Version 1.2.10
[shovill] Found spades version: 003015000
[shovill] Will use spades 003015000 options: --isolate and --merged
[shovill] Forced overwrite of existing --outdir /panfs/roles/BF/Assembly/363192065_S248_L001
[shovill] Using tempdir: /tmp
[shovill] Changing into folder: /panfs/roles/BF/Assembly/363192065_S248_L001
[shovill] Collecting raw read statistics with 'seqtk'
[shovill] Running: seqtk fqchk -q3 \/panfs\/roles\/Isolates\/Reference\/All\/363192065_S248_L001_1\.fastq >/tmp/K7YUWEmwX7 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log
[shovill] Read stats: max_len = 151
[shovill] Read stats: total_bp = 935939914
[shovill] Read stats: avg_len = 142
[shovill] Read stats: min_len = 100
[shovill] Estimating genome size by counting unqiue 21-mers > frequency 10 
[shovill] Running: kmc -sm -m4 -t64 -k21 -ci10 \/panfs\/roles\/Isolates\/Reference\/All\/363192065_S248_L001_1\.fastq /tmp/uh6zv5Wuvf/kmc /tmp/uh6zv5Wuvf 2>&1 | sed 's/^/[kmc] /' | tee -a shovill.log
[kmc] **************************************************************************************
[kmc] Stage 1: 0%Stage 1: 9%Stage 1: 19%Stage 1: 29%Stage 1: 38%Stage 1: 48%Stage 1: 58%Stage 1: 68%Stage 1: 77%Stage 1: 87%Stage 1: 97%Stage 1: 100%
[kmc] Stage 2: 0%Stage 2: 1%Stage 2: 2%Stage 2: 3%Stage 2: 4%Stage 2: 5%Stage 2: 6%Stage 2: 7%Stage 2: 8%Stage 2: 9%Stage 2: 10%Stage 2: 11%Stage 2: 12%Stage 2: 13%Stage 2: 14%Stage 2: 15%Stage 2: 16%Stage 2: 17%Stage 2: 18%Stage 2: 19%Stage 2: 20%Stage 2: 21%Stage 2: 22%Stage 2: 23%Stage 2: 24%Stage 2: 25%Stage 2: 26%Stage 2: 27%Stage 2: 28%Stage 2: 29%Stage 2: 30%Stage 2: 31%Stage 2: 32%Stage 2: 33%Stage 2: 34%Stage 2: 35%Stage 2: 36%Stage 2: 37%Stage 2: 38%Stage 2: 39%Stage 2: 40%Stage 2: 41%Stage 2: 42%Stage 2: 43%Stage 2: 44%Stage 2: 45%Stage 2: 46%Stage 2: 47%Stage 2: 48%Stage 2: 49%Stage 2: 50%Stage 2: 51%Stage 2: 52%Stage 2: 53%Stage 2: 54%Stage 2: 55%Stage 2: 56%Stage 2: 57%Stage 2: 58%Stage 2: 59%Stage 2: 60%Stage 2: 61%Stage 2: 62%Stage 2: 63%Stage 2: 64%Stage 2: 65%Stage 2: 66%Stage 2: 67%Stage 2: 68%Stage 2: 69%Stage 2: 70%Stage 2: 71%Stage 2: 72%Stage 2: 73%Stage 2: 74%Stage 2: 75%Stage 2: 76%Stage 2: 77%Stage 2: 78%Stage 2: 79%Stage 2: 80%Stage 2: 81%Stage 2: 82%Stage 2: 83%Stage 2: 84%Stage 2: 85%Stage 2: 86%Stage 2: 87%Stage 2: 88%Stage 2: 89%Stage 2: 90%Stage 2: 91%Stage 2: 92%Stage 2: 93%Stage 2: 94%Stage 2: 95%Stage 2: 96%Stage 2: 97%Stage 2: 98%Stage 2: 99%Stage 2: 100%
[kmc] 
[kmc] 
[kmc] 1st stage: 1.37253s
[kmc] 2nd stage: 2.00079s
[kmc] 3rd stage: 0.030396s
[kmc] Total    : 3.40371s
[kmc] Tmp size : 497MB
[kmc] Tmp size strict memory : 0MB
[kmc] Tmp total: 497MB
[kmc] 
[kmc] Stats:
[kmc]    No. of k-mers below min. threshold :     18359679
[kmc]    No. of k-mers above max. threshold :            0
[kmc]    No. of unique k-mers               :     24634703
[kmc]    No. of unique counted k-mers       :      6275024
[kmc]    Total no. of k-mers                :    402046382
[kmc]    Total no. of reads                 :      3295110
[kmc]    Total no. of super-k-mers          :     60824707
[shovill] Using genome size 6275024 bp
[shovill] Estimated sequencing depth: 149 x
[shovill] No read depth reduction requested or necessary.
[shovill] Appending -Xmx8g to _JAVA_OPTIONS
[shovill] Trimming reads
[shovill] Running: trimmomatic PE -threads 64 -phred33 \/panfs\/roles\/Isolates\/Reference\/All\/363192065_S248_L001_1\.fastq \/panfs\/roles\/Isolates\/Reference\/All\/363192065_S248_L001_2\.fastq R1.fq.gz /dev/null R2.fq.gz /dev/null ILLUMINACLIP:/panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/db/trimmomatic.fa:1:30:11 LEADING:3 TRAILING:3 MINLEN:30 TOPHRED33 2>&1 | sed 's/^/[trimmomatic] /' | tee -a shovill.log
[trimmomatic] Picked up _JAVA_OPTIONS:  -Xmx8g
[trimmomatic] TrimmomaticPE: Started with arguments:
[trimmomatic]  -threads 64 -phred33 /panfs/roles/Isolates/Reference/All/363192065_S248_L001_1.fastq /panfs/roles/Isolates/Reference/All/363192065_S248_L001_2.fastq R1.fq.gz /dev/null R2.fq.gz /dev/null ILLUMINACLIP:/panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/db/trimmomatic.fa:1:30:11 LEADING:3 TRAILING:3 MINLEN:30 TOPHRED33
[trimmomatic] Using PrefixPair: 'AGATGTGTATAAGAGACAG' and 'AGATGTGTATAAGAGACAG'
[trimmomatic] Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'
[trimmomatic] Using Long Clipping Sequence: 'GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG'
[trimmomatic] Using Long Clipping Sequence: 'TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG'
[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCTCGTATGCCGTCTTCTGCTTG'
[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'
[trimmomatic] Skipping duplicate Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'
[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'
[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAG'
[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'
[trimmomatic] Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'
[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'
[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT'
[trimmomatic] Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'
[trimmomatic] Skipping duplicate Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'
[trimmomatic] Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'
[trimmomatic] Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'
[trimmomatic] Using Long Clipping Sequence: 'CTGTCTCTTATACACATCTCCGAGCCCACGAGAC'
[trimmomatic] Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'
[trimmomatic] Using Long Clipping Sequence: 'CTGTCTCTTATACACATCTGACGCTGCCGACGA'
[trimmomatic] Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'
[trimmomatic] ILLUMINACLIP: Using 2 prefix pairs, 17 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences
[trimmomatic] Input Read Pairs: 3295110 Both Surviving: 3293630 (99.96%) Forward Only Surviving: 1469 (0.04%) Reverse Only Surviving: 11 (0.00%) Dropped: 0 (0.00%)
[trimmomatic] TrimmomaticPE: Completed successfully
[shovill] Average read length looks like 142 bp
[shovill] Automatically setting --minlen to 71
[shovill] Setting k-mer range to (31 .. 106)
[shovill] Estimated K-mers: 31 49 67 85 103 [kn=5, ks=18, kmin=31, kmax=106]
[shovill] Using kmers: 31,49,67,85,103
[shovill] Correcting reads with 'Lighter'
[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 6275024 -t 64 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log
[lighter] [2023-01-24 12:16:41] =============Start====================
[lighter] [2023-01-24 12:16:41] Scanning the input files to infer alpha(sampling rate)
[lighter] [2023-01-24 12:16:48] Average coverage is 149.095 and alpha is 0.047
[lighter] [2023-01-24 12:16:49] Bad quality threshold is ":"
[lighter] [2023-01-24 12:17:08] Finish sampling kmers
[lighter] [2023-01-24 12:17:08] Bloom filter A's false positive rate: 0.010300
[lighter] [2023-01-24 12:17:21] Finish storing trusted kmers
[lighter] [2023-01-24 12:17:56] Finish error correction
[lighter] Processed 6587260 reads:
[lighter] 	5404154 are error-free
[lighter] 	Corrected 1219734 bases(1.030959 corrections for reads with errors)
[lighter] 	Trimmed 0 reads with average trimmed bases 0.000000
[lighter] 	Discard 0 reads
[shovill] Overlapping/stitching PE reads with 'FLASH'
[shovill] Running: flash -m 20 -M 151 -d . -o flash -z -t 64 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log
[FLASH] Starting FLASH v1.2.11
[FLASH] Fast Length Adjustment of SHort reads
[FLASH]  
[FLASH] Input files:
[FLASH]     R1.cor.fq.gz
[FLASH]     R2.cor.fq.gz
[FLASH]  
[FLASH] Output files:
[FLASH]     ./flash.extendedFrags.fastq.gz
[FLASH]     ./flash.notCombined_1.fastq.gz
[FLASH]     ./flash.notCombined_2.fastq.gz
[FLASH]     ./flash.hist
[FLASH]     ./flash.histogram
[FLASH]  
[FLASH] Parameters:
[FLASH]     Min overlap:           20
[FLASH]     Max overlap:           151
[FLASH]     Max mismatch density:  0.250000
[FLASH]     Allow "outie" pairs:   false
[FLASH]     Cap mismatch quals:    false
[FLASH]     Combiner threads:      64
[FLASH]     Input format:          FASTQ, phred_offset=33
[FLASH]     Output format:         FASTQ, phred_offset=33, gzip
[FLASH]  
[FLASH] Starting reader and writer threads
[FLASH] Starting 64 combiner threads
[FLASH] Processed 25000 read pairs
[FLASH] Processed 50000 read pairs
[FLASH] Processed 75000 read pairs
[FLASH] Processed 100000 read pairs
[FLASH] Processed 125000 read pairs
[FLASH] Processed 150000 read pairs
[FLASH] Processed 175000 read pairs
[FLASH] Processed 200000 read pairs
[FLASH] Processed 225000 read pairs
[FLASH] Processed 250000 read pairs
[FLASH] Processed 275000 read pairs
[FLASH] Processed 300000 read pairs
[FLASH] Processed 325000 read pairs
[FLASH] Processed 350000 read pairs
[FLASH] Processed 375000 read pairs
[FLASH] Processed 400000 read pairs
[FLASH] Processed 425000 read pairs
[FLASH] Processed 450000 read pairs
[FLASH] Processed 475000 read pairs
[FLASH] Processed 500000 read pairs
[FLASH] Processed 525000 read pairs
[FLASH] Processed 550000 read pairs
[FLASH] Processed 575000 read pairs
[FLASH] Processed 600000 read pairs
[FLASH] Processed 625000 read pairs
[FLASH] Processed 650000 read pairs
[FLASH] Processed 675000 read pairs
[FLASH] Processed 700000 read pairs
[FLASH] Processed 725000 read pairs
[FLASH] Processed 750000 read pairs
[FLASH] Processed 775000 read pairs
[FLASH] Processed 800000 read pairs
[FLASH] Processed 825000 read pairs
[FLASH] Processed 850000 read pairs
[FLASH] Processed 875000 read pairs
[FLASH] Processed 900000 read pairs
[FLASH] Processed 925000 read pairs
[FLASH] Processed 950000 read pairs
[FLASH] Processed 975000 read pairs
[FLASH] Processed 1000000 read pairs
[FLASH] Processed 1025000 read pairs
[FLASH] Processed 1050000 read pairs
[FLASH] Processed 1075000 read pairs
[FLASH] Processed 1100000 read pairs
[FLASH] Processed 1125000 read pairs
[FLASH] Processed 1150000 read pairs
[FLASH] Processed 1175000 read pairs
[FLASH] Processed 1200000 read pairs
[FLASH] Processed 1225000 read pairs
[FLASH] Processed 1250000 read pairs
[FLASH] Processed 1275000 read pairs
[FLASH] Processed 1300000 read pairs
[FLASH] Processed 1325000 read pairs
[FLASH] Processed 1350000 read pairs
[FLASH] Processed 1375000 read pairs
[FLASH] Processed 1400000 read pairs
[FLASH] Processed 1425000 read pairs
[FLASH] Processed 1450000 read pairs
[FLASH] Processed 1475000 read pairs
[FLASH] Processed 1500000 read pairs
[FLASH] Processed 1525000 read pairs
[FLASH] Processed 1550000 read pairs
[FLASH] Processed 1575000 read pairs
[FLASH] Processed 1600000 read pairs
[FLASH] Processed 1625000 read pairs
[FLASH] Processed 1650000 read pairs
[FLASH] Processed 1675000 read pairs
[FLASH] Processed 1700000 read pairs
[FLASH] Processed 1725000 read pairs
[FLASH] Processed 1750000 read pairs
[FLASH] Processed 1775000 read pairs
[FLASH] Processed 1800000 read pairs
[FLASH] Processed 1825000 read pairs
[FLASH] Processed 1850000 read pairs
[FLASH] Processed 1875000 read pairs
[FLASH] Processed 1900000 read pairs
[FLASH] Processed 1925000 read pairs
[FLASH] Processed 1950000 read pairs
[FLASH] Processed 1975000 read pairs
[FLASH] Processed 2000000 read pairs
[FLASH] Processed 2025000 read pairs
[FLASH] Processed 2050000 read pairs
[FLASH] Processed 2075000 read pairs
[FLASH] Processed 2100000 read pairs
[FLASH] Processed 2125000 read pairs
[FLASH] Processed 2150000 read pairs
[FLASH] Processed 2175000 read pairs
[FLASH] Processed 2200000 read pairs
[FLASH] Processed 2225000 read pairs
[FLASH] Processed 2250000 read pairs
[FLASH] Processed 2275000 read pairs
[FLASH] Processed 2300000 read pairs
[FLASH] Processed 2325000 read pairs
[FLASH] Processed 2350000 read pairs
[FLASH] Processed 2375000 read pairs
[FLASH] Processed 2400000 read pairs
[FLASH] Processed 2425000 read pairs
[FLASH] Processed 2450000 read pairs
[FLASH] Processed 2475000 read pairs
[FLASH] Processed 2500000 read pairs
[FLASH] Processed 2525000 read pairs
[FLASH] Processed 2550000 read pairs
[FLASH] Processed 2575000 read pairs
[FLASH] Processed 2600000 read pairs
[FLASH] Processed 2625000 read pairs
[FLASH] Processed 2650000 read pairs
[FLASH] Processed 2675000 read pairs
[FLASH] Processed 2700000 read pairs
[FLASH] Processed 2725000 read pairs
[FLASH] Processed 2750000 read pairs
[FLASH] Processed 2775000 read pairs
[FLASH] Processed 2800000 read pairs
[FLASH] Processed 2825000 read pairs
[FLASH] Processed 2850000 read pairs
[FLASH] Processed 2875000 read pairs
[FLASH] Processed 2900000 read pairs
[FLASH] Processed 2925000 read pairs
[FLASH] Processed 2950000 read pairs
[FLASH] Processed 2975000 read pairs
[FLASH] Processed 3000000 read pairs
[FLASH] Processed 3025000 read pairs
[FLASH] Processed 3050000 read pairs
[FLASH] Processed 3075000 read pairs
[FLASH] Processed 3100000 read pairs
[FLASH] Processed 3125000 read pairs
[FLASH] Processed 3150000 read pairs
[FLASH] Processed 3175000 read pairs
[FLASH] Processed 3200000 read pairs
[FLASH] Processed 3225000 read pairs
[FLASH] Processed 3250000 read pairs
[FLASH] Processed 3275000 read pairs
[FLASH] Processed 3293630 read pairs
[FLASH]  
[FLASH] Read combination statistics:
[FLASH]     Total pairs:      3293630
[FLASH]     Combined pairs:   2882923
[FLASH]     Uncombined pairs: 410707
[FLASH]     Percent combined: 87.53%
[FLASH]  
[FLASH] Writing histogram files.
[FLASH]  
[FLASH] FLASH v1.2.11 complete!
[FLASH] 109.615 seconds elapsed
[shovill] Assembling reads with 'spades'
[shovill] Running: spades.py -1 flash.notCombined_1.fastq.gz -2 flash.notCombined_2.fastq.gz --isolate --threads 64 --memory 8 -o spades --tmp-dir /tmp -k 31,49,67,85,103 -m 1024 --merged flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[spades] /' | tee -a shovill.log
[spades] Command line: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/spades.py	-1	/panfs/roles/BF/Assembly/363192065_S248_L001/flash.notCombined_1.fastq.gz	-2	/panfs/roles/BF/Assembly/363192065_S248_L001/flash.notCombined_2.fastq.gz	--isolate	--threads	64	--memory	8	-o	/panfs/roles/BF/Assembly/363192065_S248_L001/spades	--tmp-dir	/tmp	-k	31,49,67,85,103	-m	1024	--merged	/panfs/roles/BF/Assembly/363192065_S248_L001/flash.extendedFrags.fastq.gz	
[spades] 
[spades] System information:
[spades]   SPAdes version: 3.15.5
[spades]   Python version: 3.8.15
[spades]   OS: Linux-3.10.0-1160.el7.x86_64-x86_64-with-glibc2.10
[spades] 
[spades] Output dir: /panfs/roles/BF/Assembly/363192065_S248_L001/spades
[spades] Mode: ONLY assembling (without read error correction)
[spades] Debug mode is turned OFF
[spades] 
[spades] Dataset parameters:
[spades]   Isolate mode
[spades]   Reads:
[spades]     Library number: 1, library type: paired-end
[spades]       orientation: fr
[spades]       left reads: ['/panfs/roles/BF/Assembly/363192065_S248_L001/flash.notCombined_1.fastq.gz']
[spades]       right reads: ['/panfs/roles/BF/Assembly/363192065_S248_L001/flash.notCombined_2.fastq.gz']
[spades]       interlaced reads: not specified
[spades]       single reads: not specified
[spades]       merged reads: ['/panfs/roles/BF/Assembly/363192065_S248_L001/flash.extendedFrags.fastq.gz']
[spades] Assembly parameters:
[spades]   k: [31, 49, 67, 85, 103]
[spades]   Repeat resolution is enabled
[spades]   Mismatch careful mode is turned OFF
[spades]   MismatchCorrector will be SKIPPED
[spades]   Coverage cutoff is turned OFF
[spades] Other parameters:
[spades]   Dir for temp files: /tmp
[spades]   Threads: 64
[spades]   Memory limit (in Gb): 1024
[spades] 
[spades] 
[spades] ======= SPAdes pipeline started. Log can be found here: /panfs/roles/BF/Assembly/363192065_S248_L001/spades/spades.log
[spades] 
[spades] /panfs/roles/BF/Assembly/363192065_S248_L001/flash.notCombined_1.fastq.gz: max reads length: 151
[spades] /panfs/roles/BF/Assembly/363192065_S248_L001/flash.notCombined_2.fastq.gz: max reads length: 151
[spades] Files with merged reads were ignored.
[spades] 
[spades] Reads length: 151
[spades] 
[spades] 
[spades] ===== Before start started. 
[spades] 
[spades] 
[spades] ===== Assembling started. 
[spades] 
[spades] 
[spades] ===== K31 started. 
[spades] 
[spades] 
[spades] == Running: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/spades-core /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K31/configs/config.info /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K31/configs/isolate_mode.info
[spades] 
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K31/configs/config.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K31/configs/isolate_mode.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 1024 Gb
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/panfs/roles/BF/Assembly/363192065_S248_L001/spades/dataset.info) with K=31
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40
[spades]   0:00:00.000     1M / 25M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)
[spades]   0:00:00.003     1M / 25M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)
[spades]   0:00:00.003     1M / 25M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads
[spades]   0:00:00.080    28M / 28M   INFO    General                 (binary_converter.cpp      :  96)   16384 reads processed
[spades]   0:00:00.152    33M / 33M   INFO    General                 (binary_converter.cpp      :  96)   32768 reads processed
[spades]   0:00:00.438    28M / 40M   INFO    General                 (binary_converter.cpp      :  96)   65536 reads processed
[spades]   0:00:00.840    32M / 48M   INFO    General                 (binary_converter.cpp      :  96)   131072 reads processed
[spades]   0:00:01.763    26M / 48M   INFO    General                 (binary_converter.cpp      :  96)   262144 reads processed
[spades]   0:00:02.785    23M / 48M   INFO    General                 (binary_converter.cpp      : 111)   410707 reads written
[spades]   0:00:02.785     1M / 48M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads
[spades]   0:00:02.789    11M / 48M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written
[spades]   0:00:02.789     1M / 48M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads
[spades]   0:00:02.832    14M / 48M   INFO    General                 (binary_converter.cpp      :  96)   16384 reads processed
[spades]   0:00:02.871    17M / 48M   INFO    General                 (binary_converter.cpp      :  96)   32768 reads processed
[spades]   0:00:03.038    14M / 48M   INFO    General                 (binary_converter.cpp      :  96)   65536 reads processed
[spades]   0:00:03.259    17M / 48M   INFO    General                 (binary_converter.cpp      :  96)   131072 reads processed
[spades]   0:00:03.764    13M / 48M   INFO    General                 (binary_converter.cpp      :  96)   262144 reads processed
[spades]   0:00:04.711    15M / 48M   INFO    General                 (binary_converter.cpp      :  96)   524288 reads processed
[spades]   0:00:06.608    20M / 48M   INFO    General                 (binary_converter.cpp      :  96)   1048576 reads processed
[spades]   0:00:10.560    19M / 48M   INFO    General                 (binary_converter.cpp      :  96)   2097152 reads processed
[spades]   0:00:13.611    11M / 48M   INFO    General                 (binary_converter.cpp      : 111)   2882923 reads written
[spades]   0:00:13.736     1M / 48M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)
[spades]   0:00:13.736     1M / 48M   INFO    General                 (construction.cpp          : 153)   Max read length 282
[spades]   0:00:13.736     1M / 48M   INFO    General                 (construction.cpp          : 156)   Max read length without merged 151
[spades]   0:00:13.736     1M / 48M   INFO    General                 (construction.cpp          : 159)   Average read length 169.095
[spades]   0:00:13.736     1M / 48M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)
[spades]   0:00:13.736     1M / 48M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:00:13.736     1M / 48M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:00:13.736     1M / 48M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:00:13.737     1M / 48M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 6710886
[spades]   0:00:24.321   601M / 606M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 935904 reads
[spades]   0:00:34.888   601M / 606M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1871242 reads
[spades]   0:00:45.263   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2808699 reads
[spades]   0:00:55.749   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3741766 reads
[spades]   0:01:06.182   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4675768 reads
[spades]   0:01:16.463   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 5609203 reads
[spades]   0:01:26.873   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 6694168 reads
[spades]   0:01:33.800   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 7408674 reads
[spades]   0:01:33.800     1M / 607M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 7408674 reads
[spades]   0:01:33.825     1M / 607M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:35.463     1M / 607M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 17520740 kmers in total.
[spades]   0:01:35.463     1M / 607M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)
[spades]   0:01:35.463     1M / 607M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index
[spades]   0:01:35.463     1M / 607M  INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:01:35.463     1M / 607M  INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:01:35.463     1M / 607M  INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:01:35.463     1M / 607M  INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 6710886
[spades]   0:01:41.127   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 17520740 kmers
[spades]   0:01:41.127   601M / 607M  INFO    General                 (kmer_splitters.hpp        : 199)   Used 17520740 kmers.
[spades]   0:01:41.127     1M / 607M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:41.380     1M / 607M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 17457248 kmers in total.
[spades]   0:01:41.380     1M / 607M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:01:43.556    13M / 607M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 17457248 kmers, 12615984 bytes occupied (5.78143 bits per kmer).
[spades]   0:01:43.557    13M / 607M  INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.
[spades]   0:01:43.641    30M / 607M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers
[spades]   0:01:50.178    30M / 607M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.
[spades]   0:01:50.185    30M / 607M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)
[spades]   0:01:50.185    30M / 607M  INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)
[spades]   0:01:50.185    30M / 607M  INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping
[spades]   0:01:55.952    35M / 607M  INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 60263
[spades]   0:01:55.982    35M / 607M  INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 60483
[spades]   0:01:55.992    30M / 607M  INFO   Early tip clipping       (early_simplification.hpp  :  49)   1953980 32-mers were removed by early tip clipper
[spades]   0:01:55.992    30M / 607M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)
[spades]   0:01:55.993    30M / 607M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths
[spades]   0:02:04.409    44M / 607M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 244807 sequences extracted
[spades]   0:02:08.518    44M / 607M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops
[spades]   0:02:10.169    44M / 607M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected
[spades]   0:02:10.178    44M / 607M  INFO    General                 (debruijn_graph_constructor: 487)   Total 489614 edges to create
[spades]   0:02:10.178    63M / 607M  INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records
[spades]   0:02:10.307    70M / 607M  INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records
[spades]   0:02:10.344    70M / 607M  INFO    General                 (debruijn_graph_constructor: 493)   Sorting done
[spades]   0:02:10.345    72M / 607M  INFO    General                 (debruijn_graph_constructor: 503)   Total 181315 vertices to create
[spades]   0:02:10.345    89M / 607M  INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph
[spades]   0:02:10.380    76M / 607M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)
[spades]   0:02:10.380    76M / 607M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:02:12.600    89M / 607M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 17520740 kmers, 12661872 bytes occupied (5.78143 bits per kmer).
[spades]   0:02:12.606   157M / 607M  INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.
[spades]   0:04:02.192   157M / 607M  INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM
[spades]   0:04:08.862   157M / 607M  INFO    General                 (coverage_filling.hpp      :  82)   Processed 489566 edges
[spades]   0:04:08.919    47M / 607M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)
[spades]   0:04:08.919    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 17
[spades]   0:04:08.919    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 73
[spades]   0:04:08.919    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 76. Coverage mad: 14.826
[spades]   0:04:08.919    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model
[spades]   0:04:09.001    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2
[spades]   0:04:09.207    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4
[spades]   0:04:09.915    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8
[spades]   0:04:10.963    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 76.457. Fitted coverage std. dev: 13.8298
[spades]   0:04:10.965    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.998161
[spades]   0:04:10.965    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 38
[spades]   0:04:10.965    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 38
[spades]   0:04:10.965    47M / 607M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 6243383
[spades]   0:04:10.965    47M / 607M  INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 76.457
[spades]   0:04:10.965    47M / 607M  INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 38
[spades]   0:04:10.965    47M / 607M  INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0
[spades]   0:04:10.965    47M / 607M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)
[spades]   0:04:10.965    47M / 607M  INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning
[spades]   0:04:10.965    47M / 607M  INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled
[spades]   0:04:10.965    47M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover
[spades]   0:04:10.991    47M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times
[spades]   0:04:10.991    47M / 607M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)
[spades]   0:04:10.991    47M / 607M  INFO    General                 (simplification.cpp        : 368)   Graph simplification started
[spades]   0:04:10.991    47M / 607M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:04:10.991    47M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1
[spades]   0:04:10.991    47M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:11.048    46M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1832 times
[spades]   0:04:11.048    46M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:11.807    47M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 30788 times
[spades]   0:04:11.807    47M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.303    45M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 43705 times
[spades]   0:04:12.306    45M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2
[spades]   0:04:12.306    45M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.320    44M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 517 times
[spades]   0:04:12.320    44M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.325    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 95 times
[spades]   0:04:12.325    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.334    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 399 times
[spades]   0:04:12.334    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3
[spades]   0:04:12.334    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.334    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.334    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 9 times
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 28 times
[spades]   0:04:12.335    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 2 times
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 9 times
[spades]   0:04:12.335    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 9 times
[spades]   0:04:12.335    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 2 times
[spades]   0:04:12.335    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:04:12.336    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 7
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 15 times
[spades]   0:04:12.336    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 8
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1 times
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 15 times
[spades]   0:04:12.336    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 9
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:12.336    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 10 times
[spades]   0:04:12.337    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 10
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 6 times
[spades]   0:04:12.337    43M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 11
[spades]   0:04:12.337    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.343    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2 times
[spades]   0:04:12.343    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.349    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1 times
[spades]   0:04:12.349    43M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.353    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:04:12.353    41M / 607M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 12
[spades]   0:04:12.353    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.353    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.353    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.353    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:12.353    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:12.353    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:04:12.355    41M / 607M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)
[spades]   0:04:12.355    41M / 607M  INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification
[spades]   0:04:12.355    41M / 607M  INFO    General                 (graph_simplification.hpp  : 448)   Disconnection of relatively low covered edges disabled
[spades]   0:04:12.355    41M / 607M  INFO    General                 (graph_simplification.hpp  : 485)   Complex tip clipping disabled
[spades]   0:04:12.355    41M / 607M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:04:12.355    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.359    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.359    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.365    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:12.365    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:12.370    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:12.370    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:12.376    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:12.376    41M / 607M  INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges
[spades]   0:04:12.381    41M / 607M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges
[spades]   0:04:12.391    40M / 607M  INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 8263 times
[spades]   0:04:12.392    40M / 607M  INFO    General                 (simplification.cpp        : 495)   After simplification:
[spades]   0:04:12.392    40M / 607M  INFO    General                 (simplification.cpp        : 496)     Average coverage = 43.8996
[spades]   0:04:12.392    40M / 607M  INFO    General                 (simplification.cpp        : 497)     Total length = 11513120
[spades]   0:04:12.394    40M / 607M  INFO    General                 (simplification.cpp        : 498)     Median edge length: 3916
[spades]   0:04:12.394    40M / 607M  INFO    General                 (simplification.cpp        : 499)     Edges: 18712
[spades]   0:04:12.394    40M / 607M  INFO    General                 (simplification.cpp        : 500)     Vertices: 25420
[spades]   0:04:12.394    40M / 607M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)
[spades]   0:04:12.397    40M / 607M  INFO    General                 (read_converter.cpp        : 107)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K31/simplified_contigs
[spades]   0:04:12.431    43M / 607M  INFO    General                 (binary_converter.cpp      : 111)   9358 reads written
[spades]   0:04:12.448    40M / 607M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished
[spades]   0:04:12.451     1M / 607M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 4 minutes 12 seconds
[spades] 
[spades] ===== K31 finished. 
[spades] 
[spades] 
[spades] ===== K49 started. 
[spades] 
[spades] 
[spades] == Running: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/spades-core /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K49/configs/config.info /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K49/configs/isolate_mode.info
[spades] 
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K49/configs/config.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K49/configs/isolate_mode.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 1024 Gb
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/panfs/roles/BF/Assembly/363192065_S248_L001/spades/dataset.info) with K=49
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40
[spades]   0:00:00.000     1M / 25M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (read_converter.cpp        :  53)   Binary reads detected
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (construction.cpp          : 118)   Contigs from previous K will be used: /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K31/simplified_contigs
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 153)   Max read length 282
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 156)   Max read length without merged 151
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 159)   Average read length 169.095
[spades]   0:00:00.001     1M / 25M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:00:00.001     1M / 25M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 3355443
[spades]   0:00:05.979   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 535969 reads
[spades]   0:00:11.749   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1070785 reads
[spades]   0:00:17.556   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1606125 reads
[spades]   0:00:23.255   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2141256 reads
[spades]   0:00:28.999   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2678163 reads
[spades]   0:00:34.667   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3212768 reads
[spades]   0:00:40.383   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3745634 reads
[spades]   0:00:46.107   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4279906 reads
[spades]   0:01:18.216     1M / 569M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 7427390 reads
[spades]   0:01:18.246     1M / 569M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:21.896     1M / 569M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 18350233 kmers in total.
[spades]   0:01:21.896     1M / 569M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)
[spades]   0:01:21.896     1M / 569M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index
[spades]   0:01:21.896     1M / 569M  INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:01:21.896     1M / 569M  INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:01:21.896     1M / 569M  INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:01:21.896     1M / 569M  INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 3355443
[spades]   0:01:28.050   601M / 819M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 16472096 kmers
[spades]   0:01:28.666   601M / 848M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 18350235 kmers
[spades]   0:01:28.666   601M / 848M  INFO    General                 (kmer_splitters.hpp        : 199)   Used 18350235 kmers.
[spades]   0:01:28.666     1M / 848M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:29.143     1M / 848M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 18318044 kmers in total.
[spades]   0:01:29.143     1M / 848M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:01:31.766    14M / 848M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 18318044 kmers, 13237776 bytes occupied (5.78131 bits per kmer).
[spades]   0:01:31.766    14M / 848M  INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.
[spades]   0:01:31.939    32M / 848M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers
[spades]   0:01:40.081    32M / 848M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.
[spades]   0:01:40.093    32M / 848M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)
[spades]   0:01:40.093    32M / 848M  INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)
[spades]   0:01:40.093    32M / 848M  INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping
[spades]   0:01:47.198    37M / 848M  INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 75733
[spades]   0:01:47.240    37M / 848M  INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 76013
[spades]   0:01:47.253    32M / 848M  INFO   Early tip clipping       (early_simplification.hpp  :  49)   2634022 50-mers were removed by early tip clipper
[spades]   0:01:47.253    32M / 848M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)
[spades]   0:01:47.253    32M / 848M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths
[spades]   0:01:56.960    43M / 848M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 169209 sequences extracted
[spades]   0:02:01.625    43M / 848M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops
[spades]   0:02:03.357    43M / 848M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 1 loops collected
[spades]   0:02:03.372    43M / 848M  INFO    General                 (debruijn_graph_constructor: 487)   Total 338420 edges to create
[spades]   0:02:03.372    56M / 848M  INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records
[spades]   0:02:03.483    61M / 848M  INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records
[spades]   0:02:03.508    61M / 848M  INFO    General                 (debruijn_graph_constructor: 493)   Sorting done
[spades]   0:02:03.509    63M / 848M  INFO    General                 (debruijn_graph_constructor: 503)   Total 137021 vertices to create
[spades]   0:02:03.509    76M / 848M  INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph
[spades]   0:02:03.531    66M / 848M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)
[spades]   0:02:03.531    66M / 848M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:02:06.147    80M / 848M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 18350233 kmers, 13260992 bytes occupied (5.78129 bits per kmer).
[spades]   0:02:06.153   153M / 848M  INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.
[spades]   0:03:46.614   153M / 848M  INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM
[spades]   0:03:53.647   153M / 848M  INFO    General                 (coverage_filling.hpp      :  82)   Processed 338407 edges
[spades]   0:03:53.741    36M / 848M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)
[spades]   0:03:53.741    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 17
[spades]   0:03:53.741    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 64
[spades]   0:03:53.741    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 66. Coverage mad: 14.826
[spades]   0:03:53.741    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model
[spades]   0:03:53.812    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2
[spades]   0:03:53.993    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4
[spades]   0:03:54.642    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8
[spades]   0:03:55.497    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 66.2805. Fitted coverage std. dev: 12.6
[spades]   0:03:55.499    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.986342
[spades]   0:03:55.499    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 33
[spades]   0:03:55.499    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 33
[spades]   0:03:55.499    36M / 848M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 6251952
[spades]   0:03:55.500    36M / 848M  INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 66.2805
[spades]   0:03:55.500    36M / 848M  INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 33
[spades]   0:03:55.500    36M / 848M  INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0
[spades]   0:03:55.500    36M / 848M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)
[spades]   0:03:55.500    36M / 848M  INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning
[spades]   0:03:55.500    36M / 848M  INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled
[spades]   0:03:55.500    36M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover
[spades]   0:03:55.516    36M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times
[spades]   0:03:55.516    36M / 848M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)
[spades]   0:03:55.516    36M / 848M  INFO    General                 (simplification.cpp        : 368)   Graph simplification started
[spades]   0:03:55.516    36M / 848M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:03:55.516    36M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1
[spades]   0:03:55.516    36M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:55.557    35M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2476 times
[spades]   0:03:55.557    35M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:55.927    35M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 17482 times
[spades]   0:03:55.928    35M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.321    33M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 30597 times
[spades]   0:03:56.324    33M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2
[spades]   0:03:56.324    33M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.337    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 376 times
[spades]   0:03:56.337    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.339    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 31 times
[spades]   0:03:56.339    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 204 times
[spades]   0:03:56.345    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1 times
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 4 times
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 14 times
[spades]   0:03:56.345    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.345    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 8 times
[spades]   0:03:56.346    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 4 times
[spades]   0:03:56.346    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 6 times
[spades]   0:03:56.346    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 7
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 10 times
[spades]   0:03:56.346    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 8
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.346    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.347    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 15 times
[spades]   0:03:56.347    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 9
[spades]   0:03:56.347    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.347    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.347    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.347    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.347    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 8 times
[spades]   0:03:56.348    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 10
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 3 times
[spades]   0:03:56.348    32M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 11
[spades]   0:03:56.348    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.355    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2 times
[spades]   0:03:56.355    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.359    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1 times
[spades]   0:03:56.359    32M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.363    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:03:56.363    31M / 848M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 12
[spades]   0:03:56.363    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.363    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.363    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.363    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.363    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:56.363    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:03:56.364    31M / 848M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)
[spades]   0:03:56.364    31M / 848M  INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification
[spades]   0:03:56.364    31M / 848M  INFO    General                 (graph_simplification.hpp  : 448)   Disconnection of relatively low covered edges disabled
[spades]   0:03:56.364    31M / 848M  INFO    General                 (graph_simplification.hpp  : 485)   Complex tip clipping disabled
[spades]   0:03:56.365    31M / 848M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:03:56.365    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.369    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.369    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.374    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.374    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.378    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.378    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.383    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.383    31M / 848M  INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges
[spades]   0:03:56.388    31M / 848M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges
[spades]   0:03:56.401    30M / 848M  INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 12283 times
[spades]   0:03:56.402    30M / 848M  INFO    General                 (simplification.cpp        : 495)   After simplification:
[spades]   0:03:56.402    30M / 848M  INFO    General                 (simplification.cpp        : 496)     Average coverage = 38.5125
[spades]   0:03:56.402    30M / 848M  INFO    General                 (simplification.cpp        : 497)     Total length = 11361725
[spades]   0:03:56.403    30M / 848M  INFO    General                 (simplification.cpp        : 498)     Median edge length: 5666
[spades]   0:03:56.403    30M / 848M  INFO    General                 (simplification.cpp        : 499)     Edges: 14143
[spades]   0:03:56.403    30M / 848M  INFO    General                 (simplification.cpp        : 500)     Vertices: 21978
[spades]   0:03:56.403    30M / 848M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)
[spades]   0:03:56.406    30M / 848M  INFO    General                 (read_converter.cpp        : 107)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K49/simplified_contigs
[spades]   0:03:56.438    33M / 848M  INFO    General                 (binary_converter.cpp      : 111)   7072 reads written
[spades]   0:03:56.454    30M / 848M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished
[spades]   0:03:56.457     1M / 848M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 3 minutes 56 seconds
[spades] 
[spades] ===== K49 finished. 
[spades] 
[spades] 
[spades] ===== K67 started. 
[spades] 
[spades] 
[spades] == Running: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/spades-core /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K67/configs/config.info /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K67/configs/isolate_mode.info
[spades] 
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K67/configs/config.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K67/configs/isolate_mode.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 1024 Gb
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/panfs/roles/BF/Assembly/363192065_S248_L001/spades/dataset.info) with K=67
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40
[spades]   0:00:00.000     1M / 25M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 242)   Will need read mapping, kmer mapper will be attached
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (read_converter.cpp        :  53)   Binary reads detected
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (construction.cpp          : 118)   Contigs from previous K will be used: /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K49/simplified_contigs
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 153)   Max read length 282
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 156)   Max read length without merged 151
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 159)   Average read length 169.095
[spades]   0:00:00.001     1M / 25M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:00:00.001     1M / 25M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 2236962
[spades]   0:00:04.203   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 416637 reads
[spades]   0:00:08.311   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 832546 reads
[spades]   0:00:12.425   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1248632 reads
[spades]   0:00:16.513   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1665333 reads
[spades]   0:00:20.579   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2081964 reads
[spades]   0:00:24.644   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2499151 reads
[spades]   0:00:28.732   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2916436 reads
[spades]   0:00:44.975   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4575879 reads
[spades]   0:01:11.286     1M / 569M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 7422818 reads
[spades]   0:01:11.295     1M / 569M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:17.057     1M / 569M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 18649370 kmers in total.
[spades]   0:01:17.057     1M / 569M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)
[spades]   0:01:17.057     1M / 569M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index
[spades]   0:01:17.057     1M / 569M  INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:01:17.057     1M / 569M  INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:01:17.058     1M / 569M  INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:01:17.058     1M / 569M  INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 2236962
[spades]   0:01:21.019   601M / 734M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 9791341 kmers
[spades]   0:01:24.615   601M / 977M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 18649375 kmers
[spades]   0:01:24.615   601M / 977M  INFO    General                 (kmer_splitters.hpp        : 199)   Used 18649375 kmers.
[spades]   0:01:24.615     1M / 977M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:25.474     1M / 977M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 18644616 kmers in total.
[spades]   0:01:25.474     1M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:01:28.389    15M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 18644616 kmers, 13473592 bytes occupied (5.78123 bits per kmer).
[spades]   0:01:28.389    15M / 977M  INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.
[spades]   0:01:28.674    33M / 977M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers
[spades]   0:01:37.472    33M / 977M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.
[spades]   0:01:37.494    33M / 977M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)
[spades]   0:01:37.495    33M / 977M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths
[spades]   0:01:49.203    51M / 977M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 288395 sequences extracted
[spades]   0:01:55.114    51M / 977M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops
[spades]   0:01:56.921    51M / 977M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected
[spades]   0:01:56.941    51M / 977M  INFO    General                 (debruijn_graph_constructor: 487)   Total 576790 edges to create
[spades]   0:01:56.941    74M / 977M  INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records
[spades]   0:01:57.171    83M / 977M  INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records
[spades]   0:01:57.215    83M / 977M  INFO    General                 (debruijn_graph_constructor: 493)   Sorting done
[spades]   0:01:57.218    87M / 977M  INFO    General                 (debruijn_graph_constructor: 503)   Total 283641 vertices to create
[spades]   0:01:57.218   114M / 977M  INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph
[spades]   0:01:57.260    96M / 977M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)
[spades]   0:01:57.260    96M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:02:00.123   111M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 18649370 kmers, 13477040 bytes occupied (5.78123 bits per kmer).
[spades]   0:02:00.130   183M / 977M  INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.
[spades]   0:03:28.629   183M / 977M  INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM
[spades]   0:03:37.283   183M / 977M  INFO    General                 (coverage_filling.hpp      :  82)   Processed 576786 edges
[spades]   0:03:37.423    64M / 977M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)
[spades]   0:03:37.423    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 15
[spades]   0:03:37.423    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 55
[spades]   0:03:37.423    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 56. Coverage mad: 13.3434
[spades]   0:03:37.423    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model
[spades]   0:03:37.481    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2
[spades]   0:03:37.629    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4
[spades]   0:03:38.189    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8
[spades]   0:03:38.975    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 56.1507. Fitted coverage std. dev: 11.321
[spades]   0:03:38.977    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.952881
[spades]   0:03:38.977    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 28
[spades]   0:03:38.977    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 28
[spades]   0:03:38.977    64M / 977M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 6252890
[spades]   0:03:38.977    64M / 977M  INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 56.1507
[spades]   0:03:38.977    64M / 977M  INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 28
[spades]   0:03:38.977    64M / 977M  INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0
[spades]   0:03:38.977    64M / 977M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: early_gapcloser)
[spades]   0:03:38.985    73M / 977M  INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:03:39.090    78M / 977M  INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 154834 out of 576786, length: 10095199
[spades]   0:03:39.098    80M / 977M  INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 579676)
[spades]   0:03:39.441    80M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:03:41.390    86M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 7777400 kmers, 5618064 bytes occupied (5.77886 bits per kmer).
[spades]   0:03:41.397   146M / 977M  INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.
[spades]   0:03:51.957   144M / 977M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:04:00.882   144M / 977M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:04:01.358   144M / 977M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 410707 reads processed
[spades]   0:04:01.366    74M / 977M  INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer
[spades]   0:04:01.366    74M / 977M  INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps
[spades]   0:04:01.539    74M / 977M  INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 264 gaps after checking 1483 candidates
[spades]   0:04:01.546    74M / 977M  INFO    General                 (gap_closer.cpp            : 456)   Gap closer done
[spades]   0:04:01.548    64M / 977M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)
[spades]   0:04:01.548    64M / 977M  INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning
[spades]   0:04:01.548    64M / 977M  INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled
[spades]   0:04:01.548    64M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover
[spades]   0:04:01.581    64M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 1 times
[spades]   0:04:01.581    64M / 977M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)
[spades]   0:04:01.581    64M / 977M  INFO    General                 (simplification.cpp        : 368)   Graph simplification started
[spades]   0:04:01.581    64M / 977M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:04:01.581    64M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1
[spades]   0:04:01.581    64M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:02.096    59M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 91293 times
[spades]   0:04:02.098    59M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.311   154M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 9014 times
[spades]   0:04:03.313   154M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.612   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 18123 times
[spades]   0:04:03.616   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2
[spades]   0:04:03.616   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.624   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 230 times
[spades]   0:04:03.624   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.627   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 10 times
[spades]   0:04:03.627   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.642   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 226 times
[spades]   0:04:03.642   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3
[spades]   0:04:03.642   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.642   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2 times
[spades]   0:04:03.642   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.642   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 2 times
[spades]   0:04:03.642   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 11 times
[spades]   0:04:03.643   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:04:03.643   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.643   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1 times
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:04:03.644   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 3 times
[spades]   0:04:03.644   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 7
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.644   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.645   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 9 times
[spades]   0:04:03.645   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 8
[spades]   0:04:03.645   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.645   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.645   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.645   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.645   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.645   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 8 times
[spades]   0:04:03.645   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 9
[spades]   0:04:03.646   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.646   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.646   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.646   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.646   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.646   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 8 times
[spades]   0:04:03.646   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 10
[spades]   0:04:03.647   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.647   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.647   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.647   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.647   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.647   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:04:03.647   152M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 11
[spades]   0:04:03.647   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.658   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2 times
[spades]   0:04:03.658   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.666   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.666   152M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.674   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:04:03.674   151M / 977M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 12
[spades]   0:04:03.674   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:03.674   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:03.674   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:03.674   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:03.674   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:04:03.674   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:04:03.678   151M / 977M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: late_gapcloser)
[spades]   0:04:03.687   160M / 977M  INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:04:03.707   161M / 977M  INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 45932 out of 48978, length: 12707616
[spades]   0:04:03.708   161M / 977M  INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 579676)
[spades]   0:04:03.942   161M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:04:05.340   166M / 977M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 6634374 kmers, 4793100 bytes occupied (5.77972 bits per kmer).
[spades]   0:04:05.346   218M / 977M  INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.
[spades]   0:04:23.494   218M / 977M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:04:40.350   218M / 977M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:04:41.243   218M / 977M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 410707 reads processed
[spades]   0:04:41.250   161M / 977M  INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer
[spades]   0:04:41.251   161M / 977M  INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps
[spades]   0:04:41.270   161M / 977M  INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 53 gaps after checking 538 candidates
[spades]   0:04:41.275   161M / 977M  INFO    General                 (gap_closer.cpp            : 456)   Gap closer done
[spades]   0:04:41.276   151M / 977M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)
[spades]   0:04:41.276   151M / 977M  INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification
[spades]   0:04:41.276   151M / 977M  INFO    General                 (graph_simplification.hpp  : 448)   Disconnection of relatively low covered edges disabled
[spades]   0:04:41.276   151M / 977M  INFO    General                 (graph_simplification.hpp  : 485)   Complex tip clipping disabled
[spades]   0:04:41.277   151M / 977M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:04:41.277   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:41.288   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:41.288   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:41.296   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:41.296   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:04:41.304   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:04:41.304   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:04:41.312   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:04:41.312   151M / 977M  INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges
[spades]   0:04:41.322   151M / 977M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges
[spades]   0:04:41.346   150M / 977M  INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 18426 times
[spades]   0:04:41.347   150M / 977M  INFO    General                 (simplification.cpp        : 495)   After simplification:
[spades]   0:04:41.347   150M / 977M  INFO    General                 (simplification.cpp        : 496)     Average coverage = 33.0212
[spades]   0:04:41.348   150M / 977M  INFO    General                 (simplification.cpp        : 497)     Total length = 11209514
[spades]   0:04:41.349   150M / 977M  INFO    General                 (simplification.cpp        : 498)     Median edge length: 7992
[spades]   0:04:41.349   150M / 977M  INFO    General                 (simplification.cpp        : 499)     Edges: 12020
[spades]   0:04:41.349   150M / 977M  INFO    General                 (simplification.cpp        : 500)     Vertices: 19886
[spades]   0:04:41.349   150M / 977M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)
[spades]   0:04:41.352   150M / 977M  INFO    General                 (read_converter.cpp        : 107)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K67/simplified_contigs
[spades]   0:04:41.384   152M / 977M  INFO    General                 (binary_converter.cpp      : 111)   6010 reads written
[spades]   0:04:41.399   150M / 977M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished
[spades]   0:04:41.516     1M / 977M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 4 minutes 41 seconds
[spades] 
[spades] ===== K67 finished. 
[spades] 
[spades] 
[spades] ===== K85 started. 
[spades] 
[spades] 
[spades] == Running: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/spades-core /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K85/configs/config.info /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K85/configs/isolate_mode.info
[spades] 
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K85/configs/config.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K85/configs/isolate_mode.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 1024 Gb
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/panfs/roles/BF/Assembly/363192065_S248_L001/spades/dataset.info) with K=85
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40
[spades]   0:00:00.000     1M / 25M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 242)   Will need read mapping, kmer mapper will be attached
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (read_converter.cpp        :  53)   Binary reads detected
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (construction.cpp          : 118)   Contigs from previous K will be used: /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K67/simplified_contigs
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 153)   Max read length 282
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 156)   Max read length without merged 151
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 159)   Average read length 169.095
[spades]   0:00:00.001     1M / 25M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:00:00.001     1M / 25M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 2236962
[spades]   0:00:04.266   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 501460 reads
[spades]   0:00:08.379   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1001796 reads
[spades]   0:00:12.490   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1503103 reads
[spades]   0:00:16.598   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2003194 reads
[spades]   0:00:20.701   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2505505 reads
[spades]   0:00:24.838   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3006843 reads
[spades]   0:00:28.940   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3505551 reads
[spades]   0:00:37.181   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4503576 reads
[spades]   0:00:59.864     1M / 580M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 7420694 reads
[spades]   0:00:59.865     1M / 580M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:04.691     1M / 580M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 18476950 kmers in total.
[spades]   0:01:04.691     1M / 580M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)
[spades]   0:01:04.691     1M / 580M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index
[spades]   0:01:04.691     1M / 580M  INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:01:04.691     1M / 580M  INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:01:04.691     1M / 580M  INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:01:04.691     1M / 580M  INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 2236962
[spades]   0:01:08.766   601M / 745M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 9832342 kmers
[spades]   0:01:12.326   601M / 979M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 18476955 kmers
[spades]   0:01:12.326   601M / 979M  INFO    General                 (kmer_splitters.hpp        : 199)   Used 18476955 kmers.
[spades]   0:01:12.326     1M / 979M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:13.264     1M / 979M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 18498358 kmers in total.
[spades]   0:01:13.264     1M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:01:16.161    15M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 18498358 kmers, 13367960 bytes occupied (5.78125 bits per kmer).
[spades]   0:01:16.161    15M / 979M  INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.
[spades]   0:01:16.470    33M / 979M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers
[spades]   0:01:24.593    33M / 979M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.
[spades]   0:01:24.615    33M / 979M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)
[spades]   0:01:24.615    33M / 979M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths
[spades]   0:01:35.439    51M / 979M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 262016 sequences extracted
[spades]   0:01:40.925    51M / 979M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops
[spades]   0:01:42.650    51M / 979M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected
[spades]   0:01:42.677    51M / 979M  INFO    General                 (debruijn_graph_constructor: 487)   Total 524032 edges to create
[spades]   0:01:42.677    72M / 979M  INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records
[spades]   0:01:42.907    80M / 979M  INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records
[spades]   0:01:42.947    80M / 979M  INFO    General                 (debruijn_graph_constructor: 493)   Sorting done
[spades]   0:01:42.950    84M / 979M  INFO    General                 (debruijn_graph_constructor: 503)   Total 283424 vertices to create
[spades]   0:01:42.950   111M / 979M  INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph
[spades]   0:01:42.990    95M / 979M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)
[spades]   0:01:42.990    95M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:01:45.755   109M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 18476950 kmers, 13352496 bytes occupied (5.78126 bits per kmer).
[spades]   0:01:45.761   182M / 979M  INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.
[spades]   0:02:58.819   182M / 979M  INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM
[spades]   0:03:07.298   182M / 979M  INFO    General                 (coverage_filling.hpp      :  82)   Processed 524031 edges
[spades]   0:03:07.476    63M / 979M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)
[spades]   0:03:07.476    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 11
[spades]   0:03:07.476    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 44
[spades]   0:03:07.476    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 46. Coverage mad: 11.8608
[spades]   0:03:07.476    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model
[spades]   0:03:07.523    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2
[spades]   0:03:07.648    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4
[spades]   0:03:08.085    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8
[spades]   0:03:08.748    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 46.0734. Fitted coverage std. dev: 9.96372
[spades]   0:03:08.750    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.953317
[spades]   0:03:08.750    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 22
[spades]   0:03:08.750    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 22
[spades]   0:03:08.750    63M / 979M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 6257152
[spades]   0:03:08.750    63M / 979M  INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 46.0734
[spades]   0:03:08.750    63M / 979M  INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 22
[spades]   0:03:08.750    63M / 979M  INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0
[spades]   0:03:08.750    63M / 979M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: early_gapcloser)
[spades]   0:03:08.759    72M / 979M  INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:03:08.857    77M / 979M  INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 179487 out of 524031, length: 11334557
[spades]   0:03:08.866    79M / 979M  INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 526655)
[spades]   0:03:09.251    79M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:03:11.352    85M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 8465668 kmers, 6115176 bytes occupied (5.7788 bits per kmer).
[spades]   0:03:11.358   153M / 979M  INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.
[spades]   0:03:20.123   151M / 979M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:03:27.157   152M / 979M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:03:27.534   152M / 979M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 410707 reads processed
[spades]   0:03:27.542    73M / 979M  INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer
[spades]   0:03:27.542    73M / 979M  INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps
[spades]   0:03:27.692    73M / 979M  INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 81 gaps after checking 1293 candidates
[spades]   0:03:27.698    73M / 979M  INFO    General                 (gap_closer.cpp            : 456)   Gap closer done
[spades]   0:03:27.700    63M / 979M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)
[spades]   0:03:27.700    63M / 979M  INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning
[spades]   0:03:27.700    63M / 979M  INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled
[spades]   0:03:27.700    63M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover
[spades]   0:03:27.730    63M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times
[spades]   0:03:27.730    63M / 979M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)
[spades]   0:03:27.730    63M / 979M  INFO    General                 (simplification.cpp        : 368)   Graph simplification started
[spades]   0:03:27.731    63M / 979M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:03:27.731    63M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1
[spades]   0:03:27.731    63M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:28.273    55M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 92398 times
[spades]   0:03:28.273    55M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:28.896   109M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 4078 times
[spades]   0:03:28.896   109M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.113   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 9556 times
[spades]   0:03:29.114   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2
[spades]   0:03:29.114   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.119   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 110 times
[spades]   0:03:29.119   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.121   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 6 times
[spades]   0:03:29.121   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 163 times
[spades]   0:03:29.136   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:03:29.136   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.136   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 9 times
[spades]   0:03:29.137   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 4 times
[spades]   0:03:29.137   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.137   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 4 times
[spades]   0:03:29.138   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 7
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:03:29.138   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 8
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.138   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.139   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 10 times
[spades]   0:03:29.139   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 9
[spades]   0:03:29.139   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.139   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.139   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.139   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.139   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.140   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 2 times
[spades]   0:03:29.140   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 10
[spades]   0:03:29.140   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.140   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.140   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.140   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.140   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.141   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 2 times
[spades]   0:03:29.141   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 11
[spades]   0:03:29.141   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.157   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 3 times
[spades]   0:03:29.157   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.168   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.168   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.179   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:03:29.179   108M / 979M  INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 12
[spades]   0:03:29.179   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:29.179   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:29.179   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:29.179   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:29.179   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:03:29.179   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:03:29.184   108M / 979M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: late_gapcloser)
[spades]   0:03:29.193   117M / 979M  INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:03:29.224   119M / 979M  INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 71033 out of 72972, length: 13752469
[spades]   0:03:29.226   120M / 979M  INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 526655)
[spades]   0:03:29.488   120M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:03:31.030   125M / 979M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 7157738 kmers, 5174394 bytes occupied (5.78327 bits per kmer).
[spades]   0:03:31.035   181M / 979M  INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.
[spades]   0:03:44.120   181M / 979M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:03:55.833   181M / 979M  INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:03:56.458   181M / 979M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 410707 reads processed
[spades]   0:03:56.466   118M / 979M  INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer
[spades]   0:03:56.466   118M / 979M  INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps
[spades]   0:03:56.492   118M / 979M  INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 5 gaps after checking 517 candidates
[spades]   0:03:56.497   118M / 979M  INFO    General                 (gap_closer.cpp            : 456)   Gap closer done
[spades]   0:03:56.500   108M / 979M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)
[spades]   0:03:56.500   108M / 979M  INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification
[spades]   0:03:56.500   108M / 979M  INFO    General                 (graph_simplification.hpp  : 448)   Disconnection of relatively low covered edges disabled
[spades]   0:03:56.500   108M / 979M  INFO    General                 (graph_simplification.hpp  : 485)   Complex tip clipping disabled
[spades]   0:03:56.500   108M / 979M  INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:03:56.500   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.516   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.516   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.527   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.527   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:56.542   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:56.542   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:56.553   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:56.553   108M / 979M  INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges
[spades]   0:03:56.569   108M / 979M  INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges
[spades]   0:03:56.610   106M / 979M  INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 31078 times
[spades]   0:03:56.612   106M / 979M  INFO    General                 (simplification.cpp        : 495)   After simplification:
[spades]   0:03:56.612   106M / 979M  INFO    General                 (simplification.cpp        : 496)     Average coverage = 27.3637
[spades]   0:03:56.613   106M / 979M  INFO    General                 (simplification.cpp        : 497)     Total length = 11090561
[spades]   0:03:56.613   106M / 979M  INFO    General                 (simplification.cpp        : 498)     Median edge length: 12370
[spades]   0:03:56.614   106M / 979M  INFO    General                 (simplification.cpp        : 499)     Edges: 10806
[spades]   0:03:56.614   106M / 979M  INFO    General                 (simplification.cpp        : 500)     Vertices: 18990
[spades]   0:03:56.614   106M / 979M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)
[spades]   0:03:56.617   106M / 979M  INFO    General                 (read_converter.cpp        : 107)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K85/simplified_contigs
[spades]   0:03:56.646   109M / 979M  INFO    General                 (binary_converter.cpp      : 111)   5403 reads written
[spades]   0:03:56.661   106M / 979M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished
[spades]   0:03:56.745     1M / 979M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 3 minutes 56 seconds
[spades] 
[spades] ===== K85 finished. 
[spades] 
[spades] 
[spades] ===== K103 started. 
[spades] 
[spades] 
[spades] == Running: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/spades-core /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/configs/config.info /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/configs/isolate_mode.info
[spades] 
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/configs/config.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  :  99)   Loaded config from /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/configs/isolate_mode.info
[spades]   0:00:00.000     1M / 25M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 1024 Gb
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/panfs/roles/BF/Assembly/363192065_S248_L001/spades/dataset.info) with K=103
[spades]   0:00:00.000     1M / 25M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3
[spades]   0:00:00.000     1M / 25M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40
[spades]   0:00:00.000     1M / 25M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:00:00.000     1M / 25M   INFO    General                 (pipeline.cpp              : 242)   Will need read mapping, kmer mapper will be attached
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (read_converter.cpp        :  53)   Binary reads detected
[spades]   0:00:00.000     1M / 25M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)
[spades]   0:00:00.000     1M / 25M   INFO    General                 (construction.cpp          : 118)   Contigs from previous K will be used: /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K85/simplified_contigs
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 153)   Max read length 282
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 156)   Max read length without merged 151
[spades]   0:00:00.001     1M / 25M   INFO    General                 (construction.cpp          : 159)   Average read length 169.095
[spades]   0:00:00.001     1M / 25M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:00:00.001     1M / 25M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:00:00.001     1M / 25M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 1677721
[spades]   0:00:03.341   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 471570 reads
[spades]   0:00:06.489   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 941240 reads
[spades]   0:00:09.658   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1411922 reads
[spades]   0:00:12.815   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1881715 reads
[spades]   0:00:15.977   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2352902 reads
[spades]   0:00:19.142   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2825392 reads
[spades]   0:00:22.314   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3293373 reads
[spades]   0:00:28.665   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4229007 reads
[spades]   0:00:48.661     1M / 582M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 7419480 reads
[spades]   0:00:48.662     1M / 582M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:00:53.945     1M / 582M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 17813119 kmers in total.
[spades]   0:00:53.945     1M / 582M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)
[spades]   0:00:53.945     1M / 582M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index
[spades]   0:00:53.945     1M / 582M  INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.
[spades]   0:00:53.945     1M / 582M  INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 131072
[spades]   0:00:53.945     1M / 582M  INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 341.333 Gb
[spades]   0:00:53.945     1M / 582M  INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 1677721
[spades]   0:00:56.707   601M / 685M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 6649818 kmers
[spades]   0:00:59.419   601M / 944M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 13304923 kmers
[spades]   0:01:01.232   601M / 1094M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 17813129 kmers
[spades]   0:01:01.232   601M / 1094M INFO    General                 (kmer_splitters.hpp        : 199)   Used 17813129 kmers.
[spades]   0:01:01.232     1M / 1094M INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.
[spades]   0:01:02.454     1M / 1094M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 17860162 kmers in total.
[spades]   0:01:02.454     1M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:01:05.269    14M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 17860162 kmers, 12907192 bytes occupied (5.78144 bits per kmer).
[spades]   0:01:05.269    14M / 1094M INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.
[spades]   0:01:05.639    32M / 1094M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers
[spades]   0:01:13.366    32M / 1094M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.
[spades]   0:01:13.393    32M / 1094M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)
[spades]   0:01:13.394    32M / 1094M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths
[spades]   0:01:23.623    49M / 1094M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 235758 sequences extracted
[spades]   0:01:28.956    49M / 1094M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops
[spades]   0:01:30.666    49M / 1094M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected
[spades]   0:01:30.694    49M / 1094M INFO    General                 (debruijn_graph_constructor: 487)   Total 471516 edges to create
[spades]   0:01:30.694    68M / 1094M INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records
[spades]   0:01:30.931    75M / 1094M INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records
[spades]   0:01:30.967    75M / 1094M INFO    General                 (debruijn_graph_constructor: 493)   Sorting done
[spades]   0:01:30.969    79M / 1094M INFO    General                 (debruijn_graph_constructor: 503)   Total 282801 vertices to create
[spades]   0:01:30.969   106M / 1094M INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph
[spades]   0:01:31.007    91M / 1094M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)
[spades]   0:01:31.007    91M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:01:33.806   104M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 17813119 kmers, 12873056 bytes occupied (5.78138 bits per kmer).
[spades]   0:01:33.812   173M / 1094M INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.
[spades]   0:02:32.167   173M / 1094M INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM
[spades]   0:02:40.480   173M / 1094M INFO    General                 (coverage_filling.hpp      :  82)   Processed 471515 edges
[spades]   0:02:40.674    60M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)
[spades]   0:02:40.674    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 8
[spades]   0:02:40.674    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 34
[spades]   0:02:40.674    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 36. Coverage mad: 10.3782
[spades]   0:02:40.674    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model
[spades]   0:02:40.712    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2
[spades]   0:02:40.811    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4
[spades]   0:02:41.162    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8
[spades]   0:02:41.641    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 36.0727. Fitted coverage std. dev: 8.50267
[spades]   0:02:41.642    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.920453
[spades]   0:02:41.642    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 16
[spades]   0:02:41.642    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 16
[spades]   0:02:41.642    60M / 1094M INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 6261264
[spades]   0:02:41.642    60M / 1094M INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 36.0727
[spades]   0:02:41.642    60M / 1094M INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 16
[spades]   0:02:41.642    60M / 1094M INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0
[spades]   0:02:41.642    60M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: early_gapcloser)
[spades]   0:02:41.652    69M / 1094M INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:02:41.747    74M / 1094M INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 203347 out of 471515, length: 12002451
[spades]   0:02:41.757    77M / 1094M INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 473876)
[spades]   0:02:42.178    77M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:02:44.433    83M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 8641575 kmers, 6242232 bytes occupied (5.77879 bits per kmer).
[spades]   0:02:44.440   151M / 1094M INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.
[spades]   0:02:51.636   149M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:02:57.021   150M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:02:57.310   150M / 1094M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 410707 reads processed
[spades]   0:02:57.318    71M / 1094M INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer
[spades]   0:02:57.318    71M / 1094M INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps
[spades]   0:02:57.460    71M / 1094M INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 86 gaps after checking 1177 candidates
[spades]   0:02:57.466    71M / 1094M INFO    General                 (gap_closer.cpp            : 456)   Gap closer done
[spades]   0:02:57.468    60M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)
[spades]   0:02:57.468    60M / 1094M INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning
[spades]   0:02:57.468    60M / 1094M INFO    General                 (simplification.cpp        :  61)   Most init cleaning disabled on main iteration
[spades]   0:02:57.468    60M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover
[spades]   0:02:57.496    60M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times
[spades]   0:02:57.496    60M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)
[spades]   0:02:57.496    60M / 1094M INFO    General                 (simplification.cpp        : 368)   Graph simplification started
[spades]   0:02:57.496    60M / 1094M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:02:57.496    60M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1
[spades]   0:02:57.496    60M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.022    54M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 82336 times
[spades]   0:02:58.025    54M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.323    81M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1619 times
[spades]   0:02:58.323    81M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.447    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 3896 times
[spades]   0:02:58.448    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2
[spades]   0:02:58.448    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.449    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 41 times
[spades]   0:02:58.449    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.450    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 2 times
[spades]   0:02:58.450    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.502    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 385 times
[spades]   0:02:58.502    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3
[spades]   0:02:58.502    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.502    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2 times
[spades]   0:02:58.502    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.502    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.502    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 11 times
[spades]   0:02:58.504    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 5 times
[spades]   0:02:58.504    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.504    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:02:58.505    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 4 times
[spades]   0:02:58.505    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 7
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:02:58.505    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 8
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.505    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.506    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 6 times
[spades]   0:02:58.506    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 9
[spades]   0:02:58.506    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.506    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.506    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.506    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.506    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 7 times
[spades]   0:02:58.507    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 10
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 1 times
[spades]   0:02:58.507    80M / 1094M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 11
[spades]   0:02:58.507    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:02:58.529    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:02:58.530    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:02:58.543    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:02:58.544    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover
[spades]   0:02:58.557    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times
[spades]   0:02:58.562    80M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: late_gapcloser)
[spades]   0:02:58.570    89M / 1094M INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8
[spades]   0:02:58.609    91M / 1094M INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 106274 out of 107586, length: 14615376
[spades]   0:02:58.612    92M / 1094M INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 473876)
[spades]   0:02:58.917    92M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:03:00.663    98M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 7609166 kmers, 5512848 bytes occupied (5.79601 bits per kmer).
[spades]   0:03:00.667   158M / 1094M INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.
[spades]   0:03:10.602   157M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:03:19.404   158M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:03:19.891   158M / 1094M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 410707 reads processed
[spades]   0:03:19.901    91M / 1094M INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer
[spades]   0:03:19.901    91M / 1094M INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps
[spades]   0:03:19.937    91M / 1094M INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 8 gaps after checking 580 candidates
[spades]   0:03:19.942    91M / 1094M INFO    General                 (gap_closer.cpp            : 456)   Gap closer done
[spades]   0:03:19.945    80M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)
[spades]   0:03:19.945    80M / 1094M INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification
[spades]   0:03:19.945    80M / 1094M INFO    General                 (graph_simplification.hpp  : 448)   Disconnection of relatively low covered edges disabled
[spades]   0:03:19.945    80M / 1094M INFO    General                 (graph_simplification.hpp  : 485)   Complex tip clipping disabled
[spades]   0:03:19.945    80M / 1094M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance
[spades]   0:03:19.945    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:19.967    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:19.967    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:19.982    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:19.982    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper
[spades]   0:03:20.004    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times
[spades]   0:03:20.004    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover
[spades]   0:03:20.019    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times
[spades]   0:03:20.019    80M / 1094M INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges
[spades]   0:03:20.043    80M / 1094M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges
[spades]   0:03:20.109    78M / 1094M INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 48790 times
[spades]   0:03:20.112    77M / 1094M INFO    General                 (simplification.cpp        : 495)   After simplification:
[spades]   0:03:20.112    77M / 1094M INFO    General                 (simplification.cpp        : 496)     Average coverage = 21.6671
[spades]   0:03:20.113    77M / 1094M INFO    General                 (simplification.cpp        : 497)     Total length = 10961355
[spades]   0:03:20.113    77M / 1094M INFO    General                 (simplification.cpp        : 498)     Median edge length: 20513
[spades]   0:03:20.113    77M / 1094M INFO    General                 (simplification.cpp        : 499)     Edges: 9990
[spades]   0:03:20.113    77M / 1094M INFO    General                 (simplification.cpp        : 500)     Vertices: 18208
[spades]   0:03:20.113    77M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Mismatch Correction (id: mismatch_correction)
[spades]   0:03:20.114    77M / 1094M INFO    General                 (graph_pack.cpp            :  67)   Index refill
[spades]   0:03:20.114    77M / 1094M INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 473876)
[spades]   0:03:20.496    77M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices
[spades]   0:03:22.824    85M / 1094M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 10961355 kmers, 7917720 bytes occupied (5.77864 bits per kmer).
[spades]   0:03:22.833   169M / 1094M INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.
[spades]   0:03:25.237   169M / 1094M INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 346758 kmers to process
[spades]   0:03:25.400   169M / 1094M INFO    General                 (graph_pack.cpp            :  79)   Normalizing done
[spades]   0:03:25.400   169M / 1094M INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches
[spades]   0:03:25.923   170M / 1094M INFO    General                 (mismatch_correction.cpp   : 192)   Total 700 edges (out of 9990) with 35996 potential mismatch positions (51.4229 positions per edge)
[spades]   0:03:25.923   170M / 1094M INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected
[spades]   0:03:27.017   172M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:03:28.113   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:03:29.196   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads
[spades]   0:03:30.256   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads
[spades]   0:03:31.326   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads
[spades]   0:03:32.393   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads
[spades]   0:03:37.943   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads
[spades]   0:03:49.027   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads
[spades]   0:04:05.763   175M / 1094M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 7408674 reads processed
[spades]   0:04:05.814   172M / 1094M INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed
[spades]   0:04:05.814   169M / 1094M INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides
[spades]   0:04:05.814   169M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)
[spades]   0:04:05.814   169M / 1094M INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/before_rr.fasta
[spades]   0:04:05.959   169M / 1094M INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/assembly_graph_after_simplification.gfa
[spades]   0:04:06.070   169M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)
[spades]   0:04:06.080   171M / 1094M INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 346758 kmers to process
[spades]   0:04:06.080   171M / 1094M INFO    General                 (graph_pack.cpp            :  79)   Normalizing done
[spades]   0:04:06.081   171M / 1094M INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 20513
[spades]   0:04:06.081   171M / 1094M INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0
[spades]   0:04:06.081   171M / 1094M INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)
[spades]   0:04:06.083   203M / 1094M INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper
[spades]   0:04:07.335   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:04:08.622   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:04:09.548   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads
[spades]   0:04:10.460   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads
[spades]   0:04:11.364   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads
[spades]   0:04:12.264   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads
[spades]   0:04:16.786   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads
[spades]   0:04:21.777   203M / 1094M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 3293630 reads processed
[spades]   0:04:21.987   203M / 1094M INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 27853
[spades]   0:04:21.988   203M / 1094M INFO    General                 (pair_info_count.cpp       : 222)   2594968 paired reads (78.7875% of all) aligned to long edges
[spades]   0:04:21.988   171M / 1094M INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 196.537, deviation = 73.6574, left quantile = 117, right quantile = 294, read length = 151
[spades]   0:04:21.988   171M / 1094M INFO    General                 (pair_info_count.cpp       : 390)   Filtering data for library #0
[spades]   0:04:21.988   171M / 1094M INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper
[spades]   0:04:23.221   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:04:24.467   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:04:25.361   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads
[spades]   0:04:26.237   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads
[spades]   0:04:27.117   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads
[spades]   0:04:27.990   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads
[spades]   0:04:32.424   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads
[spades]   0:04:37.282   171M / 1094M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 3293630 reads processed
[spades]   0:04:37.282   171M / 1094M INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0
[spades]   0:04:37.282   171M / 1094M INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)
[spades]   0:04:37.282   171M / 1094M INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 117, right insert size quantile 294, filtering threshold 2, rounding threshold 0
[spades]   0:04:37.292   180M / 1094M INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper
[spades]   0:04:38.601   181M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads
[spades]   0:04:39.942   182M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads
[spades]   0:04:40.916   182M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads
[spades]   0:04:41.880   182M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads
[spades]   0:04:42.841   182M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads
[spades]   0:04:43.800   183M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads
[spades]   0:04:48.633   183M / 1094M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads
[spades]   0:04:53.938   184M / 1094M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 3293630 reads processed
[spades]   0:04:53.941   175M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)
[spades]   0:04:53.941   175M / 1094M INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0
[spades]   0:04:53.941   175M / 1094M INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done
[spades]   0:04:53.941   175M / 1094M INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator
[spades]   0:04:53.961   175M / 1094M INFO    General                 (distance_estimation.cpp   :  37)   Filtering info
[spades]   0:04:53.961   175M / 1094M INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 12402
[spades]   0:04:53.964   175M / 1094M INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 11898
[spades]   0:04:53.964   175M / 1094M INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information
[spades]   0:04:53.967   175M / 1094M INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished
[spades]   0:04:53.967   175M / 1094M INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information
[spades]   0:04:53.978   175M / 1094M INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 4; contradictional = 24
[spades]   0:04:53.990   175M / 1094M INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0
[spades]   0:04:53.990   175M / 1094M INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index
[spades]   0:04:53.990   175M / 1094M INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator
[spades]   0:04:56.119   175M / 1094M INFO    General                 (distance_estimation.cpp   :  37)   Filtering info
[spades]   0:04:56.120   175M / 1094M INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 10260
[spades]   0:04:56.122   175M / 1094M INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 10260
[spades]   0:04:56.122   175M / 1094M INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index
[spades]   0:04:56.123   171M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)
[spades]   0:04:56.123   171M / 1094M INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving
[spades]   0:04:56.123   171M / 1094M INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started
[spades]   0:04:56.137   192M / 1094M INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000
[spades]   0:04:56.137   192M / 1094M INFO    General                 (extenders_logic.cpp       : 334)   Estimated coverage of library #0 is 21.6671
[spades]   0:04:56.137   192M / 1094M INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 11882
[spades]   0:04:56.137   192M / 1094M INFO    General                 (extenders_logic.cpp       : 334)   Estimated coverage of library #0 is 21.6671
[spades]   0:04:56.137   192M / 1094M INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 11882
[spades]   0:04:56.139   194M / 1094M INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library
[spades]   0:04:56.140   194M / 1094M INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library
[spades]   0:04:56.140   194M / 1094M INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries
[spades]   0:04:56.140   194M / 1094M INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3
[spades]   0:04:56.140   194M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 0 paths from 4986 (0%)
[spades]   0:04:56.177   195M / 1094M INFO    General                 (path_extenders.cpp        :  34)   Processed 128 paths from 4986 (2%)
[spades]   0:04:56.185   196M / 1094M INFO    General                 (path_extenders.cpp        :  34)   Processed 256 paths from 4986 (5%)
[spades]   0:04:56.190   197M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 499 paths from 4986 (10%)
[spades]   0:04:56.191   197M / 1094M INFO    General                 (path_extenders.cpp        :  34)   Processed 512 paths from 4986 (10%)
[spades]   0:04:56.202   199M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 998 paths from 4986 (20%)
[spades]   0:04:56.203   199M / 1094M INFO    General                 (path_extenders.cpp        :  34)   Processed 1024 paths from 4986 (20%)
[spades]   0:04:56.214   201M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 1497 paths from 4986 (30%)
[spades]   0:04:56.228   203M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 1996 paths from 4986 (40%)
[spades]   0:04:56.229   203M / 1094M INFO    General                 (path_extenders.cpp        :  34)   Processed 2048 paths from 4986 (41%)
[spades]   0:04:56.237   205M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 2495 paths from 4986 (50%)
[spades]   0:04:56.248   207M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 2994 paths from 4986 (60%)
[spades]   0:04:56.256   209M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 3493 paths from 4986 (70%)
[spades]   0:04:56.263   211M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 3992 paths from 4986 (80%)
[spades]   0:04:56.264   211M / 1094M INFO    General                 (path_extenders.cpp        :  34)   Processed 4096 paths from 4986 (82%)
[spades]   0:04:56.270   213M / 1094M INFO    General                 (path_extenders.cpp        :  36)   Processed 4491 paths from 4986 (90%)
[spades]   0:04:56.276   214M / 1094M INFO    General                 (launcher.cpp              : 250)   Finalizing paths
[spades]   0:04:56.276   214M / 1094M INFO    General                 (launcher.cpp              : 252)   Deduplicating paths
[spades]   0:04:56.278   213M / 1094M INFO    General                 (launcher.cpp              : 256)   Paths deduplicated
[spades]   0:04:56.279   213M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps
[spades]   0:04:56.279   213M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths
[spades]   0:04:56.280   213M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps
[spades]   0:04:56.280   213M / 1094M INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps
[spades]   0:04:56.284   213M / 1094M INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps
[spades]   0:04:56.288   213M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths
[spades]   0:04:56.289   214M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths
[spades]   0:04:56.291   213M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed
[spades]   0:04:56.293   214M / 1094M INFO    General                 (launcher.cpp              : 273)   Paths finalized
[spades]   0:04:56.293   214M / 1094M INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths
[spades]   0:04:56.304   232M / 1094M INFO    General                 (launcher.cpp              : 484)   Gap closing completed
[spades]   0:04:56.307   232M / 1094M INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats
[spades]   0:04:56.329   232M / 1094M INFO    General                 (launcher.cpp              : 312)   Traversed 3 loops
[spades]   0:04:56.330   232M / 1094M INFO    General                 (launcher.cpp              : 250)   Finalizing paths
[spades]   0:04:56.330   232M / 1094M INFO    General                 (launcher.cpp              : 252)   Deduplicating paths
[spades]   0:04:56.331   232M / 1094M INFO    General                 (launcher.cpp              : 256)   Paths deduplicated
[spades]   0:04:56.331   232M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps
[spades]   0:04:56.331   232M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths
[spades]   0:04:56.333   232M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps
[spades]   0:04:56.333   232M / 1094M INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps
[spades]   0:04:56.335   232M / 1094M INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps
[spades]   0:04:56.338   232M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths
[spades]   0:04:56.339   232M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths
[spades]   0:04:56.340   232M / 1094M INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed
[spades]   0:04:56.342   232M / 1094M INFO    General                 (launcher.cpp              : 273)   Paths finalized
[spades]   0:04:56.342   232M / 1094M INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished
[spades]   0:04:56.351   189M / 1094M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)
[spades]   0:04:56.351   189M / 1094M INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/before_rr.fasta
[spades]   0:04:56.448   189M / 1094M INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/assembly_graph_with_scaffolds.gfa
[spades]   0:04:56.530   189M / 1094M INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/assembly_graph.fastg
[spades]   0:04:56.760   189M / 1094M INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds
[spades]   0:04:56.803   221M / 1094M INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/final_contigs.fasta
[spades]   0:04:56.913   221M / 1094M INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/final_contigs.paths
[spades]   0:04:56.968   202M / 1094M INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/scaffolds.fasta
[spades]   0:04:57.073   202M / 1094M INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/scaffolds.paths
[spades]   0:04:57.135   202M / 1094M INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths
[spades]   0:04:57.200   189M / 1094M INFO    General                 (pipeline.cpp              : 287)   SPAdes finished
[spades]   0:04:57.241     1M / 1094M INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 4 minutes 57 seconds
[spades] 
[spades] ===== K103 finished. 
[spades] 
[spades] 
[spades] ===== Copy files started. 
[spades] 
[spades] 
[spades] == Running: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/python /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/share/spades/spades_pipeline/scripts/copy_files.py /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/before_rr.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/before_rr.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/assembly_graph_after_simplification.gfa /panfs/roles/BF/Assembly/363192065_S248_L001/spades/assembly_graph_after_simplification.gfa /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/final_contigs.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/contigs.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/first_pe_contigs.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/first_pe_contigs.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/strain_graph.gfa /panfs/roles/BF/Assembly/363192065_S248_L001/spades/strain_graph.gfa /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/scaffolds.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/scaffolds.fasta /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/scaffolds.paths /panfs/roles/BF/Assembly/363192065_S248_L001/spades/scaffolds.paths /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/assembly_graph_with_scaffolds.gfa /panfs/roles/BF/Assembly/363192065_S248_L001/spades/assembly_graph_with_scaffolds.gfa /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/assembly_graph.fastg /panfs/roles/BF/Assembly/363192065_S248_L001/spades/assembly_graph.fastg /panfs/roles/BF/Assembly/363192065_S248_L001/spades/K103/final_contigs.paths /panfs/roles/BF/Assembly/363192065_S248_L001/spades/contigs.paths
[spades] 
[spades] 
[spades] ===== Copy files finished. 
[spades] 
[spades] 
[spades] ===== Assembling finished. 
[spades] 
[spades] 
[spades] ===== Breaking scaffolds started. 
[spades] 
[spades] 
[spades] == Running: /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/bin/python /panfs/roles/Panpiper/.snakemake/conda/ce62df1b0ea5d66ab9873ddc6bc2ca6f_/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /panfs/roles/BF/Assembly/363192065_S248_L001/spades/scaffolds.fasta --misc_dir /panfs/roles/BF/Assembly/363192065_S248_L001/spades/misc --threshold_for_breaking_scaffolds 3
[spades] 
[spades] 
[spades] ===== Breaking scaffolds finished. 
[spades] 
[spades] 
[spades] ===== Terminate started. 
[spades] 
[spades] 
[spades] ===== Terminate finished. 
[spades] 
[spades]  * Assembled contigs are in /panfs/roles/BF/Assembly/363192065_S248_L001/spades/contigs.fasta
[spades]  * Assembled scaffolds are in /panfs/roles/BF/Assembly/363192065_S248_L001/spades/scaffolds.fasta
[spades]  * Paths in the assembly graph corresponding to the contigs are in /panfs/roles/BF/Assembly/363192065_S248_L001/spades/contigs.paths
[spades]  * Paths in the assembly graph corresponding to the scaffolds are in /panfs/roles/BF/Assembly/363192065_S248_L001/spades/scaffolds.paths
[spades]  * Assembly graph is in /panfs/roles/BF/Assembly/363192065_S248_L001/spades/assembly_graph.fastg
[spades]  * Assembly graph in GFA format is in /panfs/roles/BF/Assembly/363192065_S248_L001/spades/assembly_graph_with_scaffolds.gfa
[spades] 
[spades] ======= SPAdes pipeline finished.
[spades] 
[spades] SPAdes log can be found here: /panfs/roles/BF/Assembly/363192065_S248_L001/spades/spades.log
[spades] 
[spades] Thank you for using SPAdes!
[shovill] User supplied --nocorr, so not correcting contigs.
[shovill] Removing low coverage contig (< 2 x): NODE_62_length_15555_cov_1.877686
[shovill] Removing low coverage contig (< 2 x): NODE_63_length_15233_cov_1.787244
[shovill] Removing low coverage contig (< 2 x): NODE_64_length_12064_cov_1.750272
[shovill] Removing low coverage contig (< 2 x): NODE_65_length_10255_cov_1.363968
[shovill] Removing low coverage contig (< 2 x): NODE_70_length_7767_cov_1.892223
[shovill] Removing low coverage contig (< 2 x): NODE_71_length_7616_cov_1.579529
[shovill] Removing low coverage contig (< 2 x): NODE_72_length_7353_cov_1.374345
[shovill] Removing low coverage contig (< 2 x): NODE_74_length_7056_cov_1.663167
[shovill] Removing low coverage contig (< 2 x): NODE_76_length_6649_cov_1.894745
[shovill] Removing low coverage contig (< 2 x): NODE_77_length_6618_cov_1.958864
[shovill] Removing low coverage contig (< 2 x): NODE_79_length_6532_cov_1.877430
[shovill] Removing low coverage contig (< 2 x): NODE_80_length_6317_cov_1.647570
[shovill] Removing low coverage contig (< 2 x): NODE_81_length_6300_cov_1.665161
[shovill] Removing low coverage contig (< 2 x): NODE_84_length_6239_cov_1.433344
[shovill] Removing low coverage contig (< 2 x): NODE_87_length_6195_cov_1.998030
[shovill] Removing low coverage contig (< 2 x): NODE_90_length_6044_cov_1.567245
[shovill] Removing low coverage contig (< 2 x): NODE_91_length_5859_cov_1.457609
[shovill] Removing low coverage contig (< 2 x): NODE_92_length_5855_cov_1.653338
[shovill] Removing low coverage contig (< 2 x): NODE_93_length_5836_cov_1.660213
[shovill] Removing low coverage contig (< 2 x): NODE_94_length_5817_cov_1.621981
[shovill] Removing low coverage contig (< 2 x): NODE_95_length_5798_cov_1.767691
[shovill] Removing low coverage contig (< 2 x): NODE_96_length_5705_cov_1.549625
[shovill] Removing low coverage contig (< 2 x): NODE_97_length_5571_cov_1.529078
[shovill] Removing low coverage contig (< 2 x): NODE_98_length_5475_cov_1.765450
[shovill] Removing low coverage contig (< 2 x): NODE_99_length_5443_cov_1.931835
[shovill] Removing low coverage contig (< 2 x): NODE_101_length_5415_cov_1.940136
[shovill] Removing low coverage contig (< 2 x): NODE_103_length_5388_cov_1.592810
[shovill] Removing low coverage contig (< 2 x): NODE_105_length_5333_cov_1.972275
[shovill] Removing low coverage contig (< 2 x): NODE_106_length_5326_cov_1.351522
[shovill] Removing low coverage contig (< 2 x): NODE_107_length_5292_cov_1.562536
[shovill] Removing low coverage contig (< 2 x): NODE_109_length_5250_cov_1.637653
[shovill] Removing low coverage contig (< 2 x): NODE_110_length_5236_cov_1.762517
[shovill] Removing low coverage contig (< 2 x): NODE_111_length_5196_cov_1.510701
[shovill] Removing low coverage contig (< 2 x): NODE_113_length_5142_cov_1.685255
[shovill] Removing low coverage contig (< 2 x): NODE_114_length_5047_cov_1.540655
[shovill] Removing low coverage contig (< 2 x): NODE_115_length_5035_cov_1.984793
[shovill] Removing low coverage contig (< 2 x): NODE_116_length_4997_cov_1.940744
[shovill] Removing low coverage contig (< 2 x): NODE_117_length_4926_cov_1.538669
[shovill] Removing low coverage contig (< 2 x): NODE_119_length_4920_cov_1.542246
[shovill] Removing low coverage contig (< 2 x): NODE_120_length_4917_cov_1.514749
[shovill] Removing low coverage contig (< 2 x): NODE_121_length_4898_cov_1.784984
[shovill] Removing low coverage contig (< 2 x): NODE_122_length_4873_cov_1.480922
[shovill] Removing low coverage contig (< 2 x): NODE_123_length_4839_cov_1.657728
[shovill] Removing low coverage contig (< 2 x): NODE_124_length_4822_cov_1.593558
[shovill] Removing low coverage contig (< 2 x): NODE_125_length_4786_cov_1.620115
[shovill] Removing low coverage contig (< 2 x): NODE_126_length_4766_cov_1.553077
[shovill] Removing low coverage contig (< 2 x): NODE_127_length_4761_cov_1.682911
[shovill] Removing low coverage contig (< 2 x): NODE_128_length_4749_cov_1.984288
[shovill] Removing low coverage contig (< 2 x): NODE_129_length_4746_cov_1.385742
[shovill] Removing low coverage contig (< 2 x): NODE_130_length_4725_cov_1.672436
[shovill] Removing low coverage contig (< 2 x): NODE_131_length_4716_cov_1.577932
[shovill] Removing low coverage contig (< 2 x): NODE_132_length_4707_cov_1.423110
[shovill] Removing low coverage contig (< 2 x): NODE_134_length_4670_cov_1.766367
[shovill] Removing low coverage contig (< 2 x): NODE_136_length_4661_cov_1.630540
[shovill] Removing low coverage contig (< 2 x): NODE_137_length_4622_cov_1.736004
[shovill] Removing low coverage contig (< 2 x): NODE_138_length_4620_cov_1.583130
[shovill] Removing low coverage contig (< 2 x): NODE_139_length_4562_cov_1.793003
[shovill] Removing low coverage contig (< 2 x): NODE_140_length_4556_cov_1.528857
[shovill] Removing low coverage contig (< 2 x): NODE_141_length_4540_cov_1.724814
[shovill] Removing low coverage contig (< 2 x): NODE_142_length_4537_cov_1.701849
[shovill] Removing low coverage contig (< 2 x): NODE_143_length_4536_cov_1.559892
[shovill] Removing low coverage contig (< 2 x): NODE_144_length_4531_cov_1.583559
[shovill] Removing low coverage contig (< 2 x): NODE_145_length_4510_cov_1.533016
[shovill] Removing low coverage contig (< 2 x): NODE_146_length_4479_cov_1.646252
[shovill] Removing low coverage contig (< 2 x): NODE_149_length_4451_cov_1.804048
[shovill] Removing low coverage contig (< 2 x): NODE_152_length_4404_cov_1.706347
[shovill] Removing low coverage contig (< 2 x): NODE_153_length_4381_cov_1.575736
[shovill] Removing low coverage contig (< 2 x): NODE_154_length_4313_cov_1.734917
[shovill] Removing low coverage contig (< 2 x): NODE_155_length_4307_cov_1.554710
[shovill] Removing low coverage contig (< 2 x): NODE_160_length_4248_cov_1.629674
[shovill] Removing low coverage contig (< 2 x): NODE_161_length_4226_cov_1.654863
[shovill] Removing low coverage contig (< 2 x): NODE_162_length_4209_cov_1.637116
[shovill] Removing low coverage contig (< 2 x): NODE_163_length_4188_cov_1.771848
[shovill] Removing low coverage contig (< 2 x): NODE_165_length_4143_cov_1.550495
[shovill] Removing low coverage contig (< 2 x): NODE_167_length_4089_cov_1.537883
[shovill] Removing low coverage contig (< 2 x): NODE_169_length_4041_cov_1.441087
[shovill] Removing low coverage contig (< 2 x): NODE_170_length_4040_cov_1.570993
[shovill] Removing low coverage contig (< 2 x): NODE_171_length_4035_cov_1.712106
[shovill] Removing low coverage contig (< 2 x): NODE_172_length_4017_cov_1.752938
[shovill] Removing low coverage contig (< 2 x): NODE_174_length_4015_cov_1.370910
[shovill] Removing low coverage contig (< 2 x): NODE_176_length_3974_cov_1.851201
[shovill] Removing low coverage contig (< 2 x): NODE_177_length_3921_cov_1.428497
[shovill] Removing low coverage contig (< 2 x): NODE_178_length_3917_cov_1.860776
[shovill] Removing low coverage contig (< 2 x): NODE_179_length_3907_cov_1.829916
[shovill] Removing low coverage contig (< 2 x): NODE_180_length_3906_cov_1.521693
[shovill] Removing low coverage contig (< 2 x): NODE_181_length_3894_cov_1.728304
[shovill] Removing low coverage contig (< 2 x): NODE_182_length_3884_cov_1.843428
[shovill] Removing low coverage contig (< 2 x): NODE_183_length_3883_cov_1.330688
[shovill] Removing low coverage contig (< 2 x): NODE_184_length_3881_cov_1.849921
[shovill] Removing low coverage contig (< 2 x): NODE_185_length_3865_cov_1.521797
[shovill] Removing low coverage contig (< 2 x): NODE_186_length_3842_cov_1.925916
[shovill] Removing low coverage contig (< 2 x): NODE_187_length_3840_cov_1.872893
[shovill] Removing low coverage contig (< 2 x): NODE_188_length_3828_cov_1.403490
[shovill] Removing low coverage contig (< 2 x): NODE_189_length_3819_cov_1.695910
[shovill] Removing low coverage contig (< 2 x): NODE_190_length_3818_cov_1.438762
[shovill] Removing low coverage contig (< 2 x): NODE_191_length_3796_cov_1.373680
[shovill] Removing low coverage contig (< 2 x): NODE_192_length_3794_cov_1.949607
[shovill] Removing low coverage contig (< 2 x): NODE_194_length_3774_cov_1.512667
[shovill] Removing low coverage contig (< 2 x): NODE_195_length_3773_cov_1.576567
[shovill] Removing low coverage contig (< 2 x): NODE_197_length_3728_cov_1.906759
[shovill] Removing low coverage contig (< 2 x): NODE_198_length_3720_cov_1.959082
[shovill] Removing low coverage contig (< 2 x): NODE_199_length_3701_cov_1.691773
[shovill] Removing low coverage contig (< 2 x): NODE_201_length_3695_cov_1.786748
[shovill] Removing low coverage contig (< 2 x): NODE_202_length_3676_cov_1.071369
[shovill] Removing low coverage contig (< 2 x): NODE_203_length_3672_cov_1.850939
[shovill] Removing low coverage contig (< 2 x): NODE_206_length_3651_cov_1.679256
[shovill] Removing low coverage contig (< 2 x): NODE_205_length_3651_cov_1.802706
[shovill] Removing low coverage contig (< 2 x): NODE_204_length_3651_cov_1.866685
[shovill] Removing low coverage contig (< 2 x): NODE_207_length_3650_cov_1.559628
[shovill] Removing low coverage contig (< 2 x): NODE_208_length_3646_cov_1.761219
[shovill] Removing low coverage contig (< 2 x): NODE_209_length_3644_cov_1.929116
[shovill] Removing low coverage contig (< 2 x): NODE_210_length_3637_cov_1.597623
[shovill] Removing low coverage contig (< 2 x): NODE_211_length_3627_cov_1.649546
[shovill] Removing low coverage contig (< 2 x): NODE_213_length_3603_cov_1.749429
[shovill] Removing low coverage contig (< 2 x): NODE_214_length_3589_cov_1.920252
[shovill] Removing low coverage contig (< 2 x): NODE_216_length_3583_cov_1.412644
[shovill] Removing low coverage contig (< 2 x): NODE_217_length_3577_cov_1.552965
[shovill] Removing low coverage contig (< 2 x): NODE_220_length_3565_cov_1.462449
[shovill] Removing low coverage contig (< 2 x): NODE_219_length_3565_cov_1.735413
[shovill] Removing low coverage contig (< 2 x): NODE_221_length_3563_cov_1.715896
[shovill] Removing low coverage contig (< 2 x): NODE_223_length_3540_cov_1.356415
[shovill] Removing low coverage contig (< 2 x): NODE_225_length_3531_cov_1.780922
[shovill] Removing low coverage contig (< 2 x): NODE_226_length_3528_cov_1.634161
[shovill] Removing low coverage contig (< 2 x): NODE_227_length_3495_cov_1.784198
[shovill] Removing low coverage contig (< 2 x): NODE_228_length_3488_cov_1.849631
[shovill] Removing low coverage contig (< 2 x): NODE_229_length_3466_cov_1.694023
[shovill] Removing low coverage contig (< 2 x): NODE_231_length_3465_cov_1.469066
[shovill] Removing low coverage contig (< 2 x): NODE_232_length_3465_cov_1.307258
[shovill] Removing low coverage contig (< 2 x): NODE_234_length_3457_cov_1.505963
[shovill] Removing low coverage contig (< 2 x): NODE_235_length_3445_cov_1.636744
[shovill] Removing low coverage contig (< 2 x): NODE_238_length_3434_cov_1.539478
[shovill] Removing low coverage contig (< 2 x): NODE_237_length_3434_cov_1.596518
[shovill] Removing low coverage contig (< 2 x): NODE_239_length_3430_cov_1.806432
[shovill] Removing low coverage contig (< 2 x): NODE_241_length_3407_cov_1.891041
[shovill] Removing low coverage contig (< 2 x): NODE_242_length_3405_cov_1.556329
[shovill] Removing low coverage contig (< 2 x): NODE_243_length_3403_cov_1.373333
[shovill] Removing low coverage contig (< 2 x): NODE_244_length_3401_cov_1.549121
[shovill] Removing low coverage contig (< 2 x): NODE_245_length_3396_cov_1.622533
[shovill] Removing low coverage contig (< 2 x): NODE_246_length_3382_cov_1.883501
[shovill] Removing low coverage contig (< 2 x): NODE_247_length_3379_cov_1.675824
[shovill] Removing low coverage contig (< 2 x): NODE_248_length_3373_cov_1.661468
[shovill] Removing low coverage contig (< 2 x): NODE_249_length_3365_cov_1.529123
[shovill] Removing low coverage contig (< 2 x): NODE_250_length_3348_cov_1.797535
[shovill] Removing low coverage contig (< 2 x): NODE_251_length_3340_cov_1.595922
[shovill] Removing low coverage contig (< 2 x): NODE_252_length_3337_cov_1.295609
[shovill] Removing low coverage contig (< 2 x): NODE_254_length_3320_cov_1.858564
[shovill] Removing low coverage contig (< 2 x): NODE_255_length_3319_cov_1.564677
[shovill] Removing low coverage contig (< 2 x): NODE_257_length_3305_cov_1.755778
[shovill] Removing low coverage contig (< 2 x): NODE_258_length_3305_cov_1.422236
[shovill] Removing low coverage contig (< 2 x): NODE_259_length_3301_cov_1.560976
[shovill] Removing low coverage contig (< 2 x): NODE_260_length_3292_cov_1.740044
[shovill] Removing low coverage contig (< 2 x): NODE_262_length_3284_cov_1.461490
[shovill] Removing low coverage contig (< 2 x): NODE_261_length_3284_cov_1.629676
[shovill] Removing low coverage contig (< 2 x): NODE_263_length_3282_cov_1.343190
[shovill] Removing low coverage contig (< 2 x): NODE_264_length_3276_cov_1.695241
[shovill] Removing low coverage contig (< 2 x): NODE_266_length_3275_cov_1.596154
[shovill] Removing low coverage contig (< 2 x): NODE_265_length_3275_cov_1.860340
[shovill] Removing low coverage contig (< 2 x): NODE_267_length_3257_cov_1.555485
[shovill] Removing low coverage contig (< 2 x): NODE_268_length_3236_cov_1.916693
[shovill] Removing low coverage contig (< 2 x): NODE_269_length_3219_cov_1.700899
[shovill] Removing low coverage contig (< 2 x): NODE_270_length_3217_cov_1.549775
[shovill] Removing low coverage contig (< 2 x): NODE_272_length_3214_cov_1.333012
[shovill] Removing low coverage contig (< 2 x): NODE_271_length_3214_cov_1.943105
[shovill] Removing low coverage contig (< 2 x): NODE_274_length_3211_cov_1.451737
[shovill] Removing low coverage contig (< 2 x): NODE_275_length_3204_cov_1.291519
[shovill] Removing low coverage contig (< 2 x): NODE_276_length_3202_cov_1.831881
[shovill] Removing low coverage contig (< 2 x): NODE_279_length_3186_cov_1.206617
[shovill] Removing low coverage contig (< 2 x): NODE_280_length_3182_cov_1.296850
[shovill] Removing low coverage contig (< 2 x): NODE_281_length_3180_cov_1.391615
[shovill] Removing low coverage contig (< 2 x): NODE_282_length_3167_cov_1.892624
[shovill] Removing low coverage contig (< 2 x): NODE_283_length_3163_cov_1.425817
[shovill] Removing low coverage contig (< 2 x): NODE_284_length_3159_cov_1.809555
[shovill] Removing low coverage contig (< 2 x): NODE_285_length_3155_cov_1.827326
[shovill] Removing low coverage contig (< 2 x): NODE_286_length_3154_cov_1.401508
[shovill] Removing low coverage contig (< 2 x): NODE_287_length_3135_cov_1.535950
[shovill] Removing low coverage contig (< 2 x): NODE_288_length_3134_cov_1.792808
[shovill] Removing low coverage contig (< 2 x): NODE_289_length_3127_cov_1.646825
[shovill] Removing low coverage contig (< 2 x): NODE_291_length_3124_cov_1.346905
[shovill] Removing low coverage contig (< 2 x): NODE_290_length_3124_cov_1.573982
[shovill] Removing low coverage contig (< 2 x): NODE_292_length_3116_cov_1.597411
[shovill] Removing low coverage contig (< 2 x): NODE_293_length_3115_cov_1.640438
[shovill] Removing low coverage contig (< 2 x): NODE_294_length_3111_cov_1.350731
[shovill] Removing low coverage contig (< 2 x): NODE_295_length_3110_cov_1.614899
[shovill] Removing low coverage contig (< 2 x): NODE_297_length_3097_cov_1.844021
[shovill] Removing low coverage contig (< 2 x): NODE_298_length_3092_cov_1.671797
[shovill] Removing low coverage contig (< 2 x): NODE_299_length_3091_cov_1.378514
[shovill] Removing low coverage contig (< 2 x): NODE_300_length_3082_cov_1.975495
[shovill] Removing low coverage contig (< 2 x): NODE_302_length_3075_cov_1.753701
[shovill] Removing low coverage contig (< 2 x): NODE_303_length_3073_cov_1.240067
[shovill] Removing low coverage contig (< 2 x): NODE_305_length_3063_cov_1.508108
[shovill] Removing low coverage contig (< 2 x): NODE_308_length_3048_cov_1.485908
[shovill] Removing low coverage contig (< 2 x): NODE_309_length_3046_cov_1.724431
[shovill] Removing low coverage contig (< 2 x): NODE_310_length_3043_cov_1.817687
[shovill] Removing low coverage contig (< 2 x): NODE_311_length_3039_cov_1.383174
[shovill] Removing low coverage contig (< 2 x): NODE_312_length_3029_cov_1.692071
[shovill] Removing low coverage contig (< 2 x): NODE_313_length_3029_cov_1.569720
[shovill] Removing low coverage contig (< 2 x): NODE_314_length_3027_cov_1.601915
[shovill] Removing low coverage contig (< 2 x): NODE_315_length_3025_cov_1.724162
[shovill] Removing low coverage contig (< 2 x): NODE_316_length_3023_cov_1.661301
[shovill] Removing low coverage contig (< 2 x): NODE_317_length_3015_cov_1.892170
[shovill] Removing low coverage contig (< 2 x): NODE_318_length_3011_cov_1.704608
[shovill] Removing low coverage contig (< 2 x): NODE_319_length_3010_cov_1.607155
[shovill] Removing low coverage contig (< 2 x): NODE_320_length_3001_cov_1.861629
[shovill] Removing low coverage contig (< 2 x): NODE_321_length_2997_cov_1.665860
[shovill] Removing low coverage contig (< 2 x): NODE_322_length_2996_cov_1.597304
[shovill] Removing low coverage contig (< 2 x): NODE_323_length_2993_cov_1.622491
[shovill] Removing low coverage contig (< 2 x): NODE_324_length_2990_cov_1.860409
[shovill] Removing low coverage contig (< 2 x): NODE_325_length_2986_cov_1.387444
[shovill] Removing low coverage contig (< 2 x): NODE_326_length_2968_cov_1.774869
[shovill] Removing low coverage contig (< 2 x): NODE_327_length_2963_cov_1.400000
[shovill] Removing low coverage contig (< 2 x): NODE_328_length_2960_cov_1.721386
[shovill] Removing low coverage contig (< 2 x): NODE_329_length_2958_cov_1.943958
[shovill] Removing low coverage contig (< 2 x): NODE_330_length_2957_cov_1.601962
[shovill] Removing low coverage contig (< 2 x): NODE_332_length_2948_cov_1.478383
[shovill] Removing low coverage contig (< 2 x): NODE_333_length_2942_cov_1.587179
[shovill] Removing low coverage contig (< 2 x): NODE_334_length_2940_cov_1.710257
[shovill] Removing low coverage contig (< 2 x): NODE_335_length_2937_cov_1.449894
[shovill] Removing low coverage contig (< 2 x): NODE_336_length_2935_cov_1.852048
[shovill] Removing low coverage contig (< 2 x): NODE_337_length_2933_cov_1.783746
[shovill] Removing low coverage contig (< 2 x): NODE_339_length_2923_cov_1.511702
[shovill] Removing low coverage contig (< 2 x): NODE_341_length_2917_cov_1.099147
[shovill] Removing low coverage contig (< 2 x): NODE_342_length_2916_cov_1.746889
[shovill] Removing low coverage contig (< 2 x): NODE_343_length_2915_cov_1.782717
[shovill] Removing low coverage contig (< 2 x): NODE_345_length_2905_cov_1.314061
[shovill] Removing low coverage contig (< 2 x): NODE_346_length_2904_cov_1.830418
[shovill] Removing low coverage contig (< 2 x): NODE_347_length_2897_cov_1.435934
[shovill] Removing low coverage contig (< 2 x): NODE_348_length_2890_cov_1.138141
[shovill] Removing low coverage contig (< 2 x): NODE_349_length_2889_cov_1.246231
[shovill] Removing low coverage contig (< 2 x): NODE_350_length_2884_cov_1.514563
[shovill] Removing low coverage contig (< 2 x): NODE_351_length_2876_cov_1.283448
[shovill] Removing low coverage contig (< 2 x): NODE_352_length_2874_cov_1.180801
[shovill] Removing low coverage contig (< 2 x): NODE_354_length_2866_cov_1.833876
[shovill] Removing low coverage contig (< 2 x): NODE_355_length_2857_cov_1.336964
[shovill] Removing low coverage contig (< 2 x): NODE_356_length_2856_cov_1.269887
[shovill] Removing low coverage contig (< 2 x): NODE_357_length_2855_cov_1.689680
[shovill] Removing low coverage contig (< 2 x): NODE_358_length_2855_cov_1.523256
[shovill] Removing low coverage contig (< 2 x): NODE_359_length_2854_cov_1.594329
[shovill] Removing low coverage contig (< 2 x): NODE_360_length_2852_cov_1.467443
[shovill] Removing low coverage contig (< 2 x): NODE_362_length_2845_cov_1.850839
[shovill] Removing low coverage contig (< 2 x): NODE_363_length_2836_cov_1.842664
[shovill] Removing low coverage contig (< 2 x): NODE_364_length_2833_cov_1.452381
[shovill] Removing low coverage contig (< 2 x): NODE_366_length_2829_cov_1.963683
[shovill] Removing low coverage contig (< 2 x): NODE_367_length_2827_cov_1.505140
[shovill] Removing low coverage contig (< 2 x): NODE_368_length_2825_cov_1.647318
[shovill] Removing low coverage contig (< 2 x): NODE_369_length_2823_cov_1.402574
[shovill] Removing low coverage contig (< 2 x): NODE_370_length_2816_cov_1.178032
[shovill] Removing low coverage contig (< 2 x): NODE_371_length_2814_cov_1.187016
[shovill] Removing low coverage contig (< 2 x): NODE_372_length_2811_cov_1.699409
[shovill] Removing low coverage contig (< 2 x): NODE_374_length_2800_cov_1.801261
[shovill] Removing low coverage contig (< 2 x): NODE_375_length_2796_cov_1.222429
[shovill] Removing low coverage contig (< 2 x): NODE_376_length_2795_cov_1.622214
[shovill] Removing low coverage contig (< 2 x): NODE_377_length_2788_cov_1.852142
[shovill] Removing low coverage contig (< 2 x): NODE_378_length_2787_cov_1.488450
[shovill] Removing low coverage contig (< 2 x): NODE_380_length_2777_cov_1.232236
[shovill] Removing low coverage contig (< 2 x): NODE_381_length_2769_cov_1.624906
[shovill] Removing low coverage contig (< 2 x): NODE_383_length_2766_cov_1.597446
[shovill] Removing low coverage contig (< 2 x): NODE_384_length_2761_cov_1.724605
[shovill] Removing low coverage contig (< 2 x): NODE_385_length_2761_cov_1.559443
[shovill] Removing low coverage contig (< 2 x): NODE_386_length_2757_cov_1.415599
[shovill] Removing low coverage contig (< 2 x): NODE_388_length_2752_cov_1.323896
[shovill] Removing low coverage contig (< 2 x): NODE_390_length_2743_cov_1.526894
[shovill] Removing low coverage contig (< 2 x): NODE_391_length_2741_cov_1.506065
[shovill] Removing low coverage contig (< 2 x): NODE_393_length_2739_cov_1.641123
[shovill] Removing low coverage contig (< 2 x): NODE_392_length_2739_cov_1.728376
[shovill] Removing low coverage contig (< 2 x): NODE_394_length_2735_cov_1.859043
[shovill] Removing low coverage contig (< 2 x): NODE_397_length_2729_cov_1.991241
[shovill] Removing low coverage contig (< 2 x): NODE_399_length_2727_cov_1.417302
[shovill] Removing low coverage contig (< 2 x): NODE_401_length_2723_cov_1.395802
[shovill] Removing low coverage contig (< 2 x): NODE_402_length_2721_cov_1.472116
[shovill] Removing low coverage contig (< 2 x): NODE_403_length_2713_cov_1.697701
[shovill] Removing low coverage contig (< 2 x): NODE_404_length_2712_cov_1.776543
[shovill] Removing low coverage contig (< 2 x): NODE_405_length_2712_cov_1.670755
[shovill] Removing low coverage contig (< 2 x): NODE_406_length_2711_cov_1.618865
[shovill] Removing low coverage contig (< 2 x): NODE_407_length_2708_cov_1.368906
[shovill] Removing low coverage contig (< 2 x): NODE_408_length_2707_cov_1.793011
[shovill] Removing low coverage contig (< 2 x): NODE_409_length_2705_cov_1.685626
[shovill] Removing low coverage contig (< 2 x): NODE_411_length_2700_cov_1.704659
[shovill] Removing low coverage contig (< 2 x): NODE_412_length_2697_cov_1.374711
[shovill] Removing low coverage contig (< 2 x): NODE_415_length_2683_cov_1.356589
[shovill] Removing low coverage contig (< 2 x): NODE_416_length_2681_cov_1.646625
[shovill] Removing low coverage contig (< 2 x): NODE_417_length_2680_cov_1.551028
[shovill] Removing low coverage contig (< 2 x): NODE_418_length_2674_cov_1.185142
[shovill] Removing low coverage contig (< 2 x): NODE_419_length_2672_cov_1.982483
[shovill] Removing low coverage contig (< 2 x): NODE_420_length_2663_cov_1.881641
[shovill] Removing low coverage contig (< 2 x): NODE_421_length_2661_cov_1.805317
[shovill] Removing low coverage contig (< 2 x): NODE_422_length_2658_cov_1.987476
[shovill] Removing low coverage contig (< 2 x): NODE_424_length_2651_cov_1.513344
[shovill] Removing low coverage contig (< 2 x): NODE_425_length_2641_cov_1.957841
[shovill] Removing low coverage contig (< 2 x): NODE_426_length_2640_cov_1.266456
[shovill] Removing low coverage contig (< 2 x): NODE_427_length_2634_cov_1.890162
[shovill] Removing low coverage contig (< 2 x): NODE_428_length_2633_cov_1.580632
[shovill] Removing low coverage contig (< 2 x): NODE_430_length_2624_cov_1.511305
[shovill] Removing low coverage contig (< 2 x): NODE_431_length_2622_cov_1.656610
[shovill] Removing low coverage contig (< 2 x): NODE_432_length_2617_cov_1.519491
[shovill] Removing low coverage contig (< 2 x): NODE_434_length_2616_cov_1.198170
[shovill] Removing low coverage contig (< 2 x): NODE_433_length_2616_cov_1.349383
[shovill] Removing low coverage contig (< 2 x): NODE_435_length_2615_cov_1.679140
[shovill] Removing low coverage contig (< 2 x): NODE_436_length_2612_cov_1.436030
[shovill] Removing low coverage contig (< 2 x): NODE_437_length_2597_cov_1.210906
[shovill] Removing low coverage contig (< 2 x): NODE_438_length_2586_cov_1.169956
[shovill] Removing low coverage contig (< 2 x): NODE_439_length_2582_cov_1.829367
[shovill] Removing low coverage contig (< 2 x): NODE_443_length_2570_cov_1.580057
[shovill] Removing low coverage contig (< 2 x): NODE_442_length_2570_cov_1.659100
[shovill] Removing low coverage contig (< 2 x): NODE_444_length_2567_cov_1.723620
[shovill] Removing low coverage contig (< 2 x): NODE_445_length_2561_cov_1.947518
[shovill] Removing low coverage contig (< 2 x): NODE_447_length_2559_cov_1.575733
[shovill] Removing low coverage contig (< 2 x): NODE_449_length_2555_cov_1.720228
[shovill] Removing low coverage contig (< 2 x): NODE_450_length_2550_cov_1.895382
[shovill] Removing low coverage contig (< 2 x): NODE_451_length_2534_cov_1.264089
[shovill] Removing low coverage contig (< 2 x): NODE_453_length_2533_cov_1.429218
[shovill] Removing low coverage contig (< 2 x): NODE_452_length_2533_cov_1.941564
[shovill] Removing low coverage contig (< 2 x): NODE_454_length_2531_cov_1.337727
[shovill] Removing low coverage contig (< 2 x): NODE_455_length_2528_cov_1.422680
[shovill] Removing low coverage contig (< 2 x): NODE_456_length_2526_cov_1.499381
[shovill] Removing low coverage contig (< 2 x): NODE_457_length_2525_cov_1.994633
[shovill] Removing low coverage contig (< 2 x): NODE_458_length_2525_cov_1.815029
[shovill] Removing low coverage contig (< 2 x): NODE_459_length_2517_cov_1.432477
[shovill] Removing low coverage contig (< 2 x): NODE_460_length_2514_cov_1.650353
[shovill] Removing low coverage contig (< 2 x): NODE_461_length_2513_cov_1.866805
[shovill] Removing low coverage contig (< 2 x): NODE_462_length_2510_cov_1.525550
[shovill] Removing low coverage contig (< 2 x): NODE_463_length_2507_cov_1.274542
[shovill] Removing low coverage contig (< 2 x): NODE_464_length_2505_cov_1.910075
[shovill] Removing low coverage contig (< 2 x): NODE_465_length_2501_cov_1.803169
[shovill] Removing low coverage contig (< 2 x): NODE_467_length_2496_cov_1.649394
[shovill] Removing low coverage contig (< 2 x): NODE_468_length_2495_cov_1.349080
[shovill] Removing low coverage contig (< 2 x): NODE_469_length_2494_cov_1.702217
[shovill] Removing low coverage contig (< 2 x): NODE_471_length_2492_cov_1.645458
[shovill] Removing low coverage contig (< 2 x): NODE_472_length_2492_cov_1.458351
[shovill] Removing low coverage contig (< 2 x): NODE_473_length_2491_cov_1.729481
[shovill] Removing low coverage contig (< 2 x): NODE_474_length_2491_cov_1.529732
[shovill] Removing low coverage contig (< 2 x): NODE_475_length_2491_cov_1.472781
[shovill] Removing low coverage contig (< 2 x): NODE_477_length_2478_cov_1.454316
[shovill] Removing low coverage contig (< 2 x): NODE_476_length_2478_cov_1.543579
[shovill] Removing low coverage contig (< 2 x): NODE_478_length_2474_cov_1.451708
[shovill] Removing low coverage contig (< 2 x): NODE_479_length_2461_cov_1.594996
[shovill] Removing low coverage contig (< 2 x): NODE_480_length_2456_cov_1.547811
[shovill] Removing low coverage contig (< 2 x): NODE_481_length_2454_cov_1.170991
[shovill] Removing low coverage contig (< 2 x): NODE_482_length_2449_cov_1.401961
[shovill] Removing low coverage contig (< 2 x): NODE_484_length_2448_cov_1.443923
[shovill] Removing low coverage contig (< 2 x): NODE_485_length_2445_cov_1.511102
[shovill] Removing low coverage contig (< 2 x): NODE_486_length_2445_cov_1.488044
[shovill] Removing low coverage contig (< 2 x): NODE_487_length_2439_cov_1.729880
[shovill] Removing low coverage contig (< 2 x): NODE_488_length_2431_cov_1.876289
[shovill] Removing low coverage contig (< 2 x): NODE_489_length_2429_cov_1.757094
[shovill] Removing low coverage contig (< 2 x): NODE_490_length_2429_cov_1.356836
[shovill] Removing low coverage contig (< 2 x): NODE_491_length_2425_cov_1.438415
[shovill] Removing low coverage contig (< 2 x): NODE_492_length_2423_cov_1.695690
[shovill] Removing low coverage contig (< 2 x): NODE_493_length_2416_cov_1.365326
[shovill] Removing low coverage contig (< 2 x): NODE_494_length_2414_cov_1.495457
[shovill] Removing low coverage contig (< 2 x): NODE_496_length_2402_cov_1.703349
[shovill] Removing low coverage contig (< 2 x): NODE_499_length_2397_cov_1.655187
[shovill] Removing low coverage contig (< 2 x): NODE_501_length_2395_cov_1.630890
[shovill] Removing low coverage contig (< 2 x): NODE_502_length_2395_cov_1.603403
[shovill] Removing low coverage contig (< 2 x): NODE_503_length_2394_cov_1.716718
[shovill] Removing low coverage contig (< 2 x): NODE_504_length_2393_cov_1.694323
[shovill] Removing low coverage contig (< 2 x): NODE_505_length_2393_cov_1.603930
[shovill] Removing low coverage contig (< 2 x): NODE_506_length_2391_cov_1.404283
[shovill] Removing low coverage contig (< 2 x): NODE_507_length_2387_cov_1.126095
[shovill] Removing low coverage contig (< 2 x): NODE_508_length_2385_cov_1.411481
[shovill] Removing low coverage contig (< 2 x): NODE_509_length_2382_cov_1.783677
[shovill] Removing low coverage contig (< 2 x): NODE_510_length_2379_cov_1.783392
[shovill] Removing low coverage contig (< 2 x): NODE_511_length_2378_cov_1.150769
[shovill] Removing low coverage contig (< 2 x): NODE_512_length_2377_cov_1.705805
[shovill] Removing low coverage contig (< 2 x): NODE_513_length_2370_cov_1.516101
[shovill] Removing low coverage contig (< 2 x): NODE_514_length_2367_cov_1.916078
[shovill] Removing low coverage contig (< 2 x): NODE_515_length_2363_cov_1.773009
[shovill] Removing low coverage contig (< 2 x): NODE_516_length_2357_cov_1.713398
[shovill] Removing low coverage contig (< 2 x): NODE_517_length_2353_cov_1.672889
[shovill] Removing low coverage contig (< 2 x): NODE_518_length_2350_cov_1.950156
[shovill] Removing low coverage contig (< 2 x): NODE_519_length_2348_cov_1.543875
[shovill] Removing low coverage contig (< 2 x): NODE_520_length_2347_cov_1.913102
[shovill] Removing low coverage contig (< 2 x): NODE_521_length_2345_cov_1.406334
[shovill] Removing low coverage contig (< 2 x): NODE_522_length_2340_cov_1.177023
[shovill] Removing low coverage contig (< 2 x): NODE_523_length_2339_cov_1.735689
[shovill] Removing low coverage contig (< 2 x): NODE_524_length_2339_cov_1.236136
[shovill] Removing low coverage contig (< 2 x): NODE_526_length_2336_cov_1.404389
[shovill] Removing low coverage contig (< 2 x): NODE_525_length_2336_cov_1.485446
[shovill] Removing low coverage contig (< 2 x): NODE_527_length_2334_cov_1.340654
[shovill] Removing low coverage contig (< 2 x): NODE_528_length_2333_cov_1.985202
[shovill] Removing low coverage contig (< 2 x): NODE_529_length_2331_cov_1.348743
[shovill] Removing low coverage contig (< 2 x): NODE_530_length_2325_cov_1.523852
[shovill] Removing low coverage contig (< 2 x): NODE_531_length_2321_cov_1.722272
[shovill] Removing low coverage contig (< 2 x): NODE_532_length_2320_cov_1.729815
[shovill] Removing low coverage contig (< 2 x): NODE_533_length_2319_cov_1.897112
[shovill] Removing low coverage contig (< 2 x): NODE_534_length_2317_cov_1.618338
[shovill] Removing low coverage contig (< 2 x): NODE_536_length_2314_cov_1.168250
[shovill] Removing low coverage contig (< 2 x): NODE_537_length_2311_cov_1.283967
[shovill] Removing low coverage contig (< 2 x): NODE_538_length_2310_cov_1.569551
[shovill] Removing low coverage contig (< 2 x): NODE_539_length_2307_cov_1.533122
[shovill] Removing low coverage contig (< 2 x): NODE_540_length_2307_cov_1.108439
[shovill] Removing low coverage contig (< 2 x): NODE_542_length_2301_cov_1.686988
[shovill] Removing low coverage contig (< 2 x): NODE_543_length_2298_cov_1.439636
[shovill] Removing low coverage contig (< 2 x): NODE_545_length_2289_cov_1.898445
[shovill] Removing low coverage contig (< 2 x): NODE_546_length_2289_cov_1.759835
[shovill] Removing low coverage contig (< 2 x): NODE_549_length_2285_cov_1.947754
[shovill] Removing low coverage contig (< 2 x): NODE_550_length_2285_cov_1.883135
[shovill] Removing low coverage contig (< 2 x): NODE_551_length_2283_cov_1.112844
[shovill] Removing low coverage contig (< 2 x): NODE_552_length_2278_cov_1.551724
[shovill] Removing low coverage contig (< 2 x): NODE_553_length_2276_cov_1.468937
[shovill] Removing low coverage contig (< 2 x): NODE_554_length_2275_cov_1.315378
[shovill] Removing low coverage contig (< 2 x): NODE_555_length_2271_cov_1.371771
[shovill] Removing low coverage contig (< 2 x): NODE_556_length_2267_cov_1.912662
[shovill] Removing low coverage contig (< 2 x): NODE_557_length_2267_cov_1.662662
[shovill] Removing low coverage contig (< 2 x): NODE_558_length_2266_cov_1.963014
[shovill] Removing low coverage contig (< 2 x): NODE_559_length_2266_cov_1.922330
[shovill] Removing low coverage contig (< 2 x): NODE_561_length_2265_cov_1.630435
[shovill] Removing low coverage contig (< 2 x): NODE_562_length_2260_cov_1.368567
[shovill] Removing low coverage contig (< 2 x): NODE_563_length_2256_cov_1.446354
[shovill] Removing low coverage contig (< 2 x): NODE_564_length_2254_cov_1.449558
[shovill] Removing low coverage contig (< 2 x): NODE_565_length_2250_cov_1.037261
[shovill] Removing low coverage contig (< 2 x): NODE_567_length_2246_cov_1.670089
[shovill] Removing low coverage contig (< 2 x): NODE_568_length_2246_cov_1.624825
[shovill] Removing low coverage contig (< 2 x): NODE_569_length_2245_cov_1.411298
[shovill] Removing low coverage contig (< 2 x): NODE_570_length_2239_cov_1.155431
[shovill] Removing low coverage contig (< 2 x): NODE_571_length_2237_cov_1.384724
[shovill] Removing low coverage contig (< 2 x): NODE_572_length_2233_cov_1.800000
[shovill] Removing low coverage contig (< 2 x): NODE_573_length_2231_cov_1.753759
[shovill] Removing low coverage contig (< 2 x): NODE_575_length_2231_cov_0.763158
[shovill] Removing low coverage contig (< 2 x): NODE_574_length_2231_cov_1.669173
[shovill] Removing low coverage contig (< 2 x): NODE_576_length_2230_cov_1.546309
[shovill] Removing low coverage contig (< 2 x): NODE_577_length_2229_cov_1.688147
[shovill] Removing low coverage contig (< 2 x): NODE_578_length_2228_cov_1.553882
[shovill] Removing low coverage contig (< 2 x): NODE_579_length_2224_cov_1.776049
[shovill] Removing low coverage contig (< 2 x): NODE_580_length_2223_cov_1.613208
[shovill] Removing low coverage contig (< 2 x): NODE_582_length_2221_cov_1.476865
[shovill] Removing low coverage contig (< 2 x): NODE_583_length_2219_cov_1.733459
[shovill] Removing low coverage contig (< 2 x): NODE_584_length_2218_cov_1.542790
[shovill] Removing low coverage contig (< 2 x): NODE_585_length_2214_cov_1.520606
[shovill] Removing low coverage contig (< 2 x): NODE_587_length_2213_cov_1.178199
[shovill] Removing low coverage contig (< 2 x): NODE_586_length_2213_cov_1.368246
[shovill] Removing low coverage contig (< 2 x): NODE_589_length_2210_cov_1.533935
[shovill] Removing low coverage contig (< 2 x): NODE_590_length_2209_cov_1.372745
[shovill] Removing low coverage contig (< 2 x): NODE_591_length_2204_cov_1.982865
[shovill] Removing low coverage contig (< 2 x): NODE_592_length_2204_cov_1.044741
[shovill] Removing low coverage contig (< 2 x): NODE_593_length_2198_cov_1.725060
[shovill] Removing low coverage contig (< 2 x): NODE_594_length_2197_cov_1.666189
[shovill] Removing low coverage contig (< 2 x): NODE_595_length_2196_cov_1.677974
[shovill] Removing low coverage contig (< 2 x): NODE_596_length_2188_cov_1.826859
[shovill] Removing low coverage contig (< 2 x): NODE_597_length_2187_cov_1.586372
[shovill] Removing low coverage contig (< 2 x): NODE_599_length_2186_cov_1.552568
[shovill] Removing low coverage contig (< 2 x): NODE_598_length_2186_cov_1.675948
[shovill] Removing low coverage contig (< 2 x): NODE_600_length_2184_cov_1.257568
[shovill] Removing low coverage contig (< 2 x): NODE_601_length_2180_cov_1.880597
[shovill] Removing low coverage contig (< 2 x): NODE_603_length_2180_cov_1.622532
[shovill] Removing low coverage contig (< 2 x): NODE_602_length_2180_cov_1.824747
[shovill] Removing low coverage contig (< 2 x): NODE_604_length_2166_cov_1.430926
[shovill] Removing low coverage contig (< 2 x): NODE_605_length_2165_cov_1.680892
[shovill] Removing low coverage contig (< 2 x): NODE_606_length_2163_cov_1.974272
[shovill] Removing low coverage contig (< 2 x): NODE_607_length_2158_cov_1.523601
[shovill] Removing low coverage contig (< 2 x): NODE_608_length_2157_cov_1.534080
[shovill] Removing low coverage contig (< 2 x): NODE_610_length_2154_cov_1.633837
[shovill] Removing low coverage contig (< 2 x): NODE_609_length_2154_cov_1.819600
[shovill] Removing low coverage contig (< 2 x): NODE_612_length_2153_cov_1.103902
[shovill] Removing low coverage contig (< 2 x): NODE_611_length_2153_cov_1.869756
[shovill] Removing low coverage contig (< 2 x): NODE_613_length_2152_cov_1.828697
[shovill] Removing low coverage contig (< 2 x): NODE_614_length_2152_cov_1.712543
[shovill] Removing low coverage contig (< 2 x): NODE_615_length_2149_cov_1.394917
[shovill] Removing low coverage contig (< 2 x): NODE_616_length_2148_cov_1.581907
[shovill] Removing low coverage contig (< 2 x): NODE_617_length_2146_cov_1.518845
[shovill] Removing low coverage contig (< 2 x): NODE_618_length_2144_cov_1.417932
[shovill] Removing low coverage contig (< 2 x): NODE_619_length_2143_cov_1.788235
[shovill] Removing low coverage contig (< 2 x): NODE_620_length_2143_cov_1.467157
[shovill] Removing low coverage contig (< 2 x): NODE_621_length_2142_cov_1.643943
[shovill] Removing low coverage contig (< 2 x): NODE_622_length_2139_cov_1.725933
[shovill] Removing low coverage contig (< 2 x): NODE_623_length_2138_cov_1.450123
[shovill] Removing low coverage contig (< 2 x): NODE_624_length_2137_cov_1.961160
[shovill] Removing low coverage contig (< 2 x): NODE_625_length_2135_cov_1.552165
[shovill] Removing low coverage contig (< 2 x): NODE_626_length_2132_cov_1.231641
[shovill] Removing low coverage contig (< 2 x): NODE_629_length_2119_cov_1.554563
[shovill] Removing low coverage contig (< 2 x): NODE_630_length_2115_cov_1.561133
[shovill] Removing low coverage contig (< 2 x): NODE_631_length_2113_cov_1.411940
[shovill] Removing low coverage contig (< 2 x): NODE_632_length_2108_cov_1.475810
[shovill] Removing low coverage contig (< 2 x): NODE_633_length_2103_cov_1.541500
[shovill] Removing low coverage contig (< 2 x): NODE_634_length_2103_cov_1.402500
[shovill] Removing low coverage contig (< 2 x): NODE_635_length_2098_cov_1.776441
[shovill] Removing low coverage contig (< 2 x): NODE_636_length_2097_cov_1.608826
[shovill] Removing low coverage contig (< 2 x): NODE_637_length_2096_cov_1.359257
[shovill] Removing low coverage contig (< 2 x): NODE_638_length_2095_cov_1.469880
[shovill] Removing low coverage contig (< 2 x): NODE_639_length_2092_cov_1.918049
[shovill] Removing low coverage contig (< 2 x): NODE_641_length_2091_cov_1.453722
[shovill] Removing low coverage contig (< 2 x): NODE_640_length_2091_cov_1.710765
[shovill] Removing low coverage contig (< 2 x): NODE_642_length_2090_cov_1.751887
[shovill] Removing low coverage contig (< 2 x): NODE_643_length_2089_cov_1.897281
[shovill] Removing low coverage contig (< 2 x): NODE_645_length_2087_cov_1.639113
[shovill] Removing low coverage contig (< 2 x): NODE_646_length_2084_cov_1.319536
[shovill] Removing low coverage contig (< 2 x): NODE_647_length_2083_cov_1.819697
[shovill] Removing low coverage contig (< 2 x): NODE_648_length_2079_cov_1.528846
[shovill] Removing low coverage contig (< 2 x): NODE_649_length_2078_cov_1.436456
[shovill] Removing low coverage contig (< 2 x): NODE_650_length_2073_cov_1.575127
[shovill] Removing low coverage contig (< 2 x): NODE_651_length_2072_cov_1.546978
[shovill] Removing low coverage contig (< 2 x): NODE_654_length_2071_cov_1.400915
[shovill] Removing low coverage contig (< 2 x): NODE_653_length_2071_cov_1.859756
[shovill] Removing low coverage contig (< 2 x): NODE_652_length_2071_cov_1.958841
[shovill] Removing low coverage contig (< 2 x): NODE_655_length_2070_cov_1.915099
[shovill] Removing low coverage contig (< 2 x): NODE_656_length_2070_cov_1.391967
[shovill] Removing low coverage contig (< 2 x): NODE_657_length_2070_cov_1.277580
[shovill] Removing low coverage contig (< 2 x): NODE_658_length_2065_cov_1.417431
[shovill] Removing low coverage contig (< 2 x): NODE_659_length_2064_cov_1.555839
[shovill] Removing low coverage contig (< 2 x): NODE_660_length_2062_cov_1.649311
[shovill] Removing low coverage contig (< 2 x): NODE_662_length_2057_cov_1.296315
[shovill] Removing low coverage contig (< 2 x): NODE_661_length_2057_cov_1.508188
[shovill] Removing low coverage contig (< 2 x): NODE_663_length_2056_cov_1.738351
[shovill] Removing low coverage contig (< 2 x): NODE_664_length_2055_cov_1.582480
[shovill] Removing low coverage contig (< 2 x): NODE_666_length_2052_cov_1.399179
[shovill] Removing low coverage contig (< 2 x): NODE_665_length_2052_cov_1.456644
[shovill] Removing low coverage contig (< 2 x): NODE_668_length_2045_cov_1.588568
[shovill] Removing low coverage contig (< 2 x): NODE_667_length_2045_cov_1.603502
[shovill] Removing low coverage contig (< 2 x): NODE_669_length_2044_cov_1.437403
[shovill] Removing low coverage contig (< 2 x): NODE_670_length_2043_cov_1.554639
[shovill] Removing low coverage contig (< 2 x): NODE_671_length_2041_cov_1.838493
[shovill] Removing low coverage contig (< 2 x): NODE_673_length_2040_cov_1.476510
[shovill] Removing low coverage contig (< 2 x): NODE_674_length_2039_cov_1.179752
[shovill] Removing low coverage contig (< 2 x): NODE_676_length_2036_cov_1.420590
[shovill] Removing low coverage contig (< 2 x): NODE_677_length_2034_cov_1.539099
[shovill] Removing low coverage contig (< 2 x): NODE_678_length_2032_cov_1.487818
[shovill] Removing low coverage contig (< 2 x): NODE_679_length_2030_cov_1.534510
[shovill] Removing low coverage contig (< 2 x): NODE_680_length_2029_cov_1.434579
[shovill] Removing low coverage contig (< 2 x): NODE_681_length_2029_cov_1.029076
[shovill] Removing low coverage contig (< 2 x): NODE_684_length_2025_cov_1.451093
[shovill] Removing low coverage contig (< 2 x): NODE_683_length_2025_cov_1.616545
[shovill] Removing low coverage contig (< 2 x): NODE_685_length_2022_cov_1.799896
[shovill] Removing low coverage contig (< 2 x): NODE_686_length_2021_cov_1.848279
[shovill] Removing low coverage contig (< 2 x): NODE_687_length_2018_cov_1.659530
[shovill] Removing low coverage contig (< 2 x): NODE_688_length_2017_cov_1.658307
[shovill] Removing low coverage contig (< 2 x): NODE_689_length_2015_cov_1.633891
[shovill] Removing low coverage contig (< 2 x): NODE_690_length_2013_cov_1.269110
[shovill] Removing low coverage contig (< 2 x): NODE_691_length_2012_cov_1.556836
[shovill] Removing low coverage contig (< 2 x): NODE_692_length_2012_cov_1.419068
[shovill] Removing low coverage contig (< 2 x): NODE_693_length_2010_cov_1.406922
[shovill] Removing low coverage contig (< 2 x): NODE_695_length_2006_cov_1.642669
[shovill] Removing low coverage contig (< 2 x): NODE_696_length_2005_cov_1.674027
[shovill] Removing low coverage contig (< 2 x): NODE_697_length_2003_cov_1.624211
[shovill] Removing low coverage contig (< 2 x): NODE_698_length_2002_cov_1.400211
[shovill] Removing low coverage contig (< 2 x): NODE_700_length_1993_cov_1.410053
[shovill] Removing low coverage contig (< 2 x): NODE_699_length_1993_cov_1.517460
[shovill] Removing low coverage contig (< 2 x): NODE_701_length_1992_cov_1.233457
[shovill] Removing low coverage contig (< 2 x): NODE_702_length_1991_cov_1.606462
[shovill] Removing low coverage contig (< 2 x): NODE_703_length_1990_cov_1.410175
[shovill] Removing low coverage contig (< 2 x): NODE_704_length_1986_cov_1.508763
[shovill] Removing low coverage contig (< 2 x): NODE_705_length_1985_cov_1.678533
[shovill] Removing low coverage contig (< 2 x): NODE_707_length_1981_cov_1.495740
[shovill] Removing low coverage contig (< 2 x): NODE_706_length_1981_cov_1.631523
[shovill] Removing low coverage contig (< 2 x): NODE_708_length_1977_cov_1.316969
[shovill] Removing low coverage contig (< 2 x): NODE_709_length_1974_cov_1.799572
[shovill] Removing low coverage contig (< 2 x): NODE_710_length_1973_cov_1.472193
[shovill] Removing low coverage contig (< 2 x): NODE_711_length_1971_cov_1.976445
[shovill] Removing low coverage contig (< 2 x): NODE_712_length_1969_cov_1.324759
[shovill] Removing low coverage contig (< 2 x): NODE_714_length_1968_cov_1.673458
[shovill] Removing low coverage contig (< 2 x): NODE_713_length_1968_cov_1.984987
[shovill] Removing low coverage contig (< 2 x): NODE_715_length_1965_cov_1.133727
[shovill] Removing low coverage contig (< 2 x): NODE_716_length_1964_cov_1.441161
[shovill] Removing low coverage contig (< 2 x): NODE_717_length_1957_cov_1.183927
[shovill] Removing low coverage contig (< 2 x): NODE_718_length_1954_cov_1.159914
[shovill] Removing low coverage contig (< 2 x): NODE_719_length_1953_cov_1.768649
[shovill] Removing low coverage contig (< 2 x): NODE_721_length_1951_cov_1.188312
[shovill] Removing low coverage contig (< 2 x): NODE_722_length_1948_cov_1.757724
[shovill] Removing low coverage contig (< 2 x): NODE_723_length_1947_cov_1.404013
[shovill] Removing low coverage contig (< 2 x): NODE_725_length_1944_cov_1.673004
[shovill] Removing low coverage contig (< 2 x): NODE_727_length_1943_cov_1.571739
[shovill] Removing low coverage contig (< 2 x): NODE_728_length_1943_cov_1.444022
[shovill] Removing low coverage contig (< 2 x): NODE_729_length_1942_cov_1.539424
[shovill] Removing low coverage contig (< 2 x): NODE_731_length_1940_cov_1.683179
[shovill] Removing low coverage contig (< 2 x): NODE_732_length_1938_cov_1.447411
[shovill] Removing low coverage contig (< 2 x): NODE_733_length_1937_cov_1.776990
[shovill] Removing low coverage contig (< 2 x): NODE_735_length_1932_cov_1.367961
[shovill] Removing low coverage contig (< 2 x): NODE_734_length_1932_cov_1.862767
[shovill] Removing low coverage contig (< 2 x): NODE_738_length_1931_cov_1.245624
[shovill] Removing low coverage contig (< 2 x): NODE_737_length_1931_cov_1.988512
[shovill] Removing low coverage contig (< 2 x): NODE_739_length_1928_cov_1.306301
[shovill] Removing low coverage contig (< 2 x): NODE_740_length_1927_cov_1.499452
[shovill] Removing low coverage contig (< 2 x): NODE_741_length_1926_cov_1.560066
[shovill] Removing low coverage contig (< 2 x): NODE_742_length_1926_cov_1.438837
[shovill] Removing low coverage contig (< 2 x): NODE_743_length_1926_cov_1.175535
[shovill] Removing low coverage contig (< 2 x): NODE_744_length_1925_cov_1.669594
[shovill] Removing low coverage contig (< 2 x): NODE_745_length_1922_cov_1.129192
[shovill] Removing low coverage contig (< 2 x): NODE_747_length_1916_cov_1.745725
[shovill] Removing low coverage contig (< 2 x): NODE_748_length_1912_cov_1.735213
[shovill] Removing low coverage contig (< 2 x): NODE_749_length_1908_cov_1.863712
[shovill] Removing low coverage contig (< 2 x): NODE_751_length_1907_cov_1.676829
[shovill] Removing low coverage contig (< 2 x): NODE_752_length_1907_cov_1.331486
[shovill] Removing low coverage contig (< 2 x): NODE_753_length_1905_cov_1.230300
[shovill] Removing low coverage contig (< 2 x): NODE_755_length_1903_cov_1.451667
[shovill] Removing low coverage contig (< 2 x): NODE_754_length_1903_cov_1.761667
[shovill] Removing low coverage contig (< 2 x): NODE_756_length_1902_cov_1.597554
[shovill] Removing low coverage contig (< 2 x): NODE_758_length_1902_cov_1.297943
[shovill] Removing low coverage contig (< 2 x): NODE_757_length_1902_cov_1.564202
[shovill] Removing low coverage contig (< 2 x): NODE_759_length_1899_cov_1.570156
[shovill] Removing low coverage contig (< 2 x): NODE_760_length_1899_cov_1.383073
[shovill] Removing low coverage contig (< 2 x): NODE_761_length_1896_cov_1.141104
[shovill] Removing low coverage contig (< 2 x): NODE_762_length_1889_cov_1.203807
[shovill] Removing low coverage contig (< 2 x): NODE_764_length_1883_cov_1.150000
[shovill] Removing low coverage contig (< 2 x): NODE_766_length_1882_cov_1.350759
[shovill] Removing low coverage contig (< 2 x): NODE_767_length_1881_cov_1.197413
[shovill] Removing low coverage contig (< 2 x): NODE_768_length_1879_cov_1.142455
[shovill] Removing low coverage contig (< 2 x): NODE_769_length_1878_cov_1.749296
[shovill] Removing low coverage contig (< 2 x): NODE_770_length_1878_cov_1.235493
[shovill] Removing low coverage contig (< 2 x): NODE_771_length_1877_cov_1.467869
[shovill] Removing low coverage contig (< 2 x): NODE_772_length_1877_cov_1.164600
[shovill] Removing low coverage contig (< 2 x): NODE_773_length_1874_cov_1.397516
[shovill] Removing low coverage contig (< 2 x): NODE_775_length_1873_cov_1.249153
[shovill] Removing low coverage contig (< 2 x): NODE_774_length_1873_cov_1.680791
[shovill] Removing low coverage contig (< 2 x): NODE_777_length_1871_cov_1.606900
[shovill] Removing low coverage contig (< 2 x): NODE_779_length_1868_cov_1.506516
[shovill] Removing low coverage contig (< 2 x): NODE_778_length_1868_cov_1.821530
[shovill] Removing low coverage contig (< 2 x): NODE_780_length_1866_cov_1.479297
[shovill] Removing low coverage contig (< 2 x): NODE_781_length_1865_cov_1.954597
[shovill] Removing low coverage contig (< 2 x): NODE_782_length_1864_cov_1.655877
[shovill] Removing low coverage contig (< 2 x): NODE_784_length_1863_cov_1.893750
[shovill] Removing low coverage contig (< 2 x): NODE_783_length_1863_cov_1.958523
[shovill] Removing low coverage contig (< 2 x): NODE_785_length_1862_cov_1.942581
[shovill] Removing low coverage contig (< 2 x): NODE_786_length_1861_cov_1.576792
[shovill] Removing low coverage contig (< 2 x): NODE_787_length_1860_cov_1.681844
[shovill] Removing low coverage contig (< 2 x): NODE_788_length_1859_cov_1.930524
[shovill] Removing low coverage contig (< 2 x): NODE_789_length_1857_cov_1.452680
[shovill] Removing low coverage contig (< 2 x): NODE_790_length_1855_cov_1.933219
[shovill] Removing low coverage contig (< 2 x): NODE_792_length_1854_cov_1.209023
[shovill] Removing low coverage contig (< 2 x): NODE_791_length_1854_cov_1.232439
[shovill] Removing low coverage contig (< 2 x): NODE_793_length_1852_cov_1.962836
[shovill] Removing low coverage contig (< 2 x): NODE_794_length_1851_cov_1.657895
[shovill] Removing low coverage contig (< 2 x): NODE_795_length_1848_cov_1.633238
[shovill] Removing low coverage contig (< 2 x): NODE_796_length_1846_cov_0.994263
[shovill] Removing low coverage contig (< 2 x): NODE_797_length_1844_cov_1.719701
[shovill] Removing low coverage contig (< 2 x): NODE_798_length_1842_cov_1.382979
[shovill] Removing low coverage contig (< 2 x): NODE_799_length_1840_cov_1.962579
[shovill] Removing low coverage contig (< 2 x): NODE_800_length_1839_cov_1.547811
[shovill] Removing low coverage contig (< 2 x): NODE_801_length_1838_cov_1.518732
[shovill] Removing low coverage contig (< 2 x): NODE_805_length_1828_cov_1.782609
[shovill] Removing low coverage contig (< 2 x): NODE_807_length_1826_cov_1.993035
[shovill] Removing low coverage contig (< 2 x): NODE_809_length_1823_cov_1.235465
[shovill] Removing low coverage contig (< 2 x): NODE_808_length_1823_cov_1.344186
[shovill] Removing low coverage contig (< 2 x): NODE_810_length_1822_cov_1.330425
[shovill] Removing low coverage contig (< 2 x): NODE_812_length_1820_cov_1.740827
[shovill] Removing low coverage contig (< 2 x): NODE_813_length_1819_cov_1.371795
[shovill] Removing low coverage contig (< 2 x): NODE_815_length_1818_cov_1.636152
[shovill] Removing low coverage contig (< 2 x): NODE_814_length_1818_cov_1.854810
[shovill] Removing low coverage contig (< 2 x): NODE_817_length_1817_cov_1.633022
[shovill] Removing low coverage contig (< 2 x): NODE_819_length_1816_cov_1.458844
[shovill] Removing low coverage contig (< 2 x): NODE_818_length_1816_cov_1.734968
[shovill] Removing low coverage contig (< 2 x): NODE_820_length_1813_cov_1.983626
[shovill] Removing low coverage contig (< 2 x): NODE_821_length_1811_cov_1.867096
[shovill] Removing low coverage contig (< 2 x): NODE_822_length_1808_cov_1.391789
[shovill] Removing low coverage contig (< 2 x): NODE_823_length_1806_cov_1.594245
[shovill] Removing low coverage contig (< 2 x): NODE_825_length_1805_cov_1.428907
[shovill] Removing low coverage contig (< 2 x): NODE_826_length_1804_cov_1.395650
[shovill] Removing low coverage contig (< 2 x): NODE_827_length_1803_cov_1.883529
[shovill] Removing low coverage contig (< 2 x): NODE_828_length_1803_cov_1.792941
[shovill] Removing low coverage contig (< 2 x): NODE_829_length_1802_cov_1.723955
[shovill] Removing low coverage contig (< 2 x): NODE_830_length_1802_cov_1.078281
[shovill] Removing low coverage contig (< 2 x): NODE_832_length_1801_cov_1.489399
[shovill] Removing low coverage contig (< 2 x): NODE_831_length_1801_cov_1.928740
[shovill] Removing low coverage contig (< 2 x): NODE_833_length_1800_cov_1.938126
[shovill] Removing low coverage contig (< 2 x): NODE_834_length_1800_cov_1.713612
[shovill] Removing low coverage contig (< 2 x): NODE_836_length_1799_cov_1.247642
[shovill] Removing low coverage contig (< 2 x): NODE_835_length_1799_cov_1.319575
[shovill] Removing low coverage contig (< 2 x): NODE_837_length_1799_cov_1.146816
[shovill] Removing low coverage contig (< 2 x): NODE_840_length_1797_cov_1.715466
[shovill] Removing low coverage contig (< 2 x): NODE_841_length_1797_cov_1.207792
[shovill] Removing low coverage contig (< 2 x): NODE_842_length_1796_cov_1.067336
[shovill] Removing low coverage contig (< 2 x): NODE_844_length_1787_cov_1.517815
[shovill] Removing low coverage contig (< 2 x): NODE_846_length_1786_cov_1.123589
[shovill] Removing low coverage contig (< 2 x): NODE_845_length_1786_cov_1.710636
[shovill] Removing low coverage contig (< 2 x): NODE_847_length_1785_cov_1.745541
[shovill] Removing low coverage contig (< 2 x): NODE_848_length_1783_cov_1.762500
[shovill] Removing low coverage contig (< 2 x): NODE_849_length_1779_cov_1.563246
[shovill] Removing low coverage contig (< 2 x): NODE_850_length_1778_cov_1.841194
[shovill] Removing low coverage contig (< 2 x): NODE_855_length_1777_cov_1.233572
[shovill] Removing low coverage contig (< 2 x): NODE_853_length_1777_cov_1.587814
[shovill] Removing low coverage contig (< 2 x): NODE_851_length_1777_cov_1.994026
[shovill] Removing low coverage contig (< 2 x): NODE_852_length_1777_cov_1.679211
[shovill] Removing low coverage contig (< 2 x): NODE_854_length_1777_cov_1.451613
[shovill] Removing low coverage contig (< 2 x): NODE_856_length_1776_cov_1.517035
[shovill] Removing low coverage contig (< 2 x): NODE_857_length_1775_cov_1.391148
[shovill] Removing low coverage contig (< 2 x): NODE_858_length_1773_cov_1.991617
[shovill] Removing low coverage contig (< 2 x): NODE_859_length_1773_cov_1.536527
[shovill] Removing low coverage contig (< 2 x): NODE_860_length_1772_cov_1.117436
[shovill] Removing low coverage contig (< 2 x): NODE_861_length_1769_cov_1.323529
[shovill] Removing low coverage contig (< 2 x): NODE_862_length_1766_cov_1.009621
[shovill] Removing low coverage contig (< 2 x): NODE_863_length_1763_cov_1.574699
[shovill] Removing low coverage contig (< 2 x): NODE_864_length_1759_cov_1.479469
[shovill] Removing low coverage contig (< 2 x): NODE_865_length_1758_cov_1.617523
[shovill] Removing low coverage contig (< 2 x): NODE_866_length_1757_cov_1.855502
[shovill] Removing low coverage contig (< 2 x): NODE_868_length_1754_cov_1.950939
[shovill] Removing low coverage contig (< 2 x): NODE_870_length_1750_cov_1.585914
[shovill] Removing low coverage contig (< 2 x): NODE_871_length_1746_cov_1.179550
[shovill] Removing low coverage contig (< 2 x): NODE_872_length_1744_cov_1.945765
[shovill] Removing low coverage contig (< 2 x): NODE_875_length_1741_cov_1.644078
[shovill] Removing low coverage contig (< 2 x): NODE_874_length_1741_cov_1.656899
[shovill] Removing low coverage contig (< 2 x): NODE_876_length_1740_cov_1.017104
[shovill] Removing low coverage contig (< 2 x): NODE_877_length_1738_cov_1.562691
[shovill] Removing low coverage contig (< 2 x): NODE_878_length_1737_cov_1.375765
[shovill] Removing low coverage contig (< 2 x): NODE_879_length_1736_cov_1.429884
[shovill] Removing low coverage contig (< 2 x): NODE_880_length_1735_cov_1.572917
[shovill] Removing low coverage contig (< 2 x): NODE_881_length_1731_cov_1.313268
[shovill] Removing low coverage contig (< 2 x): NODE_882_length_1730_cov_1.430240
[shovill] Removing low coverage contig (< 2 x): NODE_883_length_1728_cov_1.608000
[shovill] Removing low coverage contig (< 2 x): NODE_884_length_1727_cov_1.757389
[shovill] Removing low coverage contig (< 2 x): NODE_885_length_1727_cov_1.309729
[shovill] Removing low coverage contig (< 2 x): NODE_886_length_1724_cov_1.637261
[shovill] Removing low coverage contig (< 2 x): NODE_887_length_1721_cov_1.675525
[shovill] Removing low coverage contig (< 2 x): NODE_888_length_1721_cov_1.422126
[shovill] Removing low coverage contig (< 2 x): NODE_889_length_1719_cov_1.736386
[shovill] Removing low coverage contig (< 2 x): NODE_890_length_1716_cov_1.396156
[shovill] Removing low coverage contig (< 2 x): NODE_891_length_1715_cov_1.679280
[shovill] Removing low coverage contig (< 2 x): NODE_892_length_1712_cov_1.757613
[shovill] Removing low coverage contig (< 2 x): NODE_893_length_1710_cov_1.566895
[shovill] Removing low coverage contig (< 2 x): NODE_894_length_1708_cov_1.945171
[shovill] Removing low coverage contig (< 2 x): NODE_895_length_1706_cov_1.153462
[shovill] Removing low coverage contig (< 2 x): NODE_896_length_1704_cov_1.951280
[shovill] Removing low coverage contig (< 2 x): NODE_898_length_1703_cov_1.556250
[shovill] Removing low coverage contig (< 2 x): NODE_897_length_1703_cov_1.705625
[shovill] Removing low coverage contig (< 2 x): NODE_899_length_1702_cov_1.255785
[shovill] Removing low coverage contig (< 2 x): NODE_902_length_1700_cov_1.505949
[shovill] Removing low coverage contig (< 2 x): NODE_903_length_1698_cov_1.691536
[shovill] Removing low coverage contig (< 2 x): NODE_904_length_1698_cov_1.536677
[shovill] Removing low coverage contig (< 2 x): NODE_905_length_1697_cov_1.403388
[shovill] Removing low coverage contig (< 2 x): NODE_906_length_1696_cov_1.845574
[shovill] Removing low coverage contig (< 2 x): NODE_907_length_1696_cov_1.563089
[shovill] Removing low coverage contig (< 2 x): NODE_908_length_1696_cov_1.234777
[shovill] Removing low coverage contig (< 2 x): NODE_909_length_1693_cov_1.584277
[shovill] Removing low coverage contig (< 2 x): NODE_910_length_1692_cov_1.324103
[shovill] Removing low coverage contig (< 2 x): NODE_912_length_1691_cov_1.295340
[shovill] Removing low coverage contig (< 2 x): NODE_911_length_1691_cov_1.555416
[shovill] Removing low coverage contig (< 2 x): NODE_913_length_1688_cov_1.377287
[shovill] Removing low coverage contig (< 2 x): NODE_914_length_1687_cov_1.792298
[shovill] Removing low coverage contig (< 2 x): NODE_915_length_1686_cov_1.520531
[shovill] Removing low coverage contig (< 2 x): NODE_916_length_1686_cov_1.277322
[shovill] Removing low coverage contig (< 2 x): NODE_917_length_1685_cov_1.620101
[shovill] Removing low coverage contig (< 2 x): NODE_918_length_1682_cov_1.641545
[shovill] Removing low coverage contig (< 2 x): NODE_919_length_1680_cov_1.757134
[shovill] Removing low coverage contig (< 2 x): NODE_920_length_1680_cov_1.734940
[shovill] Removing low coverage contig (< 2 x): NODE_921_length_1679_cov_1.874365
[shovill] Removing low coverage contig (< 2 x): NODE_922_length_1678_cov_1.148571
[shovill] Removing low coverage contig (< 2 x): NODE_923_length_1678_cov_1.010794
[shovill] Removing low coverage contig (< 2 x): NODE_925_length_1673_cov_1.545223
[shovill] Removing low coverage contig (< 2 x): NODE_926_length_1673_cov_1.472611
[shovill] Removing low coverage contig (< 2 x): NODE_927_length_1672_cov_1.684512
[shovill] Removing low coverage contig (< 2 x): NODE_928_length_1671_cov_1.807398
[shovill] Removing low coverage contig (< 2 x): NODE_929_length_1671_cov_1.609056
[shovill] Removing low coverage contig (< 2 x): NODE_933_length_1669_cov_1.766922
[shovill] Removing low coverage contig (< 2 x): NODE_931_length_1669_cov_1.954023
[shovill] Removing low coverage contig (< 2 x): NODE_932_length_1669_cov_1.790549
[shovill] Removing low coverage contig (< 2 x): NODE_934_length_1664_cov_1.560538
[shovill] Removing low coverage contig (< 2 x): NODE_938_length_1660_cov_1.788696
[shovill] Removing low coverage contig (< 2 x): NODE_939_length_1659_cov_1.835476
[shovill] Removing low coverage contig (< 2 x): NODE_941_length_1657_cov_1.265122
[shovill] Removing low coverage contig (< 2 x): NODE_940_length_1657_cov_1.801158
[shovill] Removing low coverage contig (< 2 x): NODE_944_length_1655_cov_1.746778
[shovill] Removing low coverage contig (< 2 x): NODE_943_length_1655_cov_1.938144
[shovill] Removing low coverage contig (< 2 x): NODE_942_length_1655_cov_1.951031
[shovill] Removing low coverage contig (< 2 x): NODE_946_length_1653_cov_1.280000
[shovill] Removing low coverage contig (< 2 x): NODE_945_length_1653_cov_1.374839
[shovill] Removing low coverage contig (< 2 x): NODE_947_length_1648_cov_1.428479
[shovill] Removing low coverage contig (< 2 x): NODE_949_length_1647_cov_1.469560
[shovill] Removing low coverage contig (< 2 x): NODE_948_length_1647_cov_1.675518
[shovill] Removing low coverage contig (< 2 x): NODE_950_length_1647_cov_1.409974
[shovill] Removing low coverage contig (< 2 x): NODE_951_length_1646_cov_1.675308
[shovill] Removing low coverage contig (< 2 x): NODE_952_length_1645_cov_1.692607
[shovill] Removing low coverage contig (< 2 x): NODE_953_length_1640_cov_1.607027
[shovill] Removing low coverage contig (< 2 x): NODE_954_length_1640_cov_0.934288
[shovill] Removing low coverage contig (< 2 x): NODE_956_length_1638_cov_1.157655
[shovill] Removing low coverage contig (< 2 x): NODE_955_length_1638_cov_1.319870
[shovill] Removing low coverage contig (< 2 x): NODE_958_length_1637_cov_1.349413
[shovill] Removing low coverage contig (< 2 x): NODE_957_length_1637_cov_1.546936
[shovill] Removing low coverage contig (< 2 x): NODE_959_length_1636_cov_1.217873
[shovill] Removing low coverage contig (< 2 x): NODE_960_length_1634_cov_1.519268
[shovill] Removing low coverage contig (< 2 x): NODE_961_length_1631_cov_1.876963
[shovill] Removing low coverage contig (< 2 x): NODE_962_length_1630_cov_1.820563
[shovill] Removing low coverage contig (< 2 x): NODE_965_length_1628_cov_1.325246
[shovill] Removing low coverage contig (< 2 x): NODE_964_length_1628_cov_1.516066
[shovill] Removing low coverage contig (< 2 x): NODE_966_length_1627_cov_1.782152
[shovill] Removing low coverage contig (< 2 x): NODE_967_length_1627_cov_1.679134
[shovill] Removing low coverage contig (< 2 x): NODE_968_length_1626_cov_1.676953
[shovill] Removing low coverage contig (< 2 x): NODE_970_length_1625_cov_1.298292
[shovill] Removing low coverage contig (< 2 x): NODE_969_length_1625_cov_1.611038
[shovill] Removing low coverage contig (< 2 x): NODE_971_length_1624_cov_1.774490
[shovill] Removing low coverage contig (< 2 x): NODE_972_length_1620_cov_1.259064
[shovill] Removing low coverage contig (< 2 x): NODE_974_length_1619_cov_1.319261
[shovill] Removing low coverage contig (< 2 x): NODE_973_length_1619_cov_1.368074
[shovill] Removing low coverage contig (< 2 x): NODE_975_length_1618_cov_1.889769
[shovill] Removing low coverage contig (< 2 x): NODE_976_length_1618_cov_1.669967
[shovill] Removing low coverage contig (< 2 x): NODE_979_length_1617_cov_1.134082
[shovill] Removing low coverage contig (< 2 x): NODE_977_length_1617_cov_1.910172
[shovill] Removing low coverage contig (< 2 x): NODE_978_length_1617_cov_1.850727
[shovill] Removing low coverage contig (< 2 x): NODE_980_length_1614_cov_1.381205
[shovill] Removing low coverage contig (< 2 x): NODE_981_length_1613_cov_1.636424
[shovill] Removing low coverage contig (< 2 x): NODE_983_length_1613_cov_1.252318
[shovill] Removing low coverage contig (< 2 x): NODE_982_length_1613_cov_1.418543
[shovill] Removing low coverage contig (< 2 x): NODE_985_length_1610_cov_1.634373
[shovill] Removing low coverage contig (< 2 x): NODE_984_length_1610_cov_1.786994
[shovill] Removing low coverage contig (< 2 x): NODE_989_length_1608_cov_1.633887
[shovill] Removing low coverage contig (< 2 x): NODE_988_length_1608_cov_1.636545
[shovill] Removing low coverage contig (< 2 x): NODE_990_length_1608_cov_1.614618
[shovill] Removing low coverage contig (< 2 x): NODE_992_length_1606_cov_1.281437
[shovill] Removing low coverage contig (< 2 x): NODE_993_length_1603_cov_1.812000
[shovill] Removing low coverage contig (< 2 x): NODE_994_length_1603_cov_1.484667
[shovill] Removing low coverage contig (< 2 x): NODE_995_length_1602_cov_1.516344
[shovill] Removing low coverage contig (< 2 x): NODE_996_length_1602_cov_1.278185
[shovill] Removing low coverage contig (< 2 x): NODE_998_length_1601_cov_1.605474
[shovill] Removing low coverage contig (< 2 x): NODE_1000_length_1599_cov_1.420455
[shovill] Removing low coverage contig (< 2 x): NODE_1001_length_1599_cov_1.055481
[shovill] Removing low coverage contig (< 2 x): NODE_1003_length_1598_cov_1.164548
[shovill] Removing low coverage contig (< 2 x): NODE_1002_length_1598_cov_1.656856
[shovill] Removing low coverage contig (< 2 x): NODE_1004_length_1594_cov_1.872569
[shovill] Removing low coverage contig (< 2 x): NODE_1005_length_1590_cov_1.802959
[shovill] Removing low coverage contig (< 2 x): NODE_1006_length_1589_cov_1.718035
[shovill] Removing low coverage contig (< 2 x): NODE_1007_length_1589_cov_1.507402
[shovill] Removing low coverage contig (< 2 x): NODE_1009_length_1587_cov_1.092318
[shovill] Removing low coverage contig (< 2 x): NODE_1012_length_1586_cov_1.716790
[shovill] Removing low coverage contig (< 2 x): NODE_1011_length_1586_cov_1.801753
[shovill] Removing low coverage contig (< 2 x): NODE_1013_length_1586_cov_1.107889
[shovill] Removing low coverage contig (< 2 x): NODE_1014_length_1584_cov_1.566509
[shovill] Removing low coverage contig (< 2 x): NODE_1015_length_1583_cov_1.293919
[shovill] Removing low coverage contig (< 2 x): NODE_1016_length_1583_cov_1.229054
[shovill] Removing low coverage contig (< 2 x): NODE_1017_length_1582_cov_1.526707
[shovill] Removing low coverage contig (< 2 x): NODE_1020_length_1581_cov_1.565629
[shovill] Removing low coverage contig (< 2 x): NODE_1019_length_1581_cov_1.587280
[shovill] Removing low coverage contig (< 2 x): NODE_1018_length_1581_cov_1.947226
[shovill] Removing low coverage contig (< 2 x): NODE_1021_length_1580_cov_1.141503
[shovill] Removing low coverage contig (< 2 x): NODE_1022_length_1579_cov_1.618564
[shovill] Removing low coverage contig (< 2 x): NODE_1023_length_1578_cov_1.623051
[shovill] Removing low coverage contig (< 2 x): NODE_1024_length_1577_cov_1.397558
[shovill] Removing low coverage contig (< 2 x): NODE_1025_length_1576_cov_1.481331
[shovill] Removing low coverage contig (< 2 x): NODE_1026_length_1575_cov_1.651495
[shovill] Removing low coverage contig (< 2 x): NODE_1029_length_1574_cov_1.203263
[shovill] Removing low coverage contig (< 2 x): NODE_1027_length_1574_cov_1.470428
[shovill] Removing low coverage contig (< 2 x): NODE_1028_length_1574_cov_1.346023
[shovill] Removing low coverage contig (< 2 x): NODE_1030_length_1571_cov_1.233651
[shovill] Removing low coverage contig (< 2 x): NODE_1031_length_1565_cov_1.624487
[shovill] Removing low coverage contig (< 2 x): NODE_1033_length_1562_cov_1.376971
[shovill] Removing low coverage contig (< 2 x): NODE_1034_length_1561_cov_1.299040
[shovill] Removing low coverage contig (< 2 x): NODE_1035_length_1560_cov_1.684969
[shovill] Removing low coverage contig (< 2 x): NODE_1037_length_1559_cov_1.599588
[shovill] Removing low coverage contig (< 2 x): NODE_1039_length_1556_cov_1.749484
[shovill] Removing low coverage contig (< 2 x): NODE_1041_length_1555_cov_1.684573
[shovill] Removing low coverage contig (< 2 x): NODE_1043_length_1554_cov_1.595451
[shovill] Removing low coverage contig (< 2 x): NODE_1042_length_1554_cov_1.969676
[shovill] Removing low coverage contig (< 2 x): NODE_1044_length_1553_cov_1.483448
[shovill] Removing low coverage contig (< 2 x): NODE_1046_length_1550_cov_1.868003
[shovill] Removing low coverage contig (< 2 x): NODE_1047_length_1549_cov_1.903181
[shovill] Removing low coverage contig (< 2 x): NODE_1048_length_1549_cov_1.721300
[shovill] Removing low coverage contig (< 2 x): NODE_1049_length_1549_cov_1.654910
[shovill] Removing low coverage contig (< 2 x): NODE_1051_length_1548_cov_1.112111
[shovill] Removing low coverage contig (< 2 x): NODE_1053_length_1546_cov_1.576577
[shovill] Removing low coverage contig (< 2 x): NODE_1052_length_1546_cov_1.778240
[shovill] Removing low coverage contig (< 2 x): NODE_1056_length_1541_cov_1.111266
[shovill] Removing low coverage contig (< 2 x): NODE_1054_length_1541_cov_1.987483
[shovill] Removing low coverage contig (< 2 x): NODE_1055_length_1541_cov_1.687065
[shovill] Removing low coverage contig (< 2 x): NODE_1059_length_1540_cov_1.554628
[shovill] Removing low coverage contig (< 2 x): NODE_1058_length_1540_cov_1.851775
[shovill] Removing low coverage contig (< 2 x): NODE_1060_length_1539_cov_1.213788
[shovill] Removing low coverage contig (< 2 x): NODE_1061_length_1538_cov_1.378397
[shovill] Removing low coverage contig (< 2 x): NODE_1062_length_1537_cov_0.977685
[shovill] Removing low coverage contig (< 2 x): NODE_1063_length_1534_cov_1.389937
[shovill] Removing low coverage contig (< 2 x): NODE_1065_length_1533_cov_1.528671
[shovill] Removing low coverage contig (< 2 x): NODE_1064_length_1533_cov_1.882517
[shovill] Removing low coverage contig (< 2 x): NODE_1066_length_1530_cov_1.122635
[shovill] Removing low coverage contig (< 2 x): NODE_1067_length_1528_cov_1.075789
[shovill] Removing low coverage contig (< 2 x): NODE_1069_length_1527_cov_1.051264
[shovill] Removing low coverage contig (< 2 x): NODE_1071_length_1523_cov_1.567606
[shovill] Removing low coverage contig (< 2 x): NODE_1070_length_1523_cov_1.609155
[shovill] Removing low coverage contig (< 2 x): NODE_1072_length_1522_cov_1.490486
[shovill] Removing low coverage contig (< 2 x): NODE_1074_length_1520_cov_1.445307
[shovill] Removing low coverage contig (< 2 x): NODE_1073_length_1520_cov_1.930840
[shovill] Removing low coverage contig (< 2 x): NODE_1076_length_1518_cov_1.450177
[shovill] Removing low coverage contig (< 2 x): NODE_1077_length_1517_cov_1.142150
[shovill] Removing low coverage contig (< 2 x): NODE_1078_length_1512_cov_1.625976
[shovill] Removing low coverage contig (< 2 x): NODE_1079_length_1510_cov_1.619048
[shovill] Removing low coverage contig (< 2 x): NODE_1080_length_1510_cov_1.481166
[shovill] Removing low coverage contig (< 2 x): NODE_1081_length_1509_cov_1.535562
[shovill] Removing low coverage contig (< 2 x): NODE_1082_length_1508_cov_1.903203
[shovill] Removing low coverage contig (< 2 x): NODE_1083_length_1507_cov_1.697293
[shovill] Removing low coverage contig (< 2 x): NODE_1085_length_1505_cov_1.309558
[shovill] Removing low coverage contig (< 2 x): NODE_1086_length_1503_cov_1.525714
[shovill] Removing low coverage contig (< 2 x): NODE_1088_length_1502_cov_1.508935
[shovill] Removing low coverage contig (< 2 x): NODE_1089_length_1500_cov_1.622047
[shovill] Removing low coverage contig (< 2 x): NODE_1090_length_1498_cov_1.489606
[shovill] Removing low coverage contig (< 2 x): NODE_1091_length_1496_cov_1.594401
[shovill] Removing low coverage contig (< 2 x): NODE_1093_length_1492_cov_1.446364
[shovill] Removing low coverage contig (< 2 x): NODE_1096_length_1491_cov_1.065562
[shovill] Removing low coverage contig (< 2 x): NODE_1095_length_1491_cov_1.470461
[shovill] Removing low coverage contig (< 2 x): NODE_1097_length_1490_cov_1.994232
[shovill] Removing low coverage contig (< 2 x): NODE_1098_length_1489_cov_1.559163
[shovill] Removing low coverage contig (< 2 x): NODE_1099_length_1488_cov_1.840433
[shovill] Removing low coverage contig (< 2 x): NODE_1100_length_1487_cov_1.567197
[shovill] Removing low coverage contig (< 2 x): NODE_1101_length_1486_cov_1.383948
[shovill] Removing low coverage contig (< 2 x): NODE_1102_length_1484_cov_1.922520
[shovill] Removing low coverage contig (< 2 x): NODE_1103_length_1481_cov_1.779390
[shovill] Removing low coverage contig (< 2 x): NODE_1104_length_1480_cov_1.040668
[shovill] Removing low coverage contig (< 2 x): NODE_1105_length_1478_cov_1.697455
[shovill] Removing low coverage contig (< 2 x): NODE_1107_length_1477_cov_1.328967
[shovill] Removing low coverage contig (< 2 x): NODE_1106_length_1477_cov_1.488355
[shovill] Removing low coverage contig (< 2 x): NODE_1108_length_1474_cov_1.409920
[shovill] Removing low coverage contig (< 2 x): NODE_1109_length_1473_cov_1.281022
[shovill] Removing low coverage contig (< 2 x): NODE_1111_length_1471_cov_1.176901
[shovill] Removing low coverage contig (< 2 x): NODE_1110_length_1471_cov_1.435673
[shovill] Removing low coverage contig (< 2 x): NODE_1112_length_1470_cov_1.365764
[shovill] Removing low coverage contig (< 2 x): NODE_1113_length_1468_cov_1.940659
[shovill] Removing low coverage contig (< 2 x): NODE_1114_length_1466_cov_1.454879
[shovill] Removing low coverage contig (< 2 x): NODE_1115_length_1466_cov_1.402054
[shovill] Removing low coverage contig (< 2 x): NODE_1116_length_1466_cov_1.369039
[shovill] Removing low coverage contig (< 2 x): NODE_1117_length_1463_cov_1.652941
[shovill] Removing low coverage contig (< 2 x): NODE_1118_length_1463_cov_1.480147
[shovill] Removing low coverage contig (< 2 x): NODE_1119_length_1463_cov_1.329412
[shovill] Removing low coverage contig (< 2 x): NODE_1120_length_1462_cov_1.641648
[shovill] Removing low coverage contig (< 2 x): NODE_1121_length_1462_cov_1.434143
[shovill] Removing low coverage contig (< 2 x): NODE_1122_length_1461_cov_1.860088
[shovill] Removing low coverage contig (< 2 x): NODE_1123_length_1460_cov_1.530582
[shovill] Removing low coverage contig (< 2 x): NODE_1124_length_1459_cov_1.598820
[shovill] Removing low coverage contig (< 2 x): NODE_1125_length_1459_cov_1.456490
[shovill] Removing low coverage contig (< 2 x): NODE_1126_length_1458_cov_1.384502
[shovill] Removing low coverage contig (< 2 x): NODE_1128_length_1454_cov_1.592154
[shovill] Removing low coverage contig (< 2 x): NODE_1127_length_1454_cov_1.682457
[shovill] Removing low coverage contig (< 2 x): NODE_1129_length_1453_cov_1.305926
[shovill] Removing low coverage contig (< 2 x): NODE_1131_length_1453_cov_1.183704
[shovill] Removing low coverage contig (< 2 x): NODE_1130_length_1453_cov_1.236296
[shovill] Removing low coverage contig (< 2 x): NODE_1133_length_1452_cov_1.467013
[shovill] Removing low coverage contig (< 2 x): NODE_1134_length_1452_cov_1.322461
[shovill] Removing low coverage contig (< 2 x): NODE_1132_length_1452_cov_1.862861
[shovill] Removing low coverage contig (< 2 x): NODE_1136_length_1451_cov_1.767804
[shovill] Removing low coverage contig (< 2 x): NODE_1135_length_1451_cov_1.848665
[shovill] Removing low coverage contig (< 2 x): NODE_1138_length_1449_cov_1.390045
[shovill] Removing low coverage contig (< 2 x): NODE_1139_length_1447_cov_1.821429
[shovill] Removing low coverage contig (< 2 x): NODE_1140_length_1446_cov_1.326880
[shovill] Removing low coverage contig (< 2 x): NODE_1141_length_1440_cov_1.804787
[shovill] Removing low coverage contig (< 2 x): NODE_1142_length_1440_cov_1.114435
[shovill] Removing low coverage contig (< 2 x): NODE_1143_length_1437_cov_0.989505
[shovill] Removing low coverage contig (< 2 x): NODE_1144_length_1435_cov_1.377628
[shovill] Removing low coverage contig (< 2 x): NODE_1145_length_1433_cov_0.834586
[shovill] Removing low coverage contig (< 2 x): NODE_1147_length_1431_cov_1.478163
[shovill] Removing low coverage contig (< 2 x): NODE_1146_length_1431_cov_1.570030
[shovill] Removing low coverage contig (< 2 x): NODE_1148_length_1428_cov_1.575849
[shovill] Removing low coverage contig (< 2 x): NODE_1149_length_1427_cov_1.891994
[shovill] Removing low coverage contig (< 2 x): NODE_1150_length_1426_cov_1.942555
[shovill] Removing low coverage contig (< 2 x): NODE_1151_length_1426_cov_1.416478
[shovill] Removing low coverage contig (< 2 x): NODE_1153_length_1425_cov_1.888048
[shovill] Removing low coverage contig (< 2 x): NODE_1154_length_1425_cov_1.849470
[shovill] Removing low coverage contig (< 2 x): NODE_1152_length_1425_cov_1.903177
[shovill] Removing low coverage contig (< 2 x): NODE_1156_length_1424_cov_1.307343
[shovill] Removing low coverage contig (< 2 x): NODE_1155_length_1424_cov_1.442846
[shovill] Removing low coverage contig (< 2 x): NODE_1157_length_1423_cov_1.446212
[shovill] Removing low coverage contig (< 2 x): NODE_1160_length_1421_cov_1.575114
[shovill] Removing low coverage contig (< 2 x): NODE_1161_length_1421_cov_1.239757
[shovill] Removing low coverage contig (< 2 x): NODE_1158_length_1421_cov_1.857360
[shovill] Removing low coverage contig (< 2 x): NODE_1159_length_1421_cov_1.801214
[shovill] Removing low coverage contig (< 2 x): NODE_1162_length_1420_cov_1.942293
[shovill] Removing low coverage contig (< 2 x): NODE_1163_length_1420_cov_1.509491
[shovill] Removing low coverage contig (< 2 x): NODE_1164_length_1420_cov_1.509491
[shovill] Removing low coverage contig (< 2 x): NODE_1165_length_1420_cov_1.151101
[shovill] Removing low coverage contig (< 2 x): NODE_1166_length_1419_cov_1.569149
[shovill] Removing low coverage contig (< 2 x): NODE_1167_length_1418_cov_1.084411
[shovill] Removing low coverage contig (< 2 x): NODE_1171_length_1415_cov_1.532012
[shovill] Removing low coverage contig (< 2 x): NODE_1172_length_1415_cov_1.240854
[shovill] Removing low coverage contig (< 2 x): NODE_1170_length_1415_cov_1.588415
[shovill] Removing low coverage contig (< 2 x): NODE_1174_length_1414_cov_1.493516
[shovill] Removing low coverage contig (< 2 x): NODE_1173_length_1414_cov_1.948894
[shovill] Removing low coverage contig (< 2 x): NODE_1176_length_1412_cov_1.448434
[shovill] Removing low coverage contig (< 2 x): NODE_1175_length_1412_cov_1.773873
[shovill] Removing low coverage contig (< 2 x): NODE_1177_length_1412_cov_0.972498
[shovill] Removing low coverage contig (< 2 x): NODE_1179_length_1410_cov_1.025249
[shovill] Removing low coverage contig (< 2 x): NODE_1180_length_1409_cov_1.918836
[shovill] Removing low coverage contig (< 2 x): NODE_1181_length_1408_cov_1.252107
[shovill] Removing low coverage contig (< 2 x): NODE_1182_length_1407_cov_1.344325
[shovill] Removing low coverage contig (< 2 x): NODE_1185_length_1406_cov_1.197237
[shovill] Removing low coverage contig (< 2 x): NODE_1184_length_1406_cov_1.322333
[shovill] Removing low coverage contig (< 2 x): NODE_1183_length_1406_cov_1.689179
[shovill] Removing low coverage contig (< 2 x): NODE_1186_length_1405_cov_1.878648
[shovill] Removing low coverage contig (< 2 x): NODE_1187_length_1405_cov_1.864055
[shovill] Removing low coverage contig (< 2 x): NODE_1188_length_1405_cov_1.338710
[shovill] Removing low coverage contig (< 2 x): NODE_1190_length_1404_cov_1.617218
[shovill] Removing low coverage contig (< 2 x): NODE_1191_length_1403_cov_1.320000
[shovill] Removing low coverage contig (< 2 x): NODE_1192_length_1398_cov_1.841699
[shovill] Removing low coverage contig (< 2 x): NODE_1193_length_1397_cov_1.651468
[shovill] Removing low coverage contig (< 2 x): NODE_1195_length_1395_cov_1.329721
[shovill] Removing low coverage contig (< 2 x): NODE_1199_length_1393_cov_1.374419
[shovill] Removing low coverage contig (< 2 x): NODE_1198_length_1393_cov_1.379070
[shovill] Removing low coverage contig (< 2 x): NODE_1197_length_1393_cov_1.675194
[shovill] Removing low coverage contig (< 2 x): NODE_1200_length_1392_cov_1.555469
[shovill] Removing low coverage contig (< 2 x): NODE_1201_length_1391_cov_0.824534
[shovill] Removing low coverage contig (< 2 x): NODE_1204_length_1389_cov_1.144635
[shovill] Removing low coverage contig (< 2 x): NODE_1203_length_1389_cov_1.674184
[shovill] Removing low coverage contig (< 2 x): NODE_1205_length_1388_cov_1.680934
[shovill] Removing low coverage contig (< 2 x): NODE_1206_length_1387_cov_1.527259
[shovill] Removing low coverage contig (< 2 x): NODE_1207_length_1387_cov_1.454829
[shovill] Removing low coverage contig (< 2 x): NODE_1209_length_1385_cov_1.378315
[shovill] Removing low coverage contig (< 2 x): NODE_1210_length_1385_cov_1.372075
[shovill] Removing low coverage contig (< 2 x): NODE_1208_length_1385_cov_1.492200
[shovill] Removing low coverage contig (< 2 x): NODE_1211_length_1384_cov_1.690086
[shovill] Removing low coverage contig (< 2 x): NODE_1212_length_1383_cov_1.240625
[shovill] Removing low coverage contig (< 2 x): NODE_1213_length_1382_cov_1.360438
[shovill] Removing low coverage contig (< 2 x): NODE_1214_length_1382_cov_0.845973
[shovill] Removing low coverage contig (< 2 x): NODE_1215_length_1381_cov_1.733177
[shovill] Removing low coverage contig (< 2 x): NODE_1216_length_1380_cov_1.426782
[shovill] Removing low coverage contig (< 2 x): NODE_1217_length_1380_cov_1.243540
[shovill] Removing low coverage contig (< 2 x): NODE_1219_length_1378_cov_1.647059
[shovill] Removing low coverage contig (< 2 x): NODE_1221_length_1378_cov_0.931765
[shovill] Removing low coverage contig (< 2 x): NODE_1220_length_1378_cov_1.350588
[shovill] Removing low coverage contig (< 2 x): NODE_1222_length_1375_cov_1.466981
[shovill] Removing low coverage contig (< 2 x): NODE_1224_length_1374_cov_1.867821
[shovill] Removing low coverage contig (< 2 x): NODE_1223_length_1374_cov_1.960661
[shovill] Removing low coverage contig (< 2 x): NODE_1225_length_1373_cov_1.480315
[shovill] Removing low coverage contig (< 2 x): NODE_1226_length_1372_cov_1.072498
[shovill] Removing low coverage contig (< 2 x): NODE_1228_length_1371_cov_1.294953
[shovill] Removing low coverage contig (< 2 x): NODE_1227_length_1371_cov_1.867508
[shovill] Removing low coverage contig (< 2 x): NODE_1229_length_1371_cov_1.262618
[shovill] Removing low coverage contig (< 2 x): NODE_1230_length_1371_cov_1.147476
[shovill] Removing low coverage contig (< 2 x): NODE_1231_length_1370_cov_1.762431
[shovill] Removing low coverage contig (< 2 x): NODE_1232_length_1369_cov_1.344392
[shovill] Removing low coverage contig (< 2 x): NODE_1233_length_1368_cov_1.611858
[shovill] Removing low coverage contig (< 2 x): NODE_1235_length_1366_cov_1.694378
[shovill] Removing low coverage contig (< 2 x): NODE_1236_length_1364_cov_1.746233
[shovill] Removing low coverage contig (< 2 x): NODE_1238_length_1363_cov_1.351587
[shovill] Removing low coverage contig (< 2 x): NODE_1237_length_1363_cov_1.430159
[shovill] Removing low coverage contig (< 2 x): NODE_1240_length_1362_cov_1.465449
[shovill] Removing low coverage contig (< 2 x): NODE_1241_length_1362_cov_1.231136
[shovill] Removing low coverage contig (< 2 x): NODE_1239_length_1362_cov_1.595711
[shovill] Removing low coverage contig (< 2 x): NODE_1243_length_1360_cov_1.611774
[shovill] Removing low coverage contig (< 2 x): NODE_1244_length_1360_cov_1.326173
[shovill] Removing low coverage contig (< 2 x): NODE_1245_length_1359_cov_1.734873
[shovill] Removing low coverage contig (< 2 x): NODE_1246_length_1358_cov_1.394422
[shovill] Removing low coverage contig (< 2 x): NODE_1247_length_1358_cov_0.697211
[shovill] Removing low coverage contig (< 2 x): NODE_1248_length_1356_cov_1.559457
[shovill] Removing low coverage contig (< 2 x): NODE_1250_length_1355_cov_1.716454
[shovill] Removing low coverage contig (< 2 x): NODE_1249_length_1355_cov_1.801118
[shovill] Removing low coverage contig (< 2 x): NODE_1251_length_1355_cov_1.652556
[shovill] Removing low coverage contig (< 2 x): NODE_1253_length_1353_cov_1.454400
[shovill] Removing low coverage contig (< 2 x): NODE_1252_length_1353_cov_1.773600
[shovill] Removing low coverage contig (< 2 x): NODE_1254_length_1353_cov_1.333600
[shovill] Removing low coverage contig (< 2 x): NODE_1255_length_1352_cov_1.376301
[shovill] Removing low coverage contig (< 2 x): NODE_1256_length_1349_cov_1.755217
[shovill] Removing low coverage contig (< 2 x): NODE_1257_length_1349_cov_1.399679
[shovill] Removing low coverage contig (< 2 x): NODE_1259_length_1348_cov_1.126908
[shovill] Removing low coverage contig (< 2 x): NODE_1260_length_1348_cov_1.089157
[shovill] Removing low coverage contig (< 2 x): NODE_1258_length_1348_cov_1.375904
[shovill] Removing low coverage contig (< 2 x): NODE_1261_length_1347_cov_1.498392
[shovill] Removing low coverage contig (< 2 x): NODE_1262_length_1345_cov_1.418680
[shovill] Removing low coverage contig (< 2 x): NODE_1263_length_1344_cov_1.384367
[shovill] Removing low coverage contig (< 2 x): NODE_1264_length_1343_cov_1.578226
[shovill] Removing low coverage contig (< 2 x): NODE_1265_length_1342_cov_1.903955
[shovill] Removing low coverage contig (< 2 x): NODE_1269_length_1340_cov_1.354891
[shovill] Removing low coverage contig (< 2 x): NODE_1268_length_1340_cov_1.469685
[shovill] Removing low coverage contig (< 2 x): NODE_1271_length_1339_cov_1.549353
[shovill] Removing low coverage contig (< 2 x): NODE_1270_length_1339_cov_1.840615
[shovill] Removing low coverage contig (< 2 x): NODE_1272_length_1338_cov_1.931984
[shovill] Removing low coverage contig (< 2 x): NODE_1273_length_1337_cov_1.374392
[shovill] Removing low coverage contig (< 2 x): NODE_1274_length_1336_cov_1.572587
[shovill] Removing low coverage contig (< 2 x): NODE_1275_length_1336_cov_1.495539
[shovill] Removing low coverage contig (< 2 x): NODE_1276_length_1335_cov_1.194805
[shovill] Removing low coverage contig (< 2 x): NODE_1279_length_1333_cov_1.473984
[shovill] Removing low coverage contig (< 2 x): NODE_1278_length_1333_cov_1.643902
[shovill] Removing low coverage contig (< 2 x): NODE_1283_length_1332_cov_1.287225
[shovill] Removing low coverage contig (< 2 x): NODE_1282_length_1332_cov_1.289666
[shovill] Removing low coverage contig (< 2 x): NODE_1281_length_1332_cov_1.846216
[shovill] Removing low coverage contig (< 2 x): NODE_1280_length_1332_cov_1.914565
[shovill] Removing low coverage contig (< 2 x): NODE_1284_length_1331_cov_1.346906
[shovill] Removing low coverage contig (< 2 x): NODE_1285_length_1330_cov_1.148329
[shovill] Removing low coverage contig (< 2 x): NODE_1290_length_1328_cov_1.350204
[shovill] Removing low coverage contig (< 2 x): NODE_1289_length_1328_cov_1.383673
[shovill] Removing low coverage contig (< 2 x): NODE_1288_length_1328_cov_1.607347
[shovill] Removing low coverage contig (< 2 x): NODE_1291_length_1328_cov_0.966531
[shovill] Removing low coverage contig (< 2 x): NODE_1294_length_1326_cov_1.379395
[shovill] Removing low coverage contig (< 2 x): NODE_1295_length_1326_cov_1.288635
[shovill] Removing low coverage contig (< 2 x): NODE_1293_length_1326_cov_1.511856
[shovill] Removing low coverage contig (< 2 x): NODE_1296_length_1325_cov_1.932079
[shovill] Removing low coverage contig (< 2 x): NODE_1298_length_1324_cov_1.726454
[shovill] Removing low coverage contig (< 2 x): NODE_1299_length_1323_cov_1.854098
[shovill] Removing low coverage contig (< 2 x): NODE_1300_length_1316_cov_1.523495
[shovill] Removing low coverage contig (< 2 x): NODE_1301_length_1315_cov_1.472772
[shovill] Removing low coverage contig (< 2 x): NODE_1303_length_1314_cov_1.322048
[shovill] Removing low coverage contig (< 2 x): NODE_1306_length_1313_cov_1.606612
[shovill] Removing low coverage contig (< 2 x): NODE_1307_length_1313_cov_1.457851
[shovill] Removing low coverage contig (< 2 x): NODE_1308_length_1313_cov_1.200826
[shovill] Removing low coverage contig (< 2 x): NODE_1309_length_1312_cov_1.836228
[shovill] Removing low coverage contig (< 2 x): NODE_1310_length_1311_cov_1.330298
[shovill] Removing low coverage contig (< 2 x): NODE_1311_length_1310_cov_1.438277
[shovill] Removing low coverage contig (< 2 x): NODE_1312_length_1309_cov_1.438640
[shovill] Removing low coverage contig (< 2 x): NODE_1313_length_1308_cov_1.565145
[shovill] Removing low coverage contig (< 2 x): NODE_1314_length_1307_cov_1.880399
[shovill] Removing low coverage contig (< 2 x): NODE_1315_length_1306_cov_1.989194
[shovill] Removing low coverage contig (< 2 x): NODE_1317_length_1304_cov_1.402165
[shovill] Removing low coverage contig (< 2 x): NODE_1318_length_1303_cov_1.148333
[shovill] Removing low coverage contig (< 2 x): NODE_1320_length_1302_cov_1.271059
[shovill] Removing low coverage contig (< 2 x): NODE_1319_length_1302_cov_1.354462
[shovill] Removing low coverage contig (< 2 x): NODE_1321_length_1301_cov_1.490818
[shovill] Removing low coverage contig (< 2 x): NODE_1324_length_1299_cov_1.271739
[shovill] Removing low coverage contig (< 2 x): NODE_1325_length_1299_cov_1.173077
[shovill] Removing low coverage contig (< 2 x): NODE_1326_length_1298_cov_1.574059
[shovill] Removing low coverage contig (< 2 x): NODE_1327_length_1298_cov_1.079498
[shovill] Removing low coverage contig (< 2 x): NODE_1328_length_1296_cov_1.251467
[shovill] Removing low coverage contig (< 2 x): NODE_1329_length_1296_cov_1.239732
[shovill] Removing low coverage contig (< 2 x): NODE_1330_length_1296_cov_0.859179
[shovill] Removing low coverage contig (< 2 x): NODE_1331_length_1295_cov_1.167785
[shovill] Removing low coverage contig (< 2 x): NODE_1332_length_1295_cov_1.137584
[shovill] Removing low coverage contig (< 2 x): NODE_1333_length_1293_cov_1.254622
[shovill] Removing low coverage contig (< 2 x): NODE_1334_length_1292_cov_1.891505
[shovill] Removing low coverage contig (< 2 x): NODE_1335_length_1291_cov_1.617845
[shovill] Removing low coverage contig (< 2 x): NODE_1336_length_1290_cov_1.495366
[shovill] Removing low coverage contig (< 2 x): NODE_1337_length_1288_cov_1.682700
[shovill] Removing low coverage contig (< 2 x): NODE_1338_length_1287_cov_1.816723
[shovill] Removing low coverage contig (< 2 x): NODE_1339_length_1286_cov_1.625528
[shovill] Removing low coverage contig (< 2 x): NODE_1340_length_1286_cov_1.345731
[shovill] Removing low coverage contig (< 2 x): NODE_1341_length_1285_cov_1.456007
[shovill] Removing low coverage contig (< 2 x): NODE_1342_length_1283_cov_1.283051
[shovill] Removing low coverage contig (< 2 x): NODE_1344_length_1282_cov_1.641221
[shovill] Removing low coverage contig (< 2 x): NODE_1343_length_1282_cov_1.668363
[shovill] Removing low coverage contig (< 2 x): NODE_1345_length_1282_cov_1.402036
[shovill] Removing low coverage contig (< 2 x): NODE_1349_length_1280_cov_1.045030
[shovill] Removing low coverage contig (< 2 x): NODE_1348_length_1280_cov_1.224299
[shovill] Removing low coverage contig (< 2 x): NODE_1347_length_1280_cov_1.253186
[shovill] Removing low coverage contig (< 2 x): NODE_1346_length_1280_cov_1.494477
[shovill] Removing low coverage contig (< 2 x): NODE_1350_length_1278_cov_1.983830
[shovill] Removing low coverage contig (< 2 x): NODE_1352_length_1275_cov_1.988908
[shovill] Removing low coverage contig (< 2 x): NODE_1353_length_1274_cov_1.116994
[shovill] Removing low coverage contig (< 2 x): NODE_1354_length_1273_cov_1.373504
[shovill] Removing low coverage contig (< 2 x): NODE_1355_length_1272_cov_1.053892
[shovill] Removing low coverage contig (< 2 x): NODE_1356_length_1271_cov_1.488014
[shovill] Removing low coverage contig (< 2 x): NODE_1358_length_1270_cov_1.627249
[shovill] Removing low coverage contig (< 2 x): NODE_1359_length_1270_cov_1.471294
[shovill] Removing low coverage contig (< 2 x): NODE_1357_length_1270_cov_1.709512
[shovill] Removing low coverage contig (< 2 x): NODE_1360_length_1268_cov_1.302146
[shovill] Removing low coverage contig (< 2 x): NODE_1361_length_1267_cov_1.457045
[shovill] Removing low coverage contig (< 2 x): NODE_1362_length_1267_cov_1.331615
[shovill] Removing low coverage contig (< 2 x): NODE_1364_length_1263_cov_0.997414
[shovill] Removing low coverage contig (< 2 x): NODE_1367_length_1262_cov_1.412425
[shovill] Removing low coverage contig (< 2 x): NODE_1365_length_1262_cov_1.967213
[shovill] Removing low coverage contig (< 2 x): NODE_1366_length_1262_cov_1.513374
[shovill] Removing low coverage contig (< 2 x): NODE_1368_length_1262_cov_1.256255
[shovill] Removing low coverage contig (< 2 x): NODE_1370_length_1261_cov_1.152850
[shovill] Removing low coverage contig (< 2 x): NODE_1369_length_1261_cov_1.722798
[shovill] Removing low coverage contig (< 2 x): NODE_1371_length_1260_cov_1.712187
[shovill] Removing low coverage contig (< 2 x): NODE_1372_length_1260_cov_1.109767
[shovill] Removing low coverage contig (< 2 x): NODE_1373_length_1259_cov_1.238754
[shovill] Removing low coverage contig (< 2 x): NODE_1376_length_1258_cov_1.296970
[shovill] Removing low coverage contig (< 2 x): NODE_1374_length_1258_cov_1.590476
[shovill] Removing low coverage contig (< 2 x): NODE_1375_length_1258_cov_1.529004
[shovill] Removing low coverage contig (< 2 x): NODE_1377_length_1257_cov_1.309359
[shovill] Removing low coverage contig (< 2 x): NODE_1378_length_1256_cov_1.052905
[shovill] Removing low coverage contig (< 2 x): NODE_1379_length_1255_cov_1.595486
[shovill] Removing low coverage contig (< 2 x): NODE_1381_length_1253_cov_1.580000
[shovill] Removing low coverage contig (< 2 x): NODE_1382_length_1253_cov_1.393913
[shovill] Removing low coverage contig (< 2 x): NODE_1380_length_1253_cov_1.753043
[shovill] Removing low coverage contig (< 2 x): NODE_1383_length_1252_cov_1.377720
[shovill] Removing low coverage contig (< 2 x): NODE_1384_length_1252_cov_1.300261
[shovill] Removing low coverage contig (< 2 x): NODE_1385_length_1250_cov_1.184830
[shovill] Removing low coverage contig (< 2 x): NODE_1388_length_1249_cov_1.268761
[shovill] Removing low coverage contig (< 2 x): NODE_1387_length_1249_cov_1.526178
[shovill] Removing low coverage contig (< 2 x): NODE_1389_length_1249_cov_1.158813
[shovill] Removing low coverage contig (< 2 x): NODE_1386_length_1249_cov_1.812391
[shovill] Removing low coverage contig (< 2 x): NODE_1391_length_1248_cov_1.446288
[shovill] Removing low coverage contig (< 2 x): NODE_1390_length_1248_cov_1.864629
[shovill] Removing low coverage contig (< 2 x): NODE_1394_length_1246_cov_1.217848
[shovill] Removing low coverage contig (< 2 x): NODE_1393_length_1246_cov_1.489939
[shovill] Removing low coverage contig (< 2 x): NODE_1396_length_1245_cov_1.452715
[shovill] Removing low coverage contig (< 2 x): NODE_1395_length_1245_cov_1.596322
[shovill] Removing low coverage contig (< 2 x): NODE_1397_length_1244_cov_1.150745
[shovill] Removing low coverage contig (< 2 x): NODE_1400_length_1243_cov_1.457895
[shovill] Removing low coverage contig (< 2 x): NODE_1399_length_1243_cov_1.864035
[shovill] Removing low coverage contig (< 2 x): NODE_1401_length_1242_cov_0.924495
[shovill] Removing low coverage contig (< 2 x): NODE_1404_length_1241_cov_1.722320
[shovill] Removing low coverage contig (< 2 x): NODE_1403_length_1241_cov_1.954306
[shovill] Removing low coverage contig (< 2 x): NODE_1405_length_1241_cov_1.353251
[shovill] Removing low coverage contig (< 2 x): NODE_1406_length_1239_cov_1.313380
[shovill] Removing low coverage contig (< 2 x): NODE_1409_length_1236_cov_1.108561
[shovill] Removing low coverage contig (< 2 x): NODE_1408_length_1236_cov_1.743160
[shovill] Removing low coverage contig (< 2 x): NODE_1410_length_1235_cov_1.787102
[shovill] Removing low coverage contig (< 2 x): NODE_1414_length_1234_cov_1.038904
[shovill] Removing low coverage contig (< 2 x): NODE_1412_length_1234_cov_1.814324
[shovill] Removing low coverage contig (< 2 x): NODE_1413_length_1234_cov_1.088417
[shovill] Removing low coverage contig (< 2 x): NODE_1416_length_1233_cov_1.299115
[shovill] Removing low coverage contig (< 2 x): NODE_1417_length_1232_cov_1.210806
[shovill] Removing low coverage contig (< 2 x): NODE_1419_length_1231_cov_1.608156
[shovill] Removing low coverage contig (< 2 x): NODE_1421_length_1230_cov_1.462289
[shovill] Removing low coverage contig (< 2 x): NODE_1423_length_1230_cov_1.030169
[shovill] Removing low coverage contig (< 2 x): NODE_1422_length_1230_cov_1.391304
[shovill] Removing low coverage contig (< 2 x): NODE_1420_length_1230_cov_1.657498
[shovill] Removing low coverage contig (< 2 x): NODE_1424_length_1228_cov_0.998222
[shovill] Removing low coverage contig (< 2 x): NODE_1425_length_1226_cov_1.435441
[shovill] Removing low coverage contig (< 2 x): NODE_1426_length_1224_cov_1.542373
[shovill] Removing low coverage contig (< 2 x): NODE_1427_length_1223_cov_1.458036
[shovill] Removing low coverage contig (< 2 x): NODE_1428_length_1222_cov_1.239500
[shovill] Removing low coverage contig (< 2 x): NODE_1430_length_1221_cov_1.940966
[shovill] Removing low coverage contig (< 2 x): NODE_1429_length_1221_cov_1.952594
[shovill] Removing low coverage contig (< 2 x): NODE_1431_length_1220_cov_0.989257
[shovill] Removing low coverage contig (< 2 x): NODE_1432_length_1218_cov_1.970404
[shovill] Removing low coverage contig (< 2 x): NODE_1433_length_1218_cov_1.436771
[shovill] Removing low coverage contig (< 2 x): NODE_1435_length_1217_cov_1.548474
[shovill] Removing low coverage contig (< 2 x): NODE_1434_length_1217_cov_1.650808
[shovill] Removing low coverage contig (< 2 x): NODE_1436_length_1217_cov_1.439856
[shovill] Removing low coverage contig (< 2 x): NODE_1437_length_1216_cov_1.259659
[shovill] Removing low coverage contig (< 2 x): NODE_1438_length_1215_cov_1.691547
[shovill] Removing low coverage contig (< 2 x): NODE_1440_length_1214_cov_1.080108
[shovill] Removing low coverage contig (< 2 x): NODE_1439_length_1214_cov_1.609361
[shovill] Removing low coverage contig (< 2 x): NODE_1441_length_1213_cov_1.595495
[shovill] Removing low coverage contig (< 2 x): NODE_1442_length_1212_cov_1.401262
[shovill] Removing low coverage contig (< 2 x): NODE_1443_length_1212_cov_1.254283
[shovill] Removing low coverage contig (< 2 x): NODE_1447_length_1209_cov_1.026221
[shovill] Removing low coverage contig (< 2 x): NODE_1446_length_1209_cov_1.258590
[shovill] Removing low coverage contig (< 2 x): NODE_1445_length_1209_cov_1.668174
[shovill] Removing low coverage contig (< 2 x): NODE_1448_length_1208_cov_1.590950
[shovill] Removing low coverage contig (< 2 x): NODE_1451_length_1207_cov_1.355978
[shovill] Removing low coverage contig (< 2 x): NODE_1450_length_1207_cov_1.357790
[shovill] Removing low coverage contig (< 2 x): NODE_1452_length_1206_cov_1.610154
[shovill] Removing low coverage contig (< 2 x): NODE_1453_length_1206_cov_1.369900
[shovill] Removing low coverage contig (< 2 x): NODE_1454_length_1204_cov_1.505904
[shovill] Removing low coverage contig (< 2 x): NODE_1455_length_1204_cov_1.482289
[shovill] Removing low coverage contig (< 2 x): NODE_1457_length_1203_cov_1.094545
[shovill] Removing low coverage contig (< 2 x): NODE_1456_length_1203_cov_1.105455
[shovill] Removing low coverage contig (< 2 x): NODE_1458_length_1202_cov_1.666060
[shovill] Removing low coverage contig (< 2 x): NODE_1461_length_1202_cov_0.945405
[shovill] Removing low coverage contig (< 2 x): NODE_1459_length_1202_cov_1.581438
[shovill] Removing low coverage contig (< 2 x): NODE_1460_length_1202_cov_1.288444
[shovill] Removing low coverage contig (< 2 x): NODE_1463_length_1201_cov_0.867942
[shovill] Removing low coverage contig (< 2 x): NODE_1462_length_1201_cov_1.836976
[shovill] Removing low coverage contig (< 2 x): NODE_1466_length_1198_cov_1.531507
[shovill] Removing low coverage contig (< 2 x): NODE_1468_length_1197_cov_1.380256
[shovill] Removing low coverage contig (< 2 x): NODE_1467_length_1197_cov_1.646252
[shovill] Removing low coverage contig (< 2 x): NODE_1473_length_1196_cov_0.838060
[shovill] Removing low coverage contig (< 2 x): NODE_1470_length_1196_cov_1.616651
[shovill] Removing low coverage contig (< 2 x): NODE_1472_length_1196_cov_1.353156
[shovill] Removing low coverage contig (< 2 x): NODE_1469_length_1196_cov_1.667887
[shovill] Removing low coverage contig (< 2 x): NODE_1471_length_1196_cov_1.516926
[shovill] Removing low coverage contig (< 2 x): NODE_1474_length_1195_cov_1.932234
[shovill] Removing low coverage contig (< 2 x): NODE_1475_length_1195_cov_1.846154
[shovill] Removing low coverage contig (< 2 x): NODE_1477_length_1192_cov_1.423324
[shovill] Removing low coverage contig (< 2 x): NODE_1476_length_1192_cov_1.861341
[shovill] Removing low coverage contig (< 2 x): NODE_1479_length_1189_cov_1.296501
[shovill] Removing low coverage contig (< 2 x): NODE_1480_length_1189_cov_1.166667
[shovill] Removing low coverage contig (< 2 x): NODE_1481_length_1187_cov_1.992620
[shovill] Removing low coverage contig (< 2 x): NODE_1482_length_1186_cov_1.254848
[shovill] Removing low coverage contig (< 2 x): NODE_1483_length_1185_cov_1.632163
[shovill] Removing low coverage contig (< 2 x): NODE_1484_length_1185_cov_1.353974
[shovill] Removing low coverage contig (< 2 x): NODE_1485_length_1185_cov_1.256007
[shovill] Removing low coverage contig (< 2 x): NODE_1487_length_1183_cov_1.383333
[shovill] Removing low coverage contig (< 2 x): NODE_1488_length_1183_cov_1.377778
[shovill] Removing low coverage contig (< 2 x): NODE_1486_length_1183_cov_1.795370
[shovill] Removing low coverage contig (< 2 x): NODE_1490_length_1181_cov_1.941558
[shovill] Removing low coverage contig (< 2 x): NODE_1492_length_1181_cov_1.343228
[shovill] Removing low coverage contig (< 2 x): NODE_1491_length_1181_cov_1.734694
[shovill] Removing low coverage contig (< 2 x): NODE_1494_length_1180_cov_1.875580
[shovill] Removing low coverage contig (< 2 x): NODE_1497_length_1179_cov_1.578067
[shovill] Removing low coverage contig (< 2 x): NODE_1496_length_1179_cov_1.710967
[shovill] Removing low coverage contig (< 2 x): NODE_1498_length_1179_cov_1.268587
[shovill] Removing low coverage contig (< 2 x): NODE_1500_length_1178_cov_1.666977
[shovill] Removing low coverage contig (< 2 x): NODE_1499_length_1178_cov_1.696744
[shovill] Removing low coverage contig (< 2 x): NODE_1501_length_1175_cov_1.412313
[shovill] Removing low coverage contig (< 2 x): NODE_1502_length_1175_cov_1.411381
[shovill] Removing low coverage contig (< 2 x): NODE_1503_length_1173_cov_1.859813
[shovill] Removing low coverage contig (< 2 x): NODE_1505_length_1171_cov_1.685393
[shovill] Removing low coverage contig (< 2 x): NODE_1506_length_1171_cov_1.116105
[shovill] Removing low coverage contig (< 2 x): NODE_1508_length_1170_cov_1.234302
[shovill] Removing low coverage contig (< 2 x): NODE_1507_length_1170_cov_1.770384
[shovill] Removing low coverage contig (< 2 x): NODE_1509_length_1170_cov_1.041237
[shovill] Removing low coverage contig (< 2 x): NODE_1510_length_1169_cov_1.516886
[shovill] Removing low coverage contig (< 2 x): NODE_1513_length_1168_cov_1.246009
[shovill] Removing low coverage contig (< 2 x): NODE_1512_length_1168_cov_1.818779
[shovill] Removing low coverage contig (< 2 x): NODE_1511_length_1168_cov_1.911737
[shovill] Removing low coverage contig (< 2 x): NODE_1515_length_1167_cov_1.411654
[shovill] Removing low coverage contig (< 2 x): NODE_1517_length_1167_cov_1.320489
[shovill] Removing low coverage contig (< 2 x): NODE_1516_length_1167_cov_1.396617
[shovill] Removing low coverage contig (< 2 x): NODE_1518_length_1167_cov_1.104323
[shovill] Removing low coverage contig (< 2 x): NODE_1519_length_1165_cov_1.370056
[shovill] Removing low coverage contig (< 2 x): NODE_1520_length_1165_cov_1.357815
[shovill] Removing low coverage contig (< 2 x): NODE_1522_length_1164_cov_1.590952
[shovill] Removing low coverage contig (< 2 x): NODE_1521_length_1164_cov_1.876532
[shovill] Removing low coverage contig (< 2 x): NODE_1524_length_1163_cov_1.214151
[shovill] Removing low coverage contig (< 2 x): NODE_1523_length_1163_cov_1.528302
[shovill] Removing low coverage contig (< 2 x): NODE_1525_length_1162_cov_1.658168
[shovill] Removing low coverage contig (< 2 x): NODE_1526_length_1162_cov_0.979226
[shovill] Removing low coverage contig (< 2 x): NODE_1527_length_1160_cov_1.486282
[shovill] Removing low coverage contig (< 2 x): NODE_1528_length_1159_cov_1.725379
[shovill] Removing low coverage contig (< 2 x): NODE_1529_length_1159_cov_1.667614
[shovill] Removing low coverage contig (< 2 x): NODE_1532_length_1158_cov_1.553555
[shovill] Removing low coverage contig (< 2 x): NODE_1531_length_1158_cov_1.604739
[shovill] Removing low coverage contig (< 2 x): NODE_1530_length_1158_cov_1.700474
[shovill] Removing low coverage contig (< 2 x): NODE_1533_length_1157_cov_1.761860
[shovill] Removing low coverage contig (< 2 x): NODE_1534_length_1157_cov_1.296964
[shovill] Removing low coverage contig (< 2 x): NODE_1535_length_1156_cov_1.801519
[shovill] Removing low coverage contig (< 2 x): NODE_1536_length_1156_cov_1.444444
[shovill] Removing low coverage contig (< 2 x): NODE_1538_length_1154_cov_1.604186
[shovill] Removing low coverage contig (< 2 x): NODE_1539_length_1154_cov_1.467174
[shovill] Removing low coverage contig (< 2 x): NODE_1537_length_1154_cov_1.616556
[shovill] Removing low coverage contig (< 2 x): NODE_1541_length_1153_cov_1.574286
[shovill] Removing low coverage contig (< 2 x): NODE_1540_length_1153_cov_1.668571
[shovill] Removing low coverage contig (< 2 x): NODE_1542_length_1153_cov_0.958095
[shovill] Removing low coverage contig (< 2 x): NODE_1544_length_1152_cov_1.595806
[shovill] Removing low coverage contig (< 2 x): NODE_1543_length_1152_cov_1.820782
[shovill] Removing low coverage contig (< 2 x): NODE_1545_length_1151_cov_1.351145
[shovill] Removing low coverage contig (< 2 x): NODE_1546_length_1147_cov_1.544061
[shovill] Removing low coverage contig (< 2 x): NODE_1547_length_1146_cov_1.473634
[shovill] Removing low coverage contig (< 2 x): NODE_1548_length_1146_cov_1.115053
[shovill] Removing low coverage contig (< 2 x): NODE_1549_length_1146_cov_0.909875
[shovill] Removing low coverage contig (< 2 x): NODE_1550_length_1145_cov_1.136276
[shovill] Removing low coverage contig (< 2 x): NODE_1551_length_1145_cov_1.049904
[shovill] Removing low coverage contig (< 2 x): NODE_1553_length_1144_cov_1.238232
[shovill] Removing low coverage contig (< 2 x): NODE_1554_length_1143_cov_0.944231
[shovill] Removing low coverage contig (< 2 x): NODE_1558_length_1142_cov_1.245428
[shovill] Removing low coverage contig (< 2 x): NODE_1557_length_1142_cov_1.484119
[shovill] Removing low coverage contig (< 2 x): NODE_1556_length_1142_cov_1.598653
[shovill] Removing low coverage contig (< 2 x): NODE_1562_length_1141_cov_1.600193
[shovill] Removing low coverage contig (< 2 x): NODE_1561_length_1141_cov_1.808285
[shovill] Removing low coverage contig (< 2 x): NODE_1564_length_1140_cov_1.389585
[shovill] Removing low coverage contig (< 2 x): NODE_1566_length_1139_cov_1.096525
[shovill] Removing low coverage contig (< 2 x): NODE_1568_length_1138_cov_1.536232
[shovill] Removing low coverage contig (< 2 x): NODE_1567_length_1138_cov_1.651208
[shovill] Removing low coverage contig (< 2 x): NODE_1569_length_1138_cov_1.215459
[shovill] Removing low coverage contig (< 2 x): NODE_1570_length_1136_cov_1.408519
[shovill] Removing low coverage contig (< 2 x): NODE_1571_length_1135_cov_1.469961
[shovill] Removing low coverage contig (< 2 x): NODE_1572_length_1134_cov_1.044617
[shovill] Removing low coverage contig (< 2 x): NODE_1576_length_1132_cov_1.518950
[shovill] Removing low coverage contig (< 2 x): NODE_1574_length_1132_cov_1.827988
[shovill] Removing low coverage contig (< 2 x): NODE_1575_length_1132_cov_1.773567
[shovill] Removing low coverage contig (< 2 x): NODE_1577_length_1131_cov_1.689689
[shovill] Removing low coverage contig (< 2 x): NODE_1579_length_1130_cov_1.063291
[shovill] Removing low coverage contig (< 2 x): NODE_1578_length_1130_cov_1.522882
[shovill] Removing low coverage contig (< 2 x): NODE_1581_length_1128_cov_1.909268
[shovill] Removing low coverage contig (< 2 x): NODE_1582_length_1128_cov_1.655610
[shovill] Removing low coverage contig (< 2 x): NODE_1583_length_1128_cov_1.402927
[shovill] Removing low coverage contig (< 2 x): NODE_1584_length_1127_cov_1.524414
[shovill] Removing low coverage contig (< 2 x): NODE_1585_length_1125_cov_1.786693
[shovill] Removing low coverage contig (< 2 x): NODE_1587_length_1125_cov_1.272994
[shovill] Removing low coverage contig (< 2 x): NODE_1586_length_1125_cov_1.620352
[shovill] Removing low coverage contig (< 2 x): NODE_1588_length_1125_cov_1.263209
[shovill] Removing low coverage contig (< 2 x): NODE_1589_length_1124_cov_0.954946
[shovill] Removing low coverage contig (< 2 x): NODE_1590_length_1121_cov_1.994106
[shovill] Removing low coverage contig (< 2 x): NODE_1592_length_1120_cov_1.119961
[shovill] Removing low coverage contig (< 2 x): NODE_1591_length_1120_cov_1.468043
[shovill] Removing low coverage contig (< 2 x): NODE_1593_length_1119_cov_1.990157
[shovill] Removing low coverage contig (< 2 x): NODE_1594_length_1119_cov_0.880906
[shovill] Removing low coverage contig (< 2 x): NODE_1596_length_1118_cov_0.793103
[shovill] Removing low coverage contig (< 2 x): NODE_1597_length_1117_cov_1.170611
[shovill] Removing low coverage contig (< 2 x): NODE_1600_length_1115_cov_1.312253
[shovill] Removing low coverage contig (< 2 x): NODE_1599_length_1115_cov_1.903162
[shovill] Removing low coverage contig (< 2 x): NODE_1601_length_1115_cov_0.894269
[shovill] Removing low coverage contig (< 2 x): NODE_1598_length_1115_cov_1.992095
[shovill] Removing low coverage contig (< 2 x): NODE_1602_length_1114_cov_1.373887
[shovill] Removing low coverage contig (< 2 x): NODE_1603_length_1114_cov_1.134520
[shovill] Removing low coverage contig (< 2 x): NODE_1604_length_1113_cov_1.545545
[shovill] Removing low coverage contig (< 2 x): NODE_1606_length_1113_cov_1.169307
[shovill] Removing low coverage contig (< 2 x): NODE_1605_length_1113_cov_1.210891
[shovill] Removing low coverage contig (< 2 x): NODE_1609_length_1112_cov_1.632309
[shovill] Removing low coverage contig (< 2 x): NODE_1608_length_1112_cov_1.745292
[shovill] Removing low coverage contig (< 2 x): NODE_1610_length_1111_cov_1.504960
[shovill] Removing low coverage contig (< 2 x): NODE_1611_length_1110_cov_1.483615
[shovill] Removing low coverage contig (< 2 x): NODE_1614_length_1108_cov_1.429851
[shovill] Removing low coverage contig (< 2 x): NODE_1613_length_1108_cov_1.459701
[shovill] Removing low coverage contig (< 2 x): NODE_1612_length_1108_cov_1.566169
[shovill] Removing low coverage contig (< 2 x): NODE_1616_length_1107_cov_1.716135
[shovill] Removing low coverage contig (< 2 x): NODE_1615_length_1107_cov_1.782869
[shovill] Removing low coverage contig (< 2 x): NODE_1617_length_1107_cov_1.314741
[shovill] Removing low coverage contig (< 2 x): NODE_1619_length_1106_cov_1.117647
[shovill] Removing low coverage contig (< 2 x): NODE_1618_length_1106_cov_1.463609
[shovill] Removing low coverage contig (< 2 x): NODE_1620_length_1104_cov_1.452547
[shovill] Removing low coverage contig (< 2 x): NODE_1621_length_1103_cov_1.431000
[shovill] Removing low coverage contig (< 2 x): NODE_1622_length_1102_cov_1.504505
[shovill] Removing low coverage contig (< 2 x): NODE_1624_length_1101_cov_1.294589
[shovill] Removing low coverage contig (< 2 x): NODE_1623_length_1101_cov_1.484970
[shovill] Removing low coverage contig (< 2 x): NODE_1625_length_1100_cov_1.267803
[shovill] Removing low coverage contig (< 2 x): NODE_1628_length_1099_cov_1.354418
[shovill] Removing low coverage contig (< 2 x): NODE_1629_length_1098_cov_1.312563
[shovill] Removing low coverage contig (< 2 x): NODE_1632_length_1095_cov_1.412298
[shovill] Removing low coverage contig (< 2 x): NODE_1631_length_1095_cov_1.529234
[shovill] Removing low coverage contig (< 2 x): NODE_1633_length_1094_cov_1.785066
[shovill] Removing low coverage contig (< 2 x): NODE_1634_length_1094_cov_1.639758
[shovill] Removing low coverage contig (< 2 x): NODE_1635_length_1093_cov_1.420202
[shovill] Removing low coverage contig (< 2 x): NODE_1636_length_1091_cov_1.505061
[shovill] Removing low coverage contig (< 2 x): NODE_1637_length_1091_cov_1.357287
[shovill] Removing low coverage contig (< 2 x): NODE_1638_length_1090_cov_1.249240
[shovill] Removing low coverage contig (< 2 x): NODE_1641_length_1089_cov_1.140974
[shovill] Removing low coverage contig (< 2 x): NODE_1640_length_1089_cov_1.364097
[shovill] Removing low coverage contig (< 2 x): NODE_1639_length_1089_cov_1.427992
[shovill] Removing low coverage contig (< 2 x): NODE_1642_length_1088_cov_1.751269
[shovill] Removing low coverage contig (< 2 x): NODE_1644_length_1087_cov_1.475610
[shovill] Removing low coverage contig (< 2 x): NODE_1645_length_1087_cov_1.223577
[shovill] Removing low coverage contig (< 2 x): NODE_1643_length_1087_cov_1.592480
[shovill] Removing low coverage contig (< 2 x): NODE_1648_length_1086_cov_1.291963
[shovill] Removing low coverage contig (< 2 x): NODE_1647_length_1086_cov_1.550356
[shovill] Removing low coverage contig (< 2 x): NODE_1651_length_1083_cov_1.907143
[shovill] Removing low coverage contig (< 2 x): NODE_1652_length_1083_cov_1.037755
[shovill] Removing low coverage contig (< 2 x): NODE_1653_length_1082_cov_1.301328
[shovill] Removing low coverage contig (< 2 x): NODE_1654_length_1082_cov_0.871297
[shovill] Removing low coverage contig (< 2 x): NODE_1656_length_1081_cov_1.604294
[shovill] Removing low coverage contig (< 2 x): NODE_1657_length_1081_cov_1.273006
[shovill] Removing low coverage contig (< 2 x): NODE_1659_length_1081_cov_1.026585
[shovill] Removing low coverage contig (< 2 x): NODE_1658_length_1081_cov_1.069530
[shovill] Removing low coverage contig (< 2 x): NODE_1655_length_1081_cov_1.913088
[shovill] Removing low coverage contig (< 2 x): NODE_1662_length_1080_cov_1.455476
[shovill] Removing low coverage contig (< 2 x): NODE_1661_length_1080_cov_1.486182
[shovill] Removing low coverage contig (< 2 x): NODE_1663_length_1079_cov_1.457992
[shovill] Removing low coverage contig (< 2 x): NODE_1665_length_1078_cov_1.260513
[shovill] Removing low coverage contig (< 2 x): NODE_1664_length_1078_cov_1.499487
[shovill] Removing low coverage contig (< 2 x): NODE_1666_length_1078_cov_0.890256
[shovill] Removing low coverage contig (< 2 x): NODE_1667_length_1077_cov_1.430185
[shovill] Removing low coverage contig (< 2 x): NODE_1669_length_1076_cov_1.270298
[shovill] Removing low coverage contig (< 2 x): NODE_1668_length_1076_cov_1.469681
[shovill] Removing low coverage contig (< 2 x): NODE_1670_length_1076_cov_1.119219
[shovill] Removing low coverage contig (< 2 x): NODE_1672_length_1075_cov_1.519547
[shovill] Removing low coverage contig (< 2 x): NODE_1673_length_1075_cov_1.078189
[shovill] Removing low coverage contig (< 2 x): NODE_1674_length_1075_cov_0.952675
[shovill] Removing low coverage contig (< 2 x): NODE_1677_length_1074_cov_1.223481
[shovill] Removing low coverage contig (< 2 x): NODE_1675_length_1074_cov_1.702369
[shovill] Removing low coverage contig (< 2 x): NODE_1676_length_1074_cov_1.632338
[shovill] Removing low coverage contig (< 2 x): NODE_1679_length_1073_cov_1.583505
[shovill] Removing low coverage contig (< 2 x): NODE_1681_length_1073_cov_1.189691
[shovill] Removing low coverage contig (< 2 x): NODE_1678_length_1073_cov_1.793814
[shovill] Removing low coverage contig (< 2 x): NODE_1680_length_1073_cov_1.521649
[shovill] Removing low coverage contig (< 2 x): NODE_1684_length_1072_cov_1.606811
[shovill] Removing low coverage contig (< 2 x): NODE_1683_length_1072_cov_1.833849
[shovill] Removing low coverage contig (< 2 x): NODE_1686_length_1069_cov_1.207039
[shovill] Removing low coverage contig (< 2 x): NODE_1685_length_1069_cov_1.856108
[shovill] Removing low coverage contig (< 2 x): NODE_1687_length_1068_cov_1.470466
[shovill] Removing low coverage contig (< 2 x): NODE_1688_length_1068_cov_1.320207
[shovill] Removing low coverage contig (< 2 x): NODE_1689_length_1067_cov_1.324689
[shovill] Removing low coverage contig (< 2 x): NODE_1690_length_1066_cov_1.252336
[shovill] Removing low coverage contig (< 2 x): NODE_1691_length_1066_cov_1.183801
[shovill] Removing low coverage contig (< 2 x): NODE_1696_length_1065_cov_0.934511
[shovill] Removing low coverage contig (< 2 x): NODE_1694_length_1065_cov_1.591476
[shovill] Removing low coverage contig (< 2 x): NODE_1693_length_1065_cov_1.659044
[shovill] Removing low coverage contig (< 2 x): NODE_1695_length_1065_cov_1.012474
[shovill] Removing low coverage contig (< 2 x): NODE_1692_length_1065_cov_1.820166
[shovill] Removing low coverage contig (< 2 x): NODE_1697_length_1064_cov_1.244537
[shovill] Removing low coverage contig (< 2 x): NODE_1699_length_1063_cov_1.005208
[shovill] Removing low coverage contig (< 2 x): NODE_1698_length_1063_cov_1.901042
[shovill] Removing low coverage contig (< 2 x): NODE_1700_length_1062_cov_1.484880
[shovill] Removing low coverage contig (< 2 x): NODE_1701_length_1062_cov_0.917623
[shovill] Removing low coverage contig (< 2 x): NODE_1704_length_1057_cov_1.738994
[shovill] Removing low coverage contig (< 2 x): NODE_1703_length_1057_cov_1.924528
[shovill] Removing low coverage contig (< 2 x): NODE_1705_length_1057_cov_1.310273
[shovill] Removing low coverage contig (< 2 x): NODE_1706_length_1055_cov_1.381303
[shovill] Removing low coverage contig (< 2 x): NODE_1707_length_1054_cov_1.995794
[shovill] Removing low coverage contig (< 2 x): NODE_1709_length_1054_cov_1.301788
[shovill] Removing low coverage contig (< 2 x): NODE_1708_length_1054_cov_1.753943
[shovill] Removing low coverage contig (< 2 x): NODE_1710_length_1052_cov_1.972603
[shovill] Removing low coverage contig (< 2 x): NODE_1711_length_1051_cov_0.876582
[shovill] Removing low coverage contig (< 2 x): NODE_1712_length_1050_cov_1.532207
[shovill] Removing low coverage contig (< 2 x): NODE_1713_length_1050_cov_1.409715
[shovill] Removing low coverage contig (< 2 x): NODE_1714_length_1050_cov_1.307286
[shovill] Removing low coverage contig (< 2 x): NODE_1715_length_1049_cov_1.366808
[shovill] Removing low coverage contig (< 2 x): NODE_1716_length_1049_cov_1.083510
[shovill] Removing low coverage contig (< 2 x): NODE_1718_length_1048_cov_1.445503
[shovill] Removing low coverage contig (< 2 x): NODE_1720_length_1047_cov_1.820975
[shovill] Removing low coverage contig (< 2 x): NODE_1721_length_1046_cov_1.653234
[shovill] Removing low coverage contig (< 2 x): NODE_1722_length_1045_cov_1.566879
[shovill] Removing low coverage contig (< 2 x): NODE_1723_length_1045_cov_1.317410
[shovill] Removing low coverage contig (< 2 x): NODE_1725_length_1044_cov_1.794899
[shovill] Removing low coverage contig (< 2 x): NODE_1726_length_1044_cov_1.212540
[shovill] Removing low coverage contig (< 2 x): NODE_1728_length_1043_cov_1.803191
[shovill] Removing low coverage contig (< 2 x): NODE_1727_length_1043_cov_1.901064
[shovill] Removing low coverage contig (< 2 x): NODE_1730_length_1041_cov_1.672708
[shovill] Removing low coverage contig (< 2 x): NODE_1731_length_1041_cov_1.364606
[shovill] Removing low coverage contig (< 2 x): NODE_1732_length_1040_cov_1.745998
[shovill] Removing low coverage contig (< 2 x): NODE_1734_length_1040_cov_0.988260
[shovill] Removing low coverage contig (< 2 x): NODE_1733_length_1040_cov_1.470651
[shovill] Removing low coverage contig (< 2 x): NODE_1735_length_1039_cov_0.836538
[shovill] Removing low coverage contig (< 2 x): NODE_1736_length_1038_cov_1.357219
[shovill] Removing low coverage contig (< 2 x): NODE_1739_length_1037_cov_1.327623
[shovill] Removing low coverage contig (< 2 x): NODE_1737_length_1037_cov_1.762313
[shovill] Removing low coverage contig (< 2 x): NODE_1738_length_1037_cov_1.669165
[shovill] Removing low coverage contig (< 2 x): NODE_1742_length_1036_cov_1.196141
[shovill] Removing low coverage contig (< 2 x): NODE_1741_length_1036_cov_1.936763
[shovill] Removing low coverage contig (< 2 x): NODE_1744_length_1035_cov_0.930258
[shovill] Removing low coverage contig (< 2 x): NODE_1743_length_1035_cov_1.282189
[shovill] Removing low coverage contig (< 2 x): NODE_1745_length_1034_cov_1.060150
[shovill] Removing low coverage contig (< 2 x): NODE_1746_length_1034_cov_1.031149
[shovill] Removing low coverage contig (< 2 x): NODE_1747_length_1033_cov_1.317204
[shovill] Removing low coverage contig (< 2 x): NODE_1749_length_1032_cov_0.955867
[shovill] Removing low coverage contig (< 2 x): NODE_1750_length_1031_cov_1.331897
[shovill] Removing low coverage contig (< 2 x): NODE_1753_length_1030_cov_1.322546
[shovill] Removing low coverage contig (< 2 x): NODE_1752_length_1030_cov_1.715210
[shovill] Removing low coverage contig (< 2 x): NODE_1751_length_1030_cov_1.781014
[shovill] Removing low coverage contig (< 2 x): NODE_1754_length_1029_cov_1.655508
[shovill] Removing low coverage contig (< 2 x): NODE_1755_length_1028_cov_0.974054
[shovill] Removing low coverage contig (< 2 x): NODE_1756_length_1027_cov_1.572511
[shovill] Removing low coverage contig (< 2 x): NODE_1760_length_1025_cov_1.326464
[shovill] Removing low coverage contig (< 2 x): NODE_1758_length_1025_cov_1.632321
[shovill] Removing low coverage contig (< 2 x): NODE_1761_length_1025_cov_0.955531
[shovill] Removing low coverage contig (< 2 x): NODE_1759_length_1025_cov_1.328633
[shovill] Removing low coverage contig (< 2 x): NODE_1764_length_1024_cov_1.257329
[shovill] Removing low coverage contig (< 2 x): NODE_1763_length_1024_cov_1.393051
[shovill] Removing low coverage contig (< 2 x): NODE_1765_length_1023_cov_1.235870
[shovill] Removing low coverage contig (< 2 x): NODE_1766_length_1022_cov_1.404788
[shovill] Removing low coverage contig (< 2 x): NODE_1768_length_1022_cov_0.893362
[shovill] Removing low coverage contig (< 2 x): NODE_1767_length_1022_cov_1.156692
[shovill] Removing low coverage contig (< 2 x): NODE_1771_length_1021_cov_0.992375
[shovill] Removing low coverage contig (< 2 x): NODE_1770_length_1021_cov_1.017429
[shovill] Removing low coverage contig (< 2 x): NODE_1769_length_1021_cov_1.338780
[shovill] Removing low coverage contig (< 2 x): NODE_1772_length_1020_cov_1.153762
[shovill] Removing low coverage contig (< 2 x): NODE_1773_length_1020_cov_1.059978
[shovill] Removing low coverage contig (< 2 x): NODE_1776_length_1019_cov_1.695415
[shovill] Removing low coverage contig (< 2 x): NODE_1775_length_1019_cov_1.739083
[shovill] Removing low coverage contig (< 2 x): NODE_1778_length_1019_cov_1.315502
[shovill] Removing low coverage contig (< 2 x): NODE_1777_length_1019_cov_1.681223
[shovill] Removing low coverage contig (< 2 x): NODE_1774_length_1019_cov_1.909389
[shovill] Removing low coverage contig (< 2 x): NODE_1779_length_1016_cov_1.634173
[shovill] Removing low coverage contig (< 2 x): NODE_1783_length_1015_cov_1.422149
[shovill] Removing low coverage contig (< 2 x): NODE_1781_length_1015_cov_1.823465
[shovill] Removing low coverage contig (< 2 x): NODE_1782_length_1015_cov_1.523026
[shovill] Removing low coverage contig (< 2 x): NODE_1784_length_1015_cov_1.402412
[shovill] Removing low coverage contig (< 2 x): NODE_1785_length_1014_cov_1.331504
[shovill] Removing low coverage contig (< 2 x): NODE_1786_length_1014_cov_1.223930
[shovill] Removing low coverage contig (< 2 x): NODE_1787_length_1014_cov_0.995609
[shovill] Removing low coverage contig (< 2 x): NODE_1789_length_1012_cov_0.823982
[shovill] Removing low coverage contig (< 2 x): NODE_1788_length_1012_cov_1.816282
[shovill] Removing low coverage contig (< 2 x): NODE_1794_length_1009_cov_1.419426
[shovill] Removing low coverage contig (< 2 x): NODE_1792_length_1009_cov_1.488962
[shovill] Removing low coverage contig (< 2 x): NODE_1793_length_1009_cov_1.445916
[shovill] Removing low coverage contig (< 2 x): NODE_1791_length_1009_cov_1.921634
[shovill] Removing low coverage contig (< 2 x): NODE_1795_length_1008_cov_1.213260
[shovill] Removing low coverage contig (< 2 x): NODE_1796_length_1007_cov_1.683628
[shovill] Removing low coverage contig (< 2 x): NODE_1800_length_1006_cov_1.972315
[shovill] Removing low coverage contig (< 2 x): NODE_1803_length_1006_cov_1.162791
[shovill] Removing low coverage contig (< 2 x): NODE_1802_length_1006_cov_1.475083
[shovill] Removing low coverage contig (< 2 x): NODE_1801_length_1006_cov_1.688815
[shovill] Removing low coverage contig (< 2 x): NODE_1804_length_1005_cov_1.159645
[shovill] Removing low coverage contig (< 2 x): NODE_1805_length_1004_cov_1.511654
[shovill] Removing low coverage contig (< 2 x): NODE_1807_length_1002_cov_1.697442
[shovill] Removing low coverage contig (< 2 x): NODE_1808_length_1002_cov_1.414905
[shovill] Removing low coverage contig (< 2 x): NODE_1806_length_1002_cov_1.855395
[shovill] Removing low coverage contig (< 2 x): NODE_1809_length_1001_cov_1.971047
[shovill] Removing low coverage contig (< 2 x): NODE_1813_length_1001_cov_1.273942
[shovill] Removing low coverage contig (< 2 x): NODE_1811_length_1001_cov_1.752784
[shovill] Removing low coverage contig (< 2 x): NODE_1810_length_1001_cov_1.943207
[shovill] Removing low coverage contig (< 2 x): NODE_1812_length_1001_cov_1.688196
[shovill] Removing low coverage contig (< 2 x): NODE_1814_length_1000_cov_1.856187
[shovill] Removing low coverage contig (< 2 x): NODE_1815_length_999_cov_1.084821
[shovill] Removing low coverage contig (< 2 x): NODE_1817_length_998_cov_1.822346
[shovill] Removing low coverage contig (< 2 x): NODE_1818_length_998_cov_0.922905
[shovill] Removing low coverage contig (< 2 x): NODE_1820_length_997_cov_1.426174
[shovill] Removing low coverage contig (< 2 x): NODE_1823_length_996_cov_1.155655
[shovill] Removing low coverage contig (< 2 x): NODE_1821_length_996_cov_1.893617
[shovill] Removing low coverage contig (< 2 x): NODE_1822_length_996_cov_1.832027
[shovill] Removing low coverage contig (< 2 x): NODE_1825_length_995_cov_1.549327
[shovill] Removing low coverage contig (< 2 x): NODE_1829_length_994_cov_1.051627
[shovill] Removing low coverage contig (< 2 x): NODE_1828_length_994_cov_1.580247
[shovill] Removing low coverage contig (< 2 x): NODE_1827_length_994_cov_1.671156
[shovill] Removing low coverage contig (< 2 x): NODE_1826_length_994_cov_1.671156
[shovill] Removing low coverage contig (< 2 x): NODE_1830_length_994_cov_0.977553
[shovill] Removing low coverage contig (< 2 x): NODE_1831_length_993_cov_1.112360
[shovill] Removing low coverage contig (< 2 x): NODE_1832_length_992_cov_1.708661
[shovill] Removing low coverage contig (< 2 x): NODE_1833_length_992_cov_1.600675
[shovill] Removing low coverage contig (< 2 x): NODE_1835_length_991_cov_1.182432
[shovill] Removing low coverage contig (< 2 x): NODE_1837_length_991_cov_1.083333
[shovill] Removing low coverage contig (< 2 x): NODE_1834_length_991_cov_1.454955
[shovill] Removing low coverage contig (< 2 x): NODE_1836_length_991_cov_1.129505
[shovill] Removing low coverage contig (< 2 x): NODE_1840_length_990_cov_1.622322
[shovill] Removing low coverage contig (< 2 x): NODE_1839_length_990_cov_1.669673
[shovill] Removing low coverage contig (< 2 x): NODE_1838_length_990_cov_1.784667
[shovill] Removing low coverage contig (< 2 x): NODE_1841_length_989_cov_0.915350
[shovill] Removing low coverage contig (< 2 x): NODE_1842_length_987_cov_1.435520
[shovill] Removing low coverage contig (< 2 x): NODE_1844_length_986_cov_1.550396
[shovill] Removing low coverage contig (< 2 x): NODE_1845_length_986_cov_0.922990
[shovill] Removing low coverage contig (< 2 x): NODE_1846_length_985_cov_1.548753
[shovill] Removing low coverage contig (< 2 x): NODE_1848_length_984_cov_1.693530
[shovill] Removing low coverage contig (< 2 x): NODE_1849_length_984_cov_1.646992
[shovill] Removing low coverage contig (< 2 x): NODE_1850_length_984_cov_1.401816
[shovill] Removing low coverage contig (< 2 x): NODE_1851_length_984_cov_1.313280
[shovill] Removing low coverage contig (< 2 x): NODE_1847_length_984_cov_1.808173
[shovill] Removing low coverage contig (< 2 x): NODE_1852_length_983_cov_1.843182
[shovill] Removing low coverage contig (< 2 x): NODE_1854_length_981_cov_1.428246
[shovill] Removing low coverage contig (< 2 x): NODE_1853_length_981_cov_1.469248
[shovill] Removing low coverage contig (< 2 x): NODE_1855_length_980_cov_1.526796
[shovill] Removing low coverage contig (< 2 x): NODE_1856_length_980_cov_1.058153
[shovill] Removing low coverage contig (< 2 x): NODE_1859_length_979_cov_1.644977
[shovill] Removing low coverage contig (< 2 x): NODE_1860_length_979_cov_1.587900
[shovill] Removing low coverage contig (< 2 x): NODE_1857_length_979_cov_1.816210
[shovill] Removing low coverage contig (< 2 x): NODE_1858_length_979_cov_1.651826
[shovill] Removing low coverage contig (< 2 x): NODE_1861_length_978_cov_1.534857
[shovill] Removing low coverage contig (< 2 x): NODE_1862_length_978_cov_0.800000
[shovill] Removing low coverage contig (< 2 x): NODE_1864_length_977_cov_1.643021
[shovill] Removing low coverage contig (< 2 x): NODE_1863_length_977_cov_1.655606
[shovill] Removing low coverage contig (< 2 x): NODE_1865_length_976_cov_1.407789
[shovill] Removing low coverage contig (< 2 x): NODE_1866_length_976_cov_1.019473
[shovill] Removing low coverage contig (< 2 x): NODE_1869_length_975_cov_1.511468
[shovill] Removing low coverage contig (< 2 x): NODE_1868_length_975_cov_1.944954
[shovill] Removing low coverage contig (< 2 x): NODE_1870_length_975_cov_1.185780
[shovill] Removing low coverage contig (< 2 x): NODE_1871_length_972_cov_1.675489
[shovill] Removing low coverage contig (< 2 x): NODE_1873_length_971_cov_1.436636
[shovill] Removing low coverage contig (< 2 x): NODE_1872_length_971_cov_1.793779
[shovill] Removing low coverage contig (< 2 x): NODE_1876_length_970_cov_1.277970
[shovill] Removing low coverage contig (< 2 x): NODE_1875_length_970_cov_1.381776
[shovill] Removing low coverage contig (< 2 x): NODE_1874_length_970_cov_1.892734
[shovill] Removing low coverage contig (< 2 x): NODE_1877_length_969_cov_1.287529
[shovill] Removing low coverage contig (< 2 x): NODE_1879_length_969_cov_1.115473
[shovill] Removing low coverage contig (< 2 x): NODE_1880_length_969_cov_1.072748
[shovill] Removing low coverage contig (< 2 x): NODE_1878_length_969_cov_1.240185
[shovill] Removing low coverage contig (< 2 x): NODE_1881_length_968_cov_1.766474
[shovill] Removing low coverage contig (< 2 x): NODE_1882_length_968_cov_1.387283
[shovill] Removing low coverage contig (< 2 x): NODE_1883_length_968_cov_1.344509
[shovill] Removing low coverage contig (< 2 x): NODE_1884_length_967_cov_1.336806
[shovill] Removing low coverage contig (< 2 x): NODE_1885_length_967_cov_1.009259
[shovill] Removing low coverage contig (< 2 x): NODE_1886_length_966_cov_1.568946
[shovill] Removing low coverage contig (< 2 x): NODE_1888_length_963_cov_1.248837
[shovill] Removing low coverage contig (< 2 x): NODE_1887_length_963_cov_1.680233
[shovill] Removing low coverage contig (< 2 x): NODE_1889_length_962_cov_0.946449
[shovill] Removing low coverage contig (< 2 x): NODE_1891_length_961_cov_0.931235
[shovill] Removing low coverage contig (< 2 x): NODE_1892_length_959_cov_1.803738
[shovill] Removing low coverage contig (< 2 x): NODE_1895_length_958_cov_0.727485
[shovill] Removing low coverage contig (< 2 x): NODE_1894_length_958_cov_1.792982
[shovill] Removing low coverage contig (< 2 x): NODE_1897_length_957_cov_1.490632
[shovill] Removing low coverage contig (< 2 x): NODE_1896_length_957_cov_1.525761
[shovill] Removing low coverage contig (< 2 x): NODE_1898_length_956_cov_1.932005
[shovill] Removing low coverage contig (< 2 x): NODE_1899_length_956_cov_1.524033
[shovill] Removing low coverage contig (< 2 x): NODE_1900_length_956_cov_1.397421
[shovill] Removing low coverage contig (< 2 x): NODE_1903_length_955_cov_1.183099
[shovill] Removing low coverage contig (< 2 x): NODE_1902_length_955_cov_1.546948
[shovill] Removing low coverage contig (< 2 x): NODE_1904_length_954_cov_1.319624
[shovill] Removing low coverage contig (< 2 x): NODE_1907_length_953_cov_1.402353
[shovill] Removing low coverage contig (< 2 x): NODE_1906_length_953_cov_1.472941
[shovill] Removing low coverage contig (< 2 x): NODE_1910_length_952_cov_1.689046
[shovill] Removing low coverage contig (< 2 x): NODE_1908_length_952_cov_1.858657
[shovill] Removing low coverage contig (< 2 x): NODE_1911_length_952_cov_1.412250
[shovill] Removing low coverage contig (< 2 x): NODE_1909_length_952_cov_1.751472
[shovill] Removing low coverage contig (< 2 x): NODE_1912_length_951_cov_1.857311
[shovill] Removing low coverage contig (< 2 x): NODE_1915_length_950_cov_0.846517
[shovill] Removing low coverage contig (< 2 x): NODE_1914_length_950_cov_1.109799
[shovill] Removing low coverage contig (< 2 x): NODE_1913_length_950_cov_1.290437
[shovill] Removing low coverage contig (< 2 x): NODE_1916_length_949_cov_1.302600
[shovill] Removing low coverage contig (< 2 x): NODE_1917_length_948_cov_1.027219
[shovill] Removing low coverage contig (< 2 x): NODE_1919_length_946_cov_1.526690
[shovill] Removing low coverage contig (< 2 x): NODE_1918_length_946_cov_1.785291
[shovill] Removing low coverage contig (< 2 x): NODE_1920_length_946_cov_0.954923
[shovill] Removing low coverage contig (< 2 x): NODE_1924_length_945_cov_1.225653
[shovill] Removing low coverage contig (< 2 x): NODE_1923_length_945_cov_1.422803
[shovill] Removing low coverage contig (< 2 x): NODE_1922_length_945_cov_1.482185
[shovill] Removing low coverage contig (< 2 x): NODE_1921_length_945_cov_1.787411
[shovill] Removing low coverage contig (< 2 x): NODE_1925_length_944_cov_1.536266
[shovill] Removing low coverage contig (< 2 x): NODE_1926_length_943_cov_0.972619
[shovill] Removing low coverage contig (< 2 x): NODE_1928_length_942_cov_1.532777
[shovill] Removing low coverage contig (< 2 x): NODE_1927_length_942_cov_1.908224
[shovill] Removing low coverage contig (< 2 x): NODE_1930_length_941_cov_1.453461
[shovill] Removing low coverage contig (< 2 x): NODE_1929_length_941_cov_1.578759
[shovill] Removing low coverage contig (< 2 x): NODE_1931_length_940_cov_0.875747
[shovill] Removing low coverage contig (< 2 x): NODE_1933_length_938_cov_1.549701
[shovill] Removing low coverage contig (< 2 x): NODE_1932_length_938_cov_1.731737
[shovill] Removing low coverage contig (< 2 x): NODE_1934_length_938_cov_1.100599
[shovill] Removing low coverage contig (< 2 x): NODE_1938_length_937_cov_0.937650
[shovill] Removing low coverage contig (< 2 x): NODE_1936_length_937_cov_1.628297
[shovill] Removing low coverage contig (< 2 x): NODE_1937_length_937_cov_1.326139
[shovill] Removing low coverage contig (< 2 x): NODE_1939_length_936_cov_1.219688
[shovill] Removing low coverage contig (< 2 x): NODE_1941_length_935_cov_1.022837
[shovill] Removing low coverage contig (< 2 x): NODE_1942_length_935_cov_0.936298
[shovill] Removing low coverage contig (< 2 x): NODE_1940_length_935_cov_1.852163
[shovill] Removing low coverage contig (< 2 x): NODE_1944_length_934_cov_1.333333
[shovill] Removing low coverage contig (< 2 x): NODE_1943_length_934_cov_1.773767
[shovill] Removing low coverage contig (< 2 x): NODE_1945_length_933_cov_1.872289
[shovill] Removing low coverage contig (< 2 x): NODE_1946_length_933_cov_1.734940
[shovill] Removing low coverage contig (< 2 x): NODE_1947_length_933_cov_1.354217
[shovill] Removing low coverage contig (< 2 x): NODE_1948_length_932_cov_1.279855
[shovill] Removing low coverage contig (< 2 x): NODE_1953_length_931_cov_0.950483
[shovill] Removing low coverage contig (< 2 x): NODE_1952_length_931_cov_1.246377
[shovill] Removing low coverage contig (< 2 x): NODE_1954_length_931_cov_0.785024
[shovill] Removing low coverage contig (< 2 x): NODE_1951_length_931_cov_1.657005
[shovill] Removing low coverage contig (< 2 x): NODE_1950_length_931_cov_1.673913
[shovill] Removing low coverage contig (< 2 x): NODE_1957_length_930_cov_1.415961
[shovill] Removing low coverage contig (< 2 x): NODE_1960_length_930_cov_1.095526
[shovill] Removing low coverage contig (< 2 x): NODE_1956_length_930_cov_1.472793
[shovill] Removing low coverage contig (< 2 x): NODE_1959_length_930_cov_1.353083
[shovill] Removing low coverage contig (< 2 x): NODE_1958_length_930_cov_1.379686
[shovill] Removing low coverage contig (< 2 x): NODE_1963_length_929_cov_1.106538
[shovill] Removing low coverage contig (< 2 x): NODE_1961_length_929_cov_1.319613
[shovill] Removing low coverage contig (< 2 x): NODE_1962_length_929_cov_1.249395
[shovill] Removing low coverage contig (< 2 x): NODE_1964_length_928_cov_1.790303
[shovill] Removing low coverage contig (< 2 x): NODE_1967_length_928_cov_1.181818
[shovill] Removing low coverage contig (< 2 x): NODE_1965_length_928_cov_1.762424
[shovill] Removing low coverage contig (< 2 x): NODE_1966_length_928_cov_1.424242
[shovill] Removing low coverage contig (< 2 x): NODE_1968_length_927_cov_1.598301
[shovill] Removing low coverage contig (< 2 x): NODE_1970_length_927_cov_1.108010
[shovill] Removing low coverage contig (< 2 x): NODE_1969_length_927_cov_1.493932
[shovill] Removing low coverage contig (< 2 x): NODE_1971_length_925_cov_1.015815
[shovill] Removing low coverage contig (< 2 x): NODE_1975_length_924_cov_1.492083
[shovill] Removing low coverage contig (< 2 x): NODE_1972_length_924_cov_1.866017
[shovill] Removing low coverage contig (< 2 x): NODE_1976_length_924_cov_1.257004
[shovill] Removing low coverage contig (< 2 x): NODE_1974_length_924_cov_1.712546
[shovill] Removing low coverage contig (< 2 x): NODE_1973_length_924_cov_1.777101
[shovill] Removing low coverage contig (< 2 x): NODE_1979_length_923_cov_1.364634
[shovill] Removing low coverage contig (< 2 x): NODE_1977_length_923_cov_1.850000
[shovill] Removing low coverage contig (< 2 x): NODE_1980_length_923_cov_1.139024
[shovill] Removing low coverage contig (< 2 x): NODE_1978_length_923_cov_1.636585
[shovill] Removing low coverage contig (< 2 x): NODE_1981_length_922_cov_1.323565
[shovill] Removing low coverage contig (< 2 x): NODE_1982_length_921_cov_1.612469
[shovill] Removing low coverage contig (< 2 x): NODE_1983_length_921_cov_1.293399
[shovill] Removing low coverage contig (< 2 x): NODE_1985_length_920_cov_1.197062
[shovill] Removing low coverage contig (< 2 x): NODE_1984_length_920_cov_1.272950
[shovill] Removing low coverage contig (< 2 x): NODE_1986_length_919_cov_1.321078
[shovill] Removing low coverage contig (< 2 x): NODE_1987_length_919_cov_1.272059
[shovill] Removing low coverage contig (< 2 x): NODE_1991_length_918_cov_1.278528
[shovill] Removing low coverage contig (< 2 x): NODE_1988_length_918_cov_1.825767
[shovill] Removing low coverage contig (< 2 x): NODE_1992_length_918_cov_0.852761
[shovill] Removing low coverage contig (< 2 x): NODE_1990_length_918_cov_1.360736
[shovill] Removing low coverage contig (< 2 x): NODE_1989_length_918_cov_1.439264
[shovill] Removing low coverage contig (< 2 x): NODE_1993_length_917_cov_1.058968
[shovill] Removing low coverage contig (< 2 x): NODE_1994_length_915_cov_1.139163
[shovill] Removing low coverage contig (< 2 x): NODE_1995_length_915_cov_1.113300
[shovill] Removing low coverage contig (< 2 x): NODE_1996_length_915_cov_0.970443
[shovill] Removing low coverage contig (< 2 x): NODE_1997_length_914_cov_0.901356
[shovill] Removing low coverage contig (< 2 x): NODE_1999_length_913_cov_0.923457
[shovill] Removing low coverage contig (< 2 x): NODE_1998_length_913_cov_0.986420
[shovill] Removing low coverage contig (< 2 x): NODE_2002_length_912_cov_1.493201
[shovill] Removing low coverage contig (< 2 x): NODE_2001_length_912_cov_1.930779
[shovill] Removing low coverage contig (< 2 x): NODE_2003_length_912_cov_1.336218
[shovill] Removing low coverage contig (< 2 x): NODE_2004_length_912_cov_1.111248
[shovill] Removing low coverage contig (< 2 x): NODE_2007_length_911_cov_1.293317
[shovill] Removing low coverage contig (< 2 x): NODE_2008_length_911_cov_1.292079
[shovill] Removing low coverage contig (< 2 x): NODE_2009_length_911_cov_1.212871
[shovill] Removing low coverage contig (< 2 x): NODE_2006_length_911_cov_1.577970
[shovill] Removing low coverage contig (< 2 x): NODE_2011_length_910_cov_1.296159
[shovill] Removing low coverage contig (< 2 x): NODE_2010_length_910_cov_1.325898
[shovill] Removing low coverage contig (< 2 x): NODE_2013_length_909_cov_1.330025
[shovill] Removing low coverage contig (< 2 x): NODE_2012_length_909_cov_1.635236
[shovill] Removing low coverage contig (< 2 x): NODE_2016_length_908_cov_0.812422
[shovill] Removing low coverage contig (< 2 x): NODE_2015_length_908_cov_1.070807
[shovill] Removing low coverage contig (< 2 x): NODE_2014_length_908_cov_1.291925
[shovill] Removing low coverage contig (< 2 x): NODE_2023_length_907_cov_1.007463
[shovill] Removing low coverage contig (< 2 x): NODE_2017_length_907_cov_1.654229
[shovill] Removing low coverage contig (< 2 x): NODE_2021_length_907_cov_1.144279
[shovill] Removing low coverage contig (< 2 x): NODE_2018_length_907_cov_1.442786
[shovill] Removing low coverage contig (< 2 x): NODE_2020_length_907_cov_1.197761
[shovill] Removing low coverage contig (< 2 x): NODE_2019_length_907_cov_1.417910
[shovill] Removing low coverage contig (< 2 x): NODE_2022_length_907_cov_1.055970
[shovill] Removing low coverage contig (< 2 x): NODE_2024_length_906_cov_1.892902
[shovill] Removing low coverage contig (< 2 x): NODE_2025_length_906_cov_1.711083
[shovill] Removing low coverage contig (< 2 x): NODE_2026_length_905_cov_1.857855
[shovill] Removing low coverage contig (< 2 x): NODE_2028_length_905_cov_1.081047
[shovill] Removing low coverage contig (< 2 x): NODE_2027_length_905_cov_1.371571
[shovill] Removing low coverage contig (< 2 x): NODE_2032_length_903_cov_1.123750
[shovill] Removing low coverage contig (< 2 x): NODE_2030_length_903_cov_1.847500
[shovill] Removing low coverage contig (< 2 x): NODE_2031_length_903_cov_1.801250
[shovill] Removing low coverage contig (< 2 x): NODE_2033_length_903_cov_1.121250
[shovill] Removing low coverage contig (< 2 x): NODE_2034_length_902_cov_1.689612
[shovill] Removing low coverage contig (< 2 x): NODE_2035_length_901_cov_1.223058
[shovill] Removing low coverage contig (< 2 x): NODE_2037_length_900_cov_1.902133
[shovill] Removing low coverage contig (< 2 x): NODE_2038_length_899_cov_1.741206
[shovill] Removing low coverage contig (< 2 x): NODE_2039_length_898_cov_1.143396
[shovill] Removing low coverage contig (< 2 x): NODE_2041_length_897_cov_1.151134
[shovill] Removing low coverage contig (< 2 x): NODE_2042_length_897_cov_1.147355
[shovill] Removing low coverage contig (< 2 x): NODE_2040_length_897_cov_1.741814
[shovill] Removing low coverage contig (< 2 x): NODE_2044_length_896_cov_1.510719
[shovill] Removing low coverage contig (< 2 x): NODE_2043_length_896_cov_1.824716
[shovill] Removing low coverage contig (< 2 x): NODE_2049_length_895_cov_1.309343
[shovill] Removing low coverage contig (< 2 x): NODE_2048_length_895_cov_1.919192
[shovill] Removing low coverage contig (< 2 x): NODE_2052_length_894_cov_1.245259
[shovill] Removing low coverage contig (< 2 x): NODE_2050_length_894_cov_1.719343
[shovill] Removing low coverage contig (< 2 x): NODE_2051_length_894_cov_1.424779
[shovill] Removing low coverage contig (< 2 x): NODE_2055_length_893_cov_0.824051
[shovill] Removing low coverage contig (< 2 x): NODE_2054_length_893_cov_1.325316
[shovill] Removing low coverage contig (< 2 x): NODE_2053_length_893_cov_1.651899
[shovill] Removing low coverage contig (< 2 x): NODE_2057_length_892_cov_1.566540
[shovill] Removing low coverage contig (< 2 x): NODE_2056_length_892_cov_1.731305
[shovill] Removing low coverage contig (< 2 x): NODE_2060_length_892_cov_1.055767
[shovill] Removing low coverage contig (< 2 x): NODE_2059_length_892_cov_1.332066
[shovill] Removing low coverage contig (< 2 x): NODE_2058_length_892_cov_1.413181
[shovill] Removing low coverage contig (< 2 x): NODE_2061_length_891_cov_1.422589
[shovill] Removing low coverage contig (< 2 x): NODE_2062_length_890_cov_1.165184
[shovill] Removing low coverage contig (< 2 x): NODE_2063_length_889_cov_0.966921
[shovill] Removing low coverage contig (< 2 x): NODE_2065_length_888_cov_1.663694
[shovill] Removing low coverage contig (< 2 x): NODE_2066_length_886_cov_1.872286
[shovill] Removing low coverage contig (< 2 x): NODE_2067_length_886_cov_1.495530
[shovill] Removing low coverage contig (< 2 x): NODE_2070_length_885_cov_0.998721
[shovill] Removing low coverage contig (< 2 x): NODE_2069_length_885_cov_1.205882
[shovill] Removing low coverage contig (< 2 x): NODE_2068_length_885_cov_1.361893
[shovill] Removing low coverage contig (< 2 x): NODE_2071_length_884_cov_1.669654
[shovill] Removing low coverage contig (< 2 x): NODE_2072_length_884_cov_1.199744
[shovill] Removing low coverage contig (< 2 x): NODE_2073_length_883_cov_1.429487
[shovill] Removing low coverage contig (< 2 x): NODE_2074_length_881_cov_1.699229
[shovill] Removing low coverage contig (< 2 x): NODE_2075_length_881_cov_1.109254
[shovill] Removing low coverage contig (< 2 x): NODE_2076_length_881_cov_1.042416
[shovill] Removing low coverage contig (< 2 x): NODE_2077_length_880_cov_1.211068
[shovill] Removing low coverage contig (< 2 x): NODE_2078_length_879_cov_1.907216
[shovill] Removing low coverage contig (< 2 x): NODE_2081_length_879_cov_0.817010
[shovill] Removing low coverage contig (< 2 x): NODE_2079_length_879_cov_1.742268
[shovill] Removing low coverage contig (< 2 x): NODE_2080_length_879_cov_1.372423
[shovill] Removing low coverage contig (< 2 x): NODE_2082_length_878_cov_1.143226
[shovill] Removing low coverage contig (< 2 x): NODE_2084_length_877_cov_1.440568
[shovill] Removing low coverage contig (< 2 x): NODE_2085_length_876_cov_1.479948
[shovill] Removing low coverage contig (< 2 x): NODE_2087_length_876_cov_0.935317
[shovill] Removing low coverage contig (< 2 x): NODE_2086_length_876_cov_1.042691
[shovill] Removing low coverage contig (< 2 x): NODE_2088_length_875_cov_1.151554
[shovill] Removing low coverage contig (< 2 x): NODE_2091_length_873_cov_1.020779
[shovill] Removing low coverage contig (< 2 x): NODE_2090_length_873_cov_1.925974
[shovill] Removing low coverage contig (< 2 x): NODE_2093_length_871_cov_1.007812
[shovill] Removing low coverage contig (< 2 x): NODE_2094_length_870_cov_1.393742
[shovill] Removing low coverage contig (< 2 x): NODE_2095_length_870_cov_1.229465
[shovill] Removing low coverage contig (< 2 x): NODE_2097_length_869_cov_1.422977
[shovill] Removing low coverage contig (< 2 x): NODE_2096_length_869_cov_1.492167
[shovill] Removing low coverage contig (< 2 x): NODE_2098_length_869_cov_1.331593
[shovill] Removing low coverage contig (< 2 x): NODE_2100_length_868_cov_1.266667
[shovill] Removing low coverage contig (< 2 x): NODE_2099_length_868_cov_1.545098
[shovill] Removing low coverage contig (< 2 x): NODE_2101_length_867_cov_0.769634
[shovill] Removing low coverage contig (< 2 x): NODE_2102_length_866_cov_0.977720
[shovill] Removing low coverage contig (< 2 x): NODE_2103_length_865_cov_1.884514
[shovill] Removing low coverage contig (< 2 x): NODE_2105_length_865_cov_1.241470
[shovill] Removing low coverage contig (< 2 x): NODE_2104_length_865_cov_1.393701
[shovill] Removing low coverage contig (< 2 x): NODE_2107_length_864_cov_0.821288
[shovill] Removing low coverage contig (< 2 x): NODE_2106_length_864_cov_1.013141
[shovill] Removing low coverage contig (< 2 x): NODE_2109_length_863_cov_1.538158
[shovill] Removing low coverage contig (< 2 x): NODE_2108_length_863_cov_1.705263
[shovill] Removing low coverage contig (< 2 x): NODE_2110_length_861_cov_1.299472
[shovill] Removing low coverage contig (< 2 x): NODE_2111_length_861_cov_0.997361
[shovill] Removing low coverage contig (< 2 x): NODE_2114_length_860_cov_0.612946
[shovill] Removing low coverage contig (< 2 x): NODE_2113_length_860_cov_0.874505
[shovill] Removing low coverage contig (< 2 x): NODE_2116_length_859_cov_1.071429
[shovill] Removing low coverage contig (< 2 x): NODE_2117_length_859_cov_1.030423
[shovill] Removing low coverage contig (< 2 x): NODE_2122_length_858_cov_0.992053
[shovill] Removing low coverage contig (< 2 x): NODE_2120_length_858_cov_1.180132
[shovill] Removing low coverage contig (< 2 x): NODE_2119_length_858_cov_1.464901
[shovill] Removing low coverage contig (< 2 x): NODE_2121_length_858_cov_1.177483
[shovill] Removing low coverage contig (< 2 x): NODE_2123_length_858_cov_0.846358
[shovill] Removing low coverage contig (< 2 x): NODE_2124_length_857_cov_1.702918
[shovill] Removing low coverage contig (< 2 x): NODE_2125_length_857_cov_1.411141
[shovill] Removing low coverage contig (< 2 x): NODE_2126_length_857_cov_1.200265
[shovill] Removing low coverage contig (< 2 x): NODE_2130_length_856_cov_0.763612
[shovill] Removing low coverage contig (< 2 x): NODE_2128_length_856_cov_1.486056
[shovill] Removing low coverage contig (< 2 x): NODE_2127_length_856_cov_1.840637
[shovill] Removing low coverage contig (< 2 x): NODE_2129_length_856_cov_1.231076
[shovill] Removing low coverage contig (< 2 x): NODE_2132_length_854_cov_1.605859
[shovill] Removing low coverage contig (< 2 x): NODE_2131_length_854_cov_1.869507
[shovill] Removing low coverage contig (< 2 x): NODE_2134_length_854_cov_1.335553
[shovill] Removing low coverage contig (< 2 x): NODE_2133_length_854_cov_1.601864
[shovill] Removing low coverage contig (< 2 x): NODE_2135_length_853_cov_1.497333
[shovill] Removing low coverage contig (< 2 x): NODE_2138_length_853_cov_0.776000
[shovill] Removing low coverage contig (< 2 x): NODE_2136_length_853_cov_1.322667
[shovill] Removing low coverage contig (< 2 x): NODE_2137_length_853_cov_0.978667
[shovill] Removing low coverage contig (< 2 x): NODE_2141_length_852_cov_1.132176
[shovill] Removing low coverage contig (< 2 x): NODE_2140_length_852_cov_1.194927
[shovill] Removing low coverage contig (< 2 x): NODE_2139_length_852_cov_1.731642
[shovill] Removing low coverage contig (< 2 x): NODE_2142_length_851_cov_1.426471
[shovill] Removing low coverage contig (< 2 x): NODE_2143_length_850_cov_1.244980
[shovill] Removing low coverage contig (< 2 x): NODE_2144_length_849_cov_1.290885
[shovill] Removing low coverage contig (< 2 x): NODE_2147_length_848_cov_1.120805
[shovill] Removing low coverage contig (< 2 x): NODE_2146_length_848_cov_1.310067
[shovill] Removing low coverage contig (< 2 x): NODE_2145_length_848_cov_1.986577
[shovill] Removing low coverage contig (< 2 x): NODE_2149_length_847_cov_1.338710
[shovill] Removing low coverage contig (< 2 x): NODE_2148_length_847_cov_1.560484
[shovill] Removing low coverage contig (< 2 x): NODE_2150_length_846_cov_1.391655
[shovill] Removing low coverage contig (< 2 x): NODE_2160_length_845_cov_0.851752
[shovill] Removing low coverage contig (< 2 x): NODE_2154_length_845_cov_1.319407
[shovill] Removing low coverage contig (< 2 x): NODE_2153_length_845_cov_1.330189
[shovill] Removing low coverage contig (< 2 x): NODE_2158_length_845_cov_0.987871
[shovill] Removing low coverage contig (< 2 x): NODE_2156_length_845_cov_1.293801
[shovill] Removing low coverage contig (< 2 x): NODE_2155_length_845_cov_1.299191
[shovill] Removing low coverage contig (< 2 x): NODE_2157_length_845_cov_1.291105
[shovill] Removing low coverage contig (< 2 x): NODE_2159_length_845_cov_0.885445
[shovill] Removing low coverage contig (< 2 x): NODE_2167_length_844_cov_1.022942
[shovill] Removing low coverage contig (< 2 x): NODE_2166_length_844_cov_1.028340
[shovill] Removing low coverage contig (< 2 x): NODE_2165_length_844_cov_1.395412
[shovill] Removing low coverage contig (< 2 x): NODE_2164_length_844_cov_1.500675
[shovill] Removing low coverage contig (< 2 x): NODE_2163_length_844_cov_1.739541
[shovill] Removing low coverage contig (< 2 x): NODE_2170_length_843_cov_1.429730
[shovill] Removing low coverage contig (< 2 x): NODE_2169_length_843_cov_1.497297
[shovill] Removing low coverage contig (< 2 x): NODE_2171_length_842_cov_0.932341
[shovill] Removing low coverage contig (< 2 x): NODE_2172_length_842_cov_0.687415
[shovill] Removing low coverage contig (< 2 x): NODE_2176_length_841_cov_1.127371
[shovill] Removing low coverage contig (< 2 x): NODE_2173_length_841_cov_1.551491
[shovill] Removing low coverage contig (< 2 x): NODE_2177_length_841_cov_1.074526
[shovill] Removing low coverage contig (< 2 x): NODE_2175_length_841_cov_1.214092
[shovill] Removing low coverage contig (< 2 x): NODE_2174_length_841_cov_1.266938
[shovill] Removing low coverage contig (< 2 x): NODE_2180_length_840_cov_1.717775
[shovill] Removing low coverage contig (< 2 x): NODE_2179_length_840_cov_1.731343
[shovill] Removing low coverage contig (< 2 x): NODE_2181_length_840_cov_1.538670
[shovill] Removing low coverage contig (< 2 x): NODE_2183_length_840_cov_1.036635
[shovill] Removing low coverage contig (< 2 x): NODE_2182_length_840_cov_1.457259
[shovill] Removing low coverage contig (< 2 x): NODE_2186_length_839_cov_1.163043
[shovill] Removing low coverage contig (< 2 x): NODE_2185_length_839_cov_1.247283
[shovill] Removing low coverage contig (< 2 x): NODE_2184_length_839_cov_1.686141
[shovill] Removing low coverage contig (< 2 x): NODE_2187_length_838_cov_1.952381
[shovill] Removing low coverage contig (< 2 x): NODE_2189_length_838_cov_1.257143
[shovill] Removing low coverage contig (< 2 x): NODE_2188_length_838_cov_1.427211
[shovill] Removing low coverage contig (< 2 x): NODE_2190_length_837_cov_1.559946
[shovill] Removing low coverage contig (< 2 x): NODE_2191_length_836_cov_1.365621
[shovill] Removing low coverage contig (< 2 x): NODE_2193_length_835_cov_1.398907
[shovill] Removing low coverage contig (< 2 x): NODE_2197_length_834_cov_1.229822
[shovill] Removing low coverage contig (< 2 x): NODE_2194_length_834_cov_1.863201
[shovill] Removing low coverage contig (< 2 x): NODE_2198_length_834_cov_1.140903
[shovill] Removing low coverage contig (< 2 x): NODE_2199_length_834_cov_1.112175
[shovill] Removing low coverage contig (< 2 x): NODE_2196_length_834_cov_1.354309
[shovill] Removing low coverage contig (< 2 x): NODE_2195_length_834_cov_1.473324
[shovill] Removing low coverage contig (< 2 x): NODE_2201_length_833_cov_1.420548
[shovill] Removing low coverage contig (< 2 x): NODE_2202_length_833_cov_1.245205
[shovill] Removing low coverage contig (< 2 x): NODE_2200_length_833_cov_1.538356
[shovill] Removing low coverage contig (< 2 x): NODE_2208_length_832_cov_0.621399
[shovill] Removing low coverage contig (< 2 x): NODE_2206_length_832_cov_1.465021
[shovill] Removing low coverage contig (< 2 x): NODE_2207_length_832_cov_1.222222
[shovill] Removing low coverage contig (< 2 x): NODE_2210_length_831_cov_1.645604
[shovill] Removing low coverage contig (< 2 x): NODE_2211_length_830_cov_1.861073
[shovill] Removing low coverage contig (< 2 x): NODE_2213_length_830_cov_1.635488
[shovill] Removing low coverage contig (< 2 x): NODE_2215_length_830_cov_1.246217
[shovill] Removing low coverage contig (< 2 x): NODE_2212_length_830_cov_1.664374
[shovill] Removing low coverage contig (< 2 x): NODE_2214_length_830_cov_1.570839
[shovill] Removing low coverage contig (< 2 x): NODE_2217_length_829_cov_1.061983
[shovill] Removing low coverage contig (< 2 x): NODE_2216_length_829_cov_1.570248
[shovill] Removing low coverage contig (< 2 x): NODE_2219_length_826_cov_1.352697
[shovill] Removing low coverage contig (< 2 x): NODE_2220_length_826_cov_1.006916
[shovill] Removing low coverage contig (< 2 x): NODE_2221_length_825_cov_1.530471
[shovill] Removing low coverage contig (< 2 x): NODE_2222_length_825_cov_1.185596
[shovill] Removing low coverage contig (< 2 x): NODE_2224_length_824_cov_1.432732
[shovill] Removing low coverage contig (< 2 x): NODE_2225_length_824_cov_0.926491
[shovill] Removing low coverage contig (< 2 x): NODE_2223_length_824_cov_1.889043
[shovill] Removing low coverage contig (< 2 x): NODE_2226_length_822_cov_1.856745
[shovill] Removing low coverage contig (< 2 x): NODE_2227_length_822_cov_1.255911
[shovill] Removing low coverage contig (< 2 x): NODE_2230_length_821_cov_1.448468
[shovill] Removing low coverage contig (< 2 x): NODE_2229_length_821_cov_1.919220
[shovill] Removing low coverage contig (< 2 x): NODE_2228_length_821_cov_1.962396
[shovill] Removing low coverage contig (< 2 x): NODE_2231_length_821_cov_1.162953
[shovill] Removing low coverage contig (< 2 x): NODE_2233_length_820_cov_1.407252
[shovill] Removing low coverage contig (< 2 x): NODE_2232_length_820_cov_1.584379
[shovill] Removing low coverage contig (< 2 x): NODE_2235_length_819_cov_1.293296
[shovill] Removing low coverage contig (< 2 x): NODE_2236_length_819_cov_0.910615
[shovill] Removing low coverage contig (< 2 x): NODE_2234_length_819_cov_1.860335
[shovill] Removing low coverage contig (< 2 x): NODE_2239_length_817_cov_1.473389
[shovill] Removing low coverage contig (< 2 x): NODE_2240_length_817_cov_1.401961
[shovill] Removing low coverage contig (< 2 x): NODE_2243_length_816_cov_1.100982
[shovill] Removing low coverage contig (< 2 x): NODE_2242_length_816_cov_1.474053
[shovill] Removing low coverage contig (< 2 x): NODE_2241_length_816_cov_1.807854
[shovill] Removing low coverage contig (< 2 x): NODE_2244_length_815_cov_1.856742
[shovill] Removing low coverage contig (< 2 x): NODE_2245_length_814_cov_1.812940
[shovill] Removing low coverage contig (< 2 x): NODE_2246_length_812_cov_1.503526
[shovill] Removing low coverage contig (< 2 x): NODE_2248_length_812_cov_1.110014
[shovill] Removing low coverage contig (< 2 x): NODE_2247_length_812_cov_1.393512
[shovill] Removing low coverage contig (< 2 x): NODE_2252_length_811_cov_1.682203
[shovill] Removing low coverage contig (< 2 x): NODE_2253_length_811_cov_1.163842
[shovill] Removing low coverage contig (< 2 x): NODE_2251_length_811_cov_1.785311
[shovill] Removing low coverage contig (< 2 x): NODE_2254_length_811_cov_0.980226
[shovill] Removing low coverage contig (< 2 x): NODE_2255_length_810_cov_1.874116
[shovill] Removing low coverage contig (< 2 x): NODE_2256_length_810_cov_1.340877
[shovill] Removing low coverage contig (< 2 x): NODE_2262_length_809_cov_0.725212
[shovill] Removing low coverage contig (< 2 x): NODE_2261_length_809_cov_0.968839
[shovill] Removing low coverage contig (< 2 x): NODE_2258_length_809_cov_1.669972
[shovill] Removing low coverage contig (< 2 x): NODE_2259_length_809_cov_1.507082
[shovill] Removing low coverage contig (< 2 x): NODE_2260_length_809_cov_1.399433
[shovill] Removing low coverage contig (< 2 x): NODE_2268_length_808_cov_1.211348
[shovill] Removing low coverage contig (< 2 x): NODE_2265_length_808_cov_1.937589
[shovill] Removing low coverage contig (< 2 x): NODE_2267_length_808_cov_1.460993
[shovill] Removing low coverage contig (< 2 x): NODE_2266_length_808_cov_1.680851
[shovill] Removing low coverage contig (< 2 x): NODE_2271_length_807_cov_0.845170
[shovill] Removing low coverage contig (< 2 x): NODE_2270_length_807_cov_0.951705
[shovill] Removing low coverage contig (< 2 x): NODE_2269_length_807_cov_1.017045
[shovill] Removing low coverage contig (< 2 x): NODE_2273_length_806_cov_1.028450
[shovill] Removing low coverage contig (< 2 x): NODE_2272_length_806_cov_1.937411
[shovill] Removing low coverage contig (< 2 x): NODE_2274_length_805_cov_1.377493
[shovill] Removing low coverage contig (< 2 x): NODE_2275_length_803_cov_0.881429
[shovill] Removing low coverage contig (< 2 x): NODE_2277_length_802_cov_1.371960
[shovill] Removing low coverage contig (< 2 x): NODE_2276_length_802_cov_1.620887
[shovill] Removing low coverage contig (< 2 x): NODE_2279_length_801_cov_0.936963
[shovill] Removing low coverage contig (< 2 x): NODE_2278_length_801_cov_1.200573
[shovill] Removing low coverage contig (< 2 x): NODE_2280_length_800_cov_1.483501
[shovill] Removing low coverage contig (< 2 x): NODE_2281_length_800_cov_1.373027
[shovill] Removing low coverage contig (< 2 x): NODE_2283_length_799_cov_1.905172
[shovill] Removing low coverage contig (< 2 x): NODE_2284_length_799_cov_1.581897
[shovill] Removing low coverage contig (< 2 x): NODE_2285_length_798_cov_1.961151
[shovill] Removing low coverage contig (< 2 x): NODE_2287_length_798_cov_1.041727
[shovill] Removing low coverage contig (< 2 x): NODE_2286_length_798_cov_1.402878
[shovill] Removing low coverage contig (< 2 x): NODE_2288_length_797_cov_1.870317
[shovill] Removing low coverage contig (< 2 x): NODE_2289_length_797_cov_1.378963
[shovill] Removing low coverage contig (< 2 x): NODE_2290_length_796_cov_1.564214
[shovill] Removing low coverage contig (< 2 x): NODE_2291_length_796_cov_1.432900
[shovill] Removing low coverage contig (< 2 x): NODE_2292_length_796_cov_1.155844
[shovill] Removing low coverage contig (< 2 x): NODE_2294_length_795_cov_1.492775
[shovill] Removing low coverage contig (< 2 x): NODE_2293_length_795_cov_1.969653
[shovill] Removing low coverage contig (< 2 x): NODE_2297_length_794_cov_0.887120
[shovill] Removing low coverage contig (< 2 x): NODE_2296_length_794_cov_1.856729
[shovill] Removing low coverage contig (< 2 x): NODE_2299_length_793_cov_1.431884
[shovill] Removing low coverage contig (< 2 x): NODE_2301_length_793_cov_0.915942
[shovill] Removing low coverage contig (< 2 x): NODE_2300_length_793_cov_1.127536
[shovill] Removing low coverage contig (< 2 x): NODE_2298_length_793_cov_1.531884
[shovill] Removing low coverage contig (< 2 x): NODE_2303_length_792_cov_1.017417
[shovill] Removing low coverage contig (< 2 x): NODE_2302_length_792_cov_1.206096
[shovill] Removing low coverage contig (< 2 x): NODE_2306_length_791_cov_1.539244
[shovill] Removing low coverage contig (< 2 x): NODE_2305_length_791_cov_1.845930
[shovill] Removing low coverage contig (< 2 x): NODE_2307_length_791_cov_1.369186
[shovill] Removing low coverage contig (< 2 x): NODE_2309_length_790_cov_1.227074
[shovill] Removing low coverage contig (< 2 x): NODE_2308_length_790_cov_1.375546
[shovill] Removing low coverage contig (< 2 x): NODE_2311_length_789_cov_1.215743
[shovill] Removing low coverage contig (< 2 x): NODE_2312_length_789_cov_1.014577
[shovill] Removing low coverage contig (< 2 x): NODE_2314_length_789_cov_0.803207
[shovill] Removing low coverage contig (< 2 x): NODE_2310_length_789_cov_1.851312
[shovill] Removing low coverage contig (< 2 x): NODE_2313_length_789_cov_0.930029
[shovill] Removing low coverage contig (< 2 x): NODE_2317_length_788_cov_1.671533
[shovill] Removing low coverage contig (< 2 x): NODE_2318_length_788_cov_1.430657
[shovill] Removing low coverage contig (< 2 x): NODE_2319_length_787_cov_1.571637
[shovill] Removing low coverage contig (< 2 x): NODE_2320_length_786_cov_1.565154
[shovill] Removing low coverage contig (< 2 x): NODE_2321_length_786_cov_1.368960
[shovill] Removing low coverage contig (< 2 x): NODE_2323_length_785_cov_1.105572
[shovill] Removing low coverage contig (< 2 x): NODE_2324_length_785_cov_0.892962
[shovill] Removing low coverage contig (< 2 x): NODE_2325_length_784_cov_0.966226
[shovill] Removing low coverage contig (< 2 x): NODE_2328_length_783_cov_1.298529
[shovill] Removing low coverage contig (< 2 x): NODE_2326_length_783_cov_1.505882
[shovill] Removing low coverage contig (< 2 x): NODE_2327_length_783_cov_1.317647
[shovill] Removing low coverage contig (< 2 x): NODE_2330_length_782_cov_0.836524
[shovill] Removing low coverage contig (< 2 x): NODE_2329_length_782_cov_1.132548
[shovill] Removing low coverage contig (< 2 x): NODE_2333_length_781_cov_1.641593
[shovill] Removing low coverage contig (< 2 x): NODE_2336_length_781_cov_1.471976
[shovill] Removing low coverage contig (< 2 x): NODE_2332_length_781_cov_1.837758
[shovill] Removing low coverage contig (< 2 x): NODE_2338_length_781_cov_0.893805
[shovill] Removing low coverage contig (< 2 x): NODE_2337_length_781_cov_1.333333
[shovill] Removing low coverage contig (< 2 x): NODE_2335_length_781_cov_1.476401
[shovill] Removing low coverage contig (< 2 x): NODE_2334_length_781_cov_1.528024
[shovill] Removing low coverage contig (< 2 x): NODE_2342_length_780_cov_1.499261
[shovill] Removing low coverage contig (< 2 x): NODE_2344_length_780_cov_1.225997
[shovill] Removing low coverage contig (< 2 x): NODE_2341_length_780_cov_1.952733
[shovill] Removing low coverage contig (< 2 x): NODE_2343_length_780_cov_1.240768
[shovill] Removing low coverage contig (< 2 x): NODE_2347_length_779_cov_0.980769
[shovill] Removing low coverage contig (< 2 x): NODE_2345_length_779_cov_1.489645
[shovill] Removing low coverage contig (< 2 x): NODE_2346_length_779_cov_1.440828
[shovill] Removing low coverage contig (< 2 x): NODE_2350_length_778_cov_0.957037
[shovill] Removing low coverage contig (< 2 x): NODE_2349_length_778_cov_1.228148
[shovill] Removing low coverage contig (< 2 x): NODE_2354_length_777_cov_1.124629
[shovill] Removing low coverage contig (< 2 x): NODE_2351_length_777_cov_1.642433
[shovill] Removing low coverage contig (< 2 x): NODE_2356_length_777_cov_1.057864
[shovill] Removing low coverage contig (< 2 x): NODE_2352_length_777_cov_1.507418
[shovill] Removing low coverage contig (< 2 x): NODE_2355_length_777_cov_1.072700
[shovill] Removing low coverage contig (< 2 x): NODE_2353_length_777_cov_1.362018
[shovill] Removing low coverage contig (< 2 x): NODE_2357_length_776_cov_1.084695
[shovill] Removing low coverage contig (< 2 x): NODE_2358_length_775_cov_1.976190
[shovill] Removing low coverage contig (< 2 x): NODE_2359_length_775_cov_1.971726
[shovill] Removing low coverage contig (< 2 x): NODE_2360_length_774_cov_1.771982
[shovill] Removing low coverage contig (< 2 x): NODE_2363_length_774_cov_0.727273
[shovill] Removing low coverage contig (< 2 x): NODE_2362_length_774_cov_1.323398
[shovill] Removing low coverage contig (< 2 x): NODE_2361_length_774_cov_1.549925
[shovill] Removing low coverage contig (< 2 x): NODE_2365_length_773_cov_1.317910
[shovill] Removing low coverage contig (< 2 x): NODE_2368_length_772_cov_1.428999
[shovill] Removing low coverage contig (< 2 x): NODE_2369_length_772_cov_1.275037
[shovill] Removing low coverage contig (< 2 x): NODE_2367_length_772_cov_1.627803
[shovill] Removing low coverage contig (< 2 x): NODE_2371_length_771_cov_0.688623
[shovill] Removing low coverage contig (< 2 x): NODE_2374_length_770_cov_1.499250
[shovill] Removing low coverage contig (< 2 x): NODE_2378_length_770_cov_0.863568
[shovill] Removing low coverage contig (< 2 x): NODE_2376_length_770_cov_1.368816
[shovill] Removing low coverage contig (< 2 x): NODE_2377_length_770_cov_1.133433
[shovill] Removing low coverage contig (< 2 x): NODE_2373_length_770_cov_1.674663
[shovill] Removing low coverage contig (< 2 x): NODE_2375_length_770_cov_1.416792
[shovill] Removing low coverage contig (< 2 x): NODE_2380_length_769_cov_1.246246
[shovill] Removing low coverage contig (< 2 x): NODE_2379_length_769_cov_1.657658
[shovill] Removing low coverage contig (< 2 x): NODE_2384_length_768_cov_0.798496
[shovill] Removing low coverage contig (< 2 x): NODE_2383_length_768_cov_1.497744
[shovill] Removing low coverage contig (< 2 x): NODE_2382_length_768_cov_1.800000
[shovill] Removing low coverage contig (< 2 x): NODE_2381_length_768_cov_1.845113
[shovill] Removing low coverage contig (< 2 x): NODE_2387_length_766_cov_1.460030
[shovill] Removing low coverage contig (< 2 x): NODE_2386_length_766_cov_1.662142
[shovill] Removing low coverage contig (< 2 x): NODE_2390_length_766_cov_0.737557
[shovill] Removing low coverage contig (< 2 x): NODE_2389_length_766_cov_0.918552
[shovill] Removing low coverage contig (< 2 x): NODE_2388_length_766_cov_1.122172
[shovill] Removing low coverage contig (< 2 x): NODE_2391_length_765_cov_1.285498
[shovill] Removing low coverage contig (< 2 x): NODE_2392_length_765_cov_1.083082
[shovill] Removing low coverage contig (< 2 x): NODE_2393_length_764_cov_1.780635
[shovill] Removing low coverage contig (< 2 x): NODE_2394_length_764_cov_1.193646
[shovill] Removing low coverage contig (< 2 x): NODE_2396_length_763_cov_1.507576
[shovill] Removing low coverage contig (< 2 x): NODE_2399_length_763_cov_0.989394
[shovill] Removing low coverage contig (< 2 x): NODE_2398_length_763_cov_0.995455
[shovill] Removing low coverage contig (< 2 x): NODE_2397_length_763_cov_1.309091
[shovill] Removing low coverage contig (< 2 x): NODE_2400_length_763_cov_0.980303
[shovill] Removing low coverage contig (< 2 x): NODE_2395_length_763_cov_1.793939
[shovill] Removing low coverage contig (< 2 x): NODE_2402_length_762_cov_0.810319
[shovill] Removing low coverage contig (< 2 x): NODE_2404_length_761_cov_1.335866
[shovill] Removing low coverage contig (< 2 x): NODE_2405_length_761_cov_1.025836
[shovill] Removing low coverage contig (< 2 x): NODE_2406_length_760_cov_1.943683
[shovill] Removing low coverage contig (< 2 x): NODE_2407_length_760_cov_1.301370
[shovill] Removing low coverage contig (< 2 x): NODE_2408_length_760_cov_1.097412
[shovill] Removing low coverage contig (< 2 x): NODE_2411_length_759_cov_1.246951
[shovill] Removing low coverage contig (< 2 x): NODE_2409_length_759_cov_1.967988
[shovill] Removing low coverage contig (< 2 x): NODE_2410_length_759_cov_1.530488
[shovill] Removing low coverage contig (< 2 x): NODE_2412_length_759_cov_0.893293
[shovill] Removing low coverage contig (< 2 x): NODE_2413_length_759_cov_0.853659
[shovill] Removing low coverage contig (< 2 x): NODE_2416_length_758_cov_1.441221
[shovill] Removing low coverage contig (< 2 x): NODE_2420_length_758_cov_1.138931
[shovill] Removing low coverage contig (< 2 x): NODE_2421_length_758_cov_0.949618
[shovill] Removing low coverage contig (< 2 x): NODE_2414_length_758_cov_1.928244
[shovill] Removing low coverage contig (< 2 x): NODE_2422_length_758_cov_0.819847
[shovill] Removing low coverage contig (< 2 x): NODE_2417_length_758_cov_1.441221
[shovill] Removing low coverage contig (< 2 x): NODE_2419_length_758_cov_1.406107
[shovill] Removing low coverage contig (< 2 x): NODE_2418_length_758_cov_1.435115
[shovill] Removing low coverage contig (< 2 x): NODE_2415_length_758_cov_1.679389
[shovill] Removing low coverage contig (< 2 x): NODE_2423_length_757_cov_1.169725
[shovill] Removing low coverage contig (< 2 x): NODE_2428_length_756_cov_0.840735
[shovill] Removing low coverage contig (< 2 x): NODE_2427_length_756_cov_0.909648
[shovill] Removing low coverage contig (< 2 x): NODE_2425_length_756_cov_1.551302
[shovill] Removing low coverage contig (< 2 x): NODE_2426_length_756_cov_1.062787
[shovill] Removing low coverage contig (< 2 x): NODE_2430_length_755_cov_1.058282
[shovill] Removing low coverage contig (< 2 x): NODE_2431_length_754_cov_1.486943
[shovill] Removing low coverage contig (< 2 x): NODE_2432_length_754_cov_1.130568
[shovill] Removing low coverage contig (< 2 x): NODE_2434_length_753_cov_1.046154
[shovill] Removing low coverage contig (< 2 x): NODE_2435_length_752_cov_1.181818
[shovill] Removing low coverage contig (< 2 x): NODE_2437_length_751_cov_1.273148
[shovill] Removing low coverage contig (< 2 x): NODE_2438_length_751_cov_1.266975
[shovill] Removing low coverage contig (< 2 x): NODE_2436_length_751_cov_1.645062
[shovill] Removing low coverage contig (< 2 x): NODE_2443_length_750_cov_0.911901
[shovill] Removing low coverage contig (< 2 x): NODE_2442_length_750_cov_1.486862
[shovill] Removing low coverage contig (< 2 x): NODE_2440_length_750_cov_1.707883
[shovill] Removing low coverage contig (< 2 x): NODE_2441_length_750_cov_1.690881
[shovill] Removing low coverage contig (< 2 x): NODE_2439_length_750_cov_1.765070
[shovill] Removing low coverage contig (< 2 x): NODE_2445_length_749_cov_1.074303
[shovill] Removing low coverage contig (< 2 x): NODE_2446_length_749_cov_1.006192
[shovill] Removing low coverage contig (< 2 x): NODE_2444_length_749_cov_1.893189
[shovill] Removing low coverage contig (< 2 x): NODE_2447_length_748_cov_1.548837
[shovill] Removing low coverage contig (< 2 x): NODE_2448_length_748_cov_1.038760
[shovill] Removing low coverage contig (< 2 x): NODE_2449_length_747_cov_1.246894
[shovill] Removing low coverage contig (< 2 x): NODE_2450_length_747_cov_1.012422
[shovill] Removing low coverage contig (< 2 x): NODE_2453_length_746_cov_1.468118
[shovill] Removing low coverage contig (< 2 x): NODE_2452_length_746_cov_1.653188
[shovill] Removing low coverage contig (< 2 x): NODE_2451_length_746_cov_1.990669
[shovill] Removing low coverage contig (< 2 x): NODE_2454_length_746_cov_0.933126
[shovill] Removing low coverage contig (< 2 x): NODE_2456_length_745_cov_1.781931
[shovill] Removing low coverage contig (< 2 x): NODE_2457_length_745_cov_1.336449
[shovill] Removing low coverage contig (< 2 x): NODE_2458_length_745_cov_1.155763
[shovill] Removing low coverage contig (< 2 x): NODE_2459_length_744_cov_1.299532
[shovill] Removing low coverage contig (< 2 x): NODE_2464_length_743_cov_0.885938
[shovill] Removing low coverage contig (< 2 x): NODE_2460_length_743_cov_1.964063
[shovill] Removing low coverage contig (< 2 x): NODE_2461_length_743_cov_1.596875
[shovill] Removing low coverage contig (< 2 x): NODE_2463_length_743_cov_1.098437
[shovill] Removing low coverage contig (< 2 x): NODE_2462_length_743_cov_1.303125
[shovill] Removing low coverage contig (< 2 x): NODE_2465_length_742_cov_1.960876
[shovill] Removing low coverage contig (< 2 x): NODE_2466_length_741_cov_1.379310
[shovill] Removing low coverage contig (< 2 x): NODE_2468_length_741_cov_1.015674
[shovill] Removing low coverage contig (< 2 x): NODE_2467_length_741_cov_1.354232
[shovill] Removing low coverage contig (< 2 x): NODE_2471_length_740_cov_1.095761
[shovill] Removing low coverage contig (< 2 x): NODE_2470_length_740_cov_1.174254
[shovill] Removing low coverage contig (< 2 x): NODE_2469_length_740_cov_1.441130
[shovill] Removing low coverage contig (< 2 x): NODE_2472_length_740_cov_0.908948
[shovill] Removing low coverage contig (< 2 x): NODE_2473_length_739_cov_1.935535
[shovill] Removing low coverage contig (< 2 x): NODE_2475_length_739_cov_1.393082
[shovill] Removing low coverage contig (< 2 x): NODE_2477_length_739_cov_1.176101
[shovill] Removing low coverage contig (< 2 x): NODE_2474_length_739_cov_1.550314
[shovill] Removing low coverage contig (< 2 x): NODE_2476_length_739_cov_1.383648
[shovill] Removing low coverage contig (< 2 x): NODE_2480_length_738_cov_1.088189
[shovill] Removing low coverage contig (< 2 x): NODE_2481_length_738_cov_1.033071
[shovill] Removing low coverage contig (< 2 x): NODE_2479_length_738_cov_1.275591
[shovill] Removing low coverage contig (< 2 x): NODE_2478_length_738_cov_1.639370
[shovill] Removing low coverage contig (< 2 x): NODE_2482_length_738_cov_0.765354
[shovill] Removing low coverage contig (< 2 x): NODE_2490_length_737_cov_0.686120
[shovill] Removing low coverage contig (< 2 x): NODE_2487_length_737_cov_1.198738
[shovill] Removing low coverage contig (< 2 x): NODE_2488_length_737_cov_1.078864
[shovill] Removing low coverage contig (< 2 x): NODE_2485_length_737_cov_1.552050
[shovill] Removing low coverage contig (< 2 x): NODE_2489_length_737_cov_0.865931
[shovill] Removing low coverage contig (< 2 x): NODE_2486_length_737_cov_1.337539
[shovill] Removing low coverage contig (< 2 x): NODE_2484_length_737_cov_1.575710
[shovill] Removing low coverage contig (< 2 x): NODE_2493_length_736_cov_1.077409
[shovill] Removing low coverage contig (< 2 x): NODE_2492_length_736_cov_1.330174
[shovill] Removing low coverage contig (< 2 x): NODE_2491_length_736_cov_1.424961
[shovill] Removing low coverage contig (< 2 x): NODE_2494_length_735_cov_1.802215
[shovill] Removing low coverage contig (< 2 x): NODE_2498_length_735_cov_0.993671
[shovill] Removing low coverage contig (< 2 x): NODE_2497_length_735_cov_1.262658
[shovill] Removing low coverage contig (< 2 x): NODE_2495_length_735_cov_1.297468
[shovill] Removing low coverage contig (< 2 x): NODE_2496_length_735_cov_1.278481
[shovill] Removing low coverage contig (< 2 x): NODE_2500_length_734_cov_1.087163
[shovill] Removing low coverage contig (< 2 x): NODE_2499_length_734_cov_1.247227
[shovill] Removing low coverage contig (< 2 x): NODE_2505_length_733_cov_1.042857
[shovill] Removing low coverage contig (< 2 x): NODE_2501_length_733_cov_1.868254
[shovill] Removing low coverage contig (< 2 x): NODE_2504_length_733_cov_1.326984
[shovill] Removing low coverage contig (< 2 x): NODE_2507_length_733_cov_0.944444
[shovill] Removing low coverage contig (< 2 x): NODE_2503_length_733_cov_1.334921
[shovill] Removing low coverage contig (< 2 x): NODE_2508_length_733_cov_0.873016
[shovill] Removing low coverage contig (< 2 x): NODE_2502_length_733_cov_1.604762
[shovill] Removing low coverage contig (< 2 x): NODE_2506_length_733_cov_0.998413
[shovill] Removing low coverage contig (< 2 x): NODE_2514_length_732_cov_1.138315
[shovill] Removing low coverage contig (< 2 x): NODE_2510_length_732_cov_1.906200
[shovill] Removing low coverage contig (< 2 x): NODE_2515_length_732_cov_1.136725
[shovill] Removing low coverage contig (< 2 x): NODE_2512_length_732_cov_1.273450
[shovill] Removing low coverage contig (< 2 x): NODE_2511_length_732_cov_1.815580
[shovill] Removing low coverage contig (< 2 x): NODE_2513_length_732_cov_1.160572
[shovill] Removing low coverage contig (< 2 x): NODE_2516_length_732_cov_1.022258
[shovill] Removing low coverage contig (< 2 x): NODE_2518_length_731_cov_1.232484
[shovill] Removing low coverage contig (< 2 x): NODE_2521_length_730_cov_1.586922
[shovill] Removing low coverage contig (< 2 x): NODE_2523_length_730_cov_1.303030
[shovill] Removing low coverage contig (< 2 x): NODE_2519_length_730_cov_1.933014
[shovill] Removing low coverage contig (< 2 x): NODE_2520_length_730_cov_1.644338
[shovill] Removing low coverage contig (< 2 x): NODE_2524_length_730_cov_1.156300
[shovill] Removing low coverage contig (< 2 x): NODE_2525_length_730_cov_1.141946
[shovill] Removing low coverage contig (< 2 x): NODE_2526_length_730_cov_1.108453
[shovill] Removing low coverage contig (< 2 x): NODE_2522_length_730_cov_1.441786
[shovill] Removing low coverage contig (< 2 x): NODE_2527_length_730_cov_1.036683
[shovill] Removing low coverage contig (< 2 x): NODE_2528_length_729_cov_1.782748
[shovill] Removing low coverage contig (< 2 x): NODE_2529_length_729_cov_1.555911
[shovill] Removing low coverage contig (< 2 x): NODE_2532_length_729_cov_1.332268
[shovill] Removing low coverage contig (< 2 x): NODE_2530_length_729_cov_1.500000
[shovill] Removing low coverage contig (< 2 x): NODE_2533_length_729_cov_1.194888
[shovill] Removing low coverage contig (< 2 x): NODE_2531_length_729_cov_1.369010
[shovill] Removing low coverage contig (< 2 x): NODE_2534_length_728_cov_1.795200
[shovill] Removing low coverage contig (< 2 x): NODE_2535_length_728_cov_1.569600
[shovill] Removing low coverage contig (< 2 x): NODE_2537_length_727_cov_1.919872
[shovill] Removing low coverage contig (< 2 x): NODE_2540_length_727_cov_1.299679
[shovill] Removing low coverage contig (< 2 x): NODE_2538_length_727_cov_1.767628
[shovill] Removing low coverage contig (< 2 x): NODE_2539_length_727_cov_1.540064
[shovill] Removing low coverage contig (< 2 x): NODE_2541_length_726_cov_1.539326
[shovill] Removing low coverage contig (< 2 x): NODE_2542_length_725_cov_1.696141
[shovill] Removing low coverage contig (< 2 x): NODE_2543_length_725_cov_1.263666
[shovill] Removing low coverage contig (< 2 x): NODE_2548_length_724_cov_1.106280
[shovill] Removing low coverage contig (< 2 x): NODE_2546_length_724_cov_1.272142
[shovill] Removing low coverage contig (< 2 x): NODE_2544_length_724_cov_1.380032
[shovill] Removing low coverage contig (< 2 x): NODE_2547_length_724_cov_1.133655
[shovill] Removing low coverage contig (< 2 x): NODE_2549_length_724_cov_0.906602
[shovill] Removing low coverage contig (< 2 x): NODE_2545_length_724_cov_1.362319
[shovill] Removing low coverage contig (< 2 x): NODE_2552_length_723_cov_1.120968
[shovill] Removing low coverage contig (< 2 x): NODE_2551_length_723_cov_1.354839
[shovill] Removing low coverage contig (< 2 x): NODE_2550_length_723_cov_1.509677
[shovill] Removing low coverage contig (< 2 x): NODE_2555_length_722_cov_1.103393
[shovill] Removing low coverage contig (< 2 x): NODE_2553_length_722_cov_1.329564
[shovill] Removing low coverage contig (< 2 x): NODE_2554_length_722_cov_1.295638
[shovill] Removing low coverage contig (< 2 x): NODE_2557_length_721_cov_1.564725
[shovill] Removing low coverage contig (< 2 x): NODE_2556_length_721_cov_1.768608
[shovill] Removing low coverage contig (< 2 x): NODE_2559_length_720_cov_0.983793
[shovill] Removing low coverage contig (< 2 x): NODE_2560_length_720_cov_0.969206
[shovill] Removing low coverage contig (< 2 x): NODE_2558_length_720_cov_1.696921
[shovill] Removing low coverage contig (< 2 x): NODE_2561_length_719_cov_1.220779
[shovill] Removing low coverage contig (< 2 x): NODE_2563_length_718_cov_1.092683
[shovill] Removing low coverage contig (< 2 x): NODE_2564_length_718_cov_1.047154
[shovill] Removing low coverage contig (< 2 x): NODE_2565_length_717_cov_1.578176
[shovill] Removing low coverage contig (< 2 x): NODE_2566_length_717_cov_1.131922
[shovill] Removing low coverage contig (< 2 x): NODE_2569_length_716_cov_0.951060
[shovill] Removing low coverage contig (< 2 x): NODE_2570_length_716_cov_0.814029
[shovill] Removing low coverage contig (< 2 x): NODE_2568_length_716_cov_1.853181
[shovill] Removing low coverage contig (< 2 x): NODE_2571_length_715_cov_1.447712
[shovill] Removing low coverage contig (< 2 x): NODE_2572_length_713_cov_1.529508
[shovill] Removing low coverage contig (< 2 x): NODE_2574_length_713_cov_1.214754
[shovill] Removing low coverage contig (< 2 x): NODE_2573_length_713_cov_1.285246
[shovill] Removing low coverage contig (< 2 x): NODE_2575_length_713_cov_0.834426
[shovill] Removing low coverage contig (< 2 x): NODE_2576_length_712_cov_1.009852
[shovill] Removing low coverage contig (< 2 x): NODE_2577_length_712_cov_0.866995
[shovill] Removing low coverage contig (< 2 x): NODE_2579_length_711_cov_1.587171
[shovill] Removing low coverage contig (< 2 x): NODE_2581_length_711_cov_0.812500
[shovill] Removing low coverage contig (< 2 x): NODE_2578_length_711_cov_1.810855
[shovill] Removing low coverage contig (< 2 x): NODE_2580_length_711_cov_1.228618
[shovill] Removing low coverage contig (< 2 x): NODE_2583_length_710_cov_1.570016
[shovill] Removing low coverage contig (< 2 x): NODE_2586_length_710_cov_1.344316
[shovill] Removing low coverage contig (< 2 x): NODE_2585_length_710_cov_1.398682
[shovill] Removing low coverage contig (< 2 x): NODE_2584_length_710_cov_1.446458
[shovill] Removing low coverage contig (< 2 x): NODE_2582_length_710_cov_1.624382
[shovill] Removing low coverage contig (< 2 x): NODE_2589_length_708_cov_1.623140
[shovill] Removing low coverage contig (< 2 x): NODE_2592_length_708_cov_1.128926
[shovill] Removing low coverage contig (< 2 x): NODE_2588_length_708_cov_1.884298
[shovill] Removing low coverage contig (< 2 x): NODE_2590_length_708_cov_1.380165
[shovill] Removing low coverage contig (< 2 x): NODE_2591_length_708_cov_1.269421
[shovill] Removing low coverage contig (< 2 x): NODE_2593_length_707_cov_1.470199
[shovill] Removing low coverage contig (< 2 x): NODE_2595_length_707_cov_0.899007
[shovill] Removing low coverage contig (< 2 x): NODE_2596_length_707_cov_0.748344
[shovill] Removing low coverage contig (< 2 x): NODE_2594_length_707_cov_1.337748
[shovill] Removing low coverage contig (< 2 x): NODE_2599_length_706_cov_0.852405
[shovill] Removing low coverage contig (< 2 x): NODE_2597_length_706_cov_1.442786
[shovill] Removing low coverage contig (< 2 x): NODE_2598_length_706_cov_1.067993
[shovill] Removing low coverage contig (< 2 x): NODE_2602_length_705_cov_1.368771
[shovill] Removing low coverage contig (< 2 x): NODE_2601_length_705_cov_1.757475
[shovill] Removing low coverage contig (< 2 x): NODE_2607_length_704_cov_0.981697
[shovill] Removing low coverage contig (< 2 x): NODE_2603_length_704_cov_1.693844
[shovill] Removing low coverage contig (< 2 x): NODE_2605_length_704_cov_1.143095
[shovill] Removing low coverage contig (< 2 x): NODE_2606_length_704_cov_1.034942
[shovill] Removing low coverage contig (< 2 x): NODE_2604_length_704_cov_1.630616
[shovill] Removing low coverage contig (< 2 x): NODE_2609_length_703_cov_1.940000
[shovill] Removing low coverage contig (< 2 x): NODE_2611_length_703_cov_1.106667
[shovill] Removing low coverage contig (< 2 x): NODE_2612_length_703_cov_1.101667
[shovill] Removing low coverage contig (< 2 x): NODE_2610_length_703_cov_1.580000
[shovill] Removing low coverage contig (< 2 x): NODE_2613_length_702_cov_1.559265
[shovill] Removing low coverage contig (< 2 x): NODE_2616_length_701_cov_1.399666
[shovill] Removing low coverage contig (< 2 x): NODE_2615_length_701_cov_1.857860
[shovill] Removing low coverage contig (< 2 x): NODE_2618_length_700_cov_1.618090
[shovill] Removing low coverage contig (< 2 x): NODE_2619_length_700_cov_1.366834
[shovill] Removing low coverage contig (< 2 x): NODE_2623_length_699_cov_0.843960
[shovill] Removing low coverage contig (< 2 x): NODE_2621_length_699_cov_1.677852
[shovill] Removing low coverage contig (< 2 x): NODE_2624_length_699_cov_0.828859
[shovill] Removing low coverage contig (< 2 x): NODE_2622_length_699_cov_1.553691
[shovill] Removing low coverage contig (< 2 x): NODE_2626_length_698_cov_1.542857
[shovill] Removing low coverage contig (< 2 x): NODE_2627_length_698_cov_1.326050
[shovill] Removing low coverage contig (< 2 x): NODE_2628_length_698_cov_1.245378
[shovill] Removing low coverage contig (< 2 x): NODE_2625_length_698_cov_1.547899
[shovill] Removing low coverage contig (< 2 x): NODE_2629_length_698_cov_0.860504
[shovill] Removing low coverage contig (< 2 x): NODE_2630_length_697_cov_1.021886
[shovill] Removing low coverage contig (< 2 x): NODE_2636_length_696_cov_1.018550
[shovill] Removing low coverage contig (< 2 x): NODE_2632_length_696_cov_1.639123
[shovill] Removing low coverage contig (< 2 x): NODE_2635_length_696_cov_1.367622
[shovill] Removing low coverage contig (< 2 x): NODE_2634_length_696_cov_1.372681
[shovill] Removing low coverage contig (< 2 x): NODE_2633_length_696_cov_1.497470
[shovill] Removing low coverage contig (< 2 x): NODE_2640_length_695_cov_1.087838
[shovill] Removing low coverage contig (< 2 x): NODE_2639_length_695_cov_1.253378
[shovill] Removing low coverage contig (< 2 x): NODE_2641_length_695_cov_1.005068
[shovill] Removing low coverage contig (< 2 x): NODE_2637_length_695_cov_1.521959
[shovill] Removing low coverage contig (< 2 x): NODE_2638_length_695_cov_1.417230
[shovill] Removing low coverage contig (< 2 x): NODE_2643_length_694_cov_1.294416
[shovill] Removing low coverage contig (< 2 x): NODE_2642_length_694_cov_1.379019
[shovill] Removing low coverage contig (< 2 x): NODE_2646_length_693_cov_0.950847
[shovill] Removing low coverage contig (< 2 x): NODE_2645_length_693_cov_1.040678
[shovill] Removing low coverage contig (< 2 x): NODE_2647_length_693_cov_0.586441
[shovill] Removing low coverage contig (< 2 x): NODE_2644_length_693_cov_1.915254
[shovill] Removing low coverage contig (< 2 x): NODE_2648_length_692_cov_1.855688
[shovill] Removing low coverage contig (< 2 x): NODE_2650_length_691_cov_1.790816
[shovill] Removing low coverage contig (< 2 x): NODE_2651_length_691_cov_1.636054
[shovill] Removing low coverage contig (< 2 x): NODE_2654_length_690_cov_0.868825
[shovill] Removing low coverage contig (< 2 x): NODE_2652_length_690_cov_1.533220
[shovill] Removing low coverage contig (< 2 x): NODE_2653_length_690_cov_1.008518
[shovill] Removing low coverage contig (< 2 x): NODE_2657_length_689_cov_1.187713
[shovill] Removing low coverage contig (< 2 x): NODE_2655_length_689_cov_1.928328
[shovill] Removing low coverage contig (< 2 x): NODE_2656_length_689_cov_1.708191
[shovill] Removing low coverage contig (< 2 x): NODE_2658_length_688_cov_1.302564
[shovill] Removing low coverage contig (< 2 x): NODE_2660_length_688_cov_1.070085
[shovill] Removing low coverage contig (< 2 x): NODE_2661_length_688_cov_0.724786
[shovill] Removing low coverage contig (< 2 x): NODE_2659_length_688_cov_1.181197
[shovill] Removing low coverage contig (< 2 x): NODE_2663_length_687_cov_1.337329
[shovill] Removing low coverage contig (< 2 x): NODE_2662_length_687_cov_1.373288
[shovill] Removing low coverage contig (< 2 x): NODE_2664_length_687_cov_1.244863
[shovill] Removing low coverage contig (< 2 x): NODE_2665_length_687_cov_1.123288
[shovill] Removing low coverage contig (< 2 x): NODE_2670_length_686_cov_1.024014
[shovill] Removing low coverage contig (< 2 x): NODE_2669_length_686_cov_1.063465
[shovill] Removing low coverage contig (< 2 x): NODE_2667_length_686_cov_1.475129
[shovill] Removing low coverage contig (< 2 x): NODE_2671_length_686_cov_0.740995
[shovill] Removing low coverage contig (< 2 x): NODE_2666_length_686_cov_1.740995
[shovill] Removing low coverage contig (< 2 x): NODE_2668_length_686_cov_1.355060
[shovill] Removing low coverage contig (< 2 x): NODE_2672_length_685_cov_1.372852
[shovill] Removing low coverage contig (< 2 x): NODE_2674_length_685_cov_1.025773
[shovill] Removing low coverage contig (< 2 x): NODE_2673_length_685_cov_1.340206
[shovill] Removing low coverage contig (< 2 x): NODE_2677_length_684_cov_1.991394
[shovill] Removing low coverage contig (< 2 x): NODE_2678_length_684_cov_1.098107
[shovill] Removing low coverage contig (< 2 x): NODE_2679_length_684_cov_1.005164
[shovill] Removing low coverage contig (< 2 x): NODE_2682_length_683_cov_1.222414
[shovill] Removing low coverage contig (< 2 x): NODE_2681_length_683_cov_1.746552
[shovill] Removing low coverage contig (< 2 x): NODE_2684_length_682_cov_1.606218
[shovill] Removing low coverage contig (< 2 x): NODE_2685_length_682_cov_1.582038
[shovill] Removing low coverage contig (< 2 x): NODE_2687_length_682_cov_0.924007
[shovill] Removing low coverage contig (< 2 x): NODE_2686_length_682_cov_1.404145
[shovill] Removing low coverage contig (< 2 x): NODE_2693_length_681_cov_0.916955
[shovill] Removing low coverage contig (< 2 x): NODE_2690_length_681_cov_1.332180
[shovill] Removing low coverage contig (< 2 x): NODE_2689_length_681_cov_1.434256
[shovill] Removing low coverage contig (< 2 x): NODE_2688_length_681_cov_1.821799
[shovill] Removing low coverage contig (< 2 x): NODE_2692_length_681_cov_0.968858
[shovill] Removing low coverage contig (< 2 x): NODE_2691_length_681_cov_1.228374
[shovill] Removing low coverage contig (< 2 x): NODE_2694_length_680_cov_1.596187
[shovill] Removing low coverage contig (< 2 x): NODE_2695_length_680_cov_0.913345
[shovill] Removing low coverage contig (< 2 x): NODE_2699_length_679_cov_0.815972
[shovill] Removing low coverage contig (< 2 x): NODE_2698_length_679_cov_0.996528
[shovill] Removing low coverage contig (< 2 x): NODE_2697_length_679_cov_1.847222
[shovill] Removing low coverage contig (< 2 x): NODE_2702_length_678_cov_1.420870
[shovill] Removing low coverage contig (< 2 x): NODE_2701_length_678_cov_1.577391
[shovill] Removing low coverage contig (< 2 x): NODE_2703_length_677_cov_1.416376
[shovill] Removing low coverage contig (< 2 x): NODE_2704_length_677_cov_1.290941
[shovill] Removing low coverage contig (< 2 x): NODE_2705_length_677_cov_0.756098
[shovill] Removing low coverage contig (< 2 x): NODE_2707_length_676_cov_1.368237
[shovill] Removing low coverage contig (< 2 x): NODE_2706_length_676_cov_1.821990
[shovill] Removing low coverage contig (< 2 x): NODE_2708_length_675_cov_1.534965
[shovill] Removing low coverage contig (< 2 x): NODE_2711_length_674_cov_1.005254
[shovill] Removing low coverage contig (< 2 x): NODE_2709_length_674_cov_1.591944
[shovill] Removing low coverage contig (< 2 x): NODE_2712_length_674_cov_0.725044
[shovill] Removing low coverage contig (< 2 x): NODE_2710_length_674_cov_1.287215
[shovill] Removing low coverage contig (< 2 x): NODE_2718_length_673_cov_0.942105
[shovill] Removing low coverage contig (< 2 x): NODE_2719_length_673_cov_0.808772
[shovill] Removing low coverage contig (< 2 x): NODE_2716_length_673_cov_1.078947
[shovill] Removing low coverage contig (< 2 x): NODE_2715_length_673_cov_1.273684
[shovill] Removing low coverage contig (< 2 x): NODE_2717_length_673_cov_1.005263
[shovill] Removing low coverage contig (< 2 x): NODE_2714_length_673_cov_1.442105
[shovill] Removing low coverage contig (< 2 x): NODE_2720_length_672_cov_1.063269
[shovill] Removing low coverage contig (< 2 x): NODE_2722_length_671_cov_1.589789
[shovill] Removing low coverage contig (< 2 x): NODE_2723_length_671_cov_1.433099
[shovill] Removing low coverage contig (< 2 x): NODE_2724_length_671_cov_1.151408
[shovill] Removing low coverage contig (< 2 x): NODE_2726_length_670_cov_0.970018
[shovill] Removing low coverage contig (< 2 x): NODE_2727_length_670_cov_0.777778
[shovill] Removing low coverage contig (< 2 x): NODE_2725_length_670_cov_1.566138
[shovill] Removing low coverage contig (< 2 x): NODE_2729_length_669_cov_0.945230
[shovill] Removing low coverage contig (< 2 x): NODE_2732_length_668_cov_1.178761
[shovill] Removing low coverage contig (< 2 x): NODE_2731_length_668_cov_1.507965
[shovill] Removing low coverage contig (< 2 x): NODE_2730_length_668_cov_1.844248
[shovill] Removing low coverage contig (< 2 x): NODE_2734_length_667_cov_0.971631
[shovill] Removing low coverage contig (< 2 x): NODE_2735_length_666_cov_1.611012
[shovill] Removing low coverage contig (< 2 x): NODE_2741_length_665_cov_0.622776
[shovill] Removing low coverage contig (< 2 x): NODE_2739_length_665_cov_1.407473
[shovill] Removing low coverage contig (< 2 x): NODE_2738_length_665_cov_1.457295
[shovill] Removing low coverage contig (< 2 x): NODE_2740_length_665_cov_1.017794
[shovill] Removing low coverage contig (< 2 x): NODE_2743_length_664_cov_1.331551
[shovill] Removing low coverage contig (< 2 x): NODE_2746_length_664_cov_1.229947
[shovill] Removing low coverage contig (< 2 x): NODE_2742_length_664_cov_1.408200
[shovill] Removing low coverage contig (< 2 x): NODE_2745_length_664_cov_1.267380
[shovill] Removing low coverage contig (< 2 x): NODE_2747_length_664_cov_1.172906
[shovill] Removing low coverage contig (< 2 x): NODE_2744_length_664_cov_1.274510
[shovill] Removing low coverage contig (< 2 x): NODE_2748_length_663_cov_1.350000
[shovill] Removing low coverage contig (< 2 x): NODE_2749_length_663_cov_0.907143
[shovill] Removing low coverage contig (< 2 x): NODE_2750_length_663_cov_0.716071
[shovill] Removing low coverage contig (< 2 x): NODE_2751_length_662_cov_1.474061
[shovill] Removing low coverage contig (< 2 x): NODE_2755_length_662_cov_0.536673
[shovill] Removing low coverage contig (< 2 x): NODE_2754_length_662_cov_0.905188
[shovill] Removing low coverage contig (< 2 x): NODE_2752_length_662_cov_1.237925
[shovill] Removing low coverage contig (< 2 x): NODE_2753_length_662_cov_1.062612
[shovill] Removing low coverage contig (< 2 x): NODE_2758_length_661_cov_1.010753
[shovill] Removing low coverage contig (< 2 x): NODE_2757_length_661_cov_1.046595
[shovill] Removing low coverage contig (< 2 x): NODE_2756_length_661_cov_1.449821
[shovill] Removing low coverage contig (< 2 x): NODE_2761_length_660_cov_1.296230
[shovill] Removing low coverage contig (< 2 x): NODE_2763_length_660_cov_0.962298
[shovill] Removing low coverage contig (< 2 x): NODE_2762_length_660_cov_1.055655
[shovill] Removing low coverage contig (< 2 x): NODE_2764_length_660_cov_0.736086
[shovill] Removing low coverage contig (< 2 x): NODE_2765_length_659_cov_1.429856
[shovill] Removing low coverage contig (< 2 x): NODE_2766_length_659_cov_1.366906
[shovill] Removing low coverage contig (< 2 x): NODE_2767_length_659_cov_1.192446
[shovill] Removing low coverage contig (< 2 x): NODE_2768_length_659_cov_1.000000
[shovill] Removing low coverage contig (< 2 x): NODE_2772_length_658_cov_1.000000
[shovill] Removing low coverage contig (< 2 x): NODE_2773_length_657_cov_1.752708
[shovill] Removing low coverage contig (< 2 x): NODE_2774_length_657_cov_1.084838
[shovill] Removing low coverage contig (< 2 x): NODE_2775_length_657_cov_0.998195
[shovill] Removing low coverage contig (< 2 x): NODE_2778_length_656_cov_1.117541
[shovill] Removing low coverage contig (< 2 x): NODE_2779_length_656_cov_0.799277
[shovill] Removing low coverage contig (< 2 x): NODE_2777_length_656_cov_1.292948
[shovill] Removing low coverage contig (< 2 x): NODE_2782_length_655_cov_1.440217
[shovill] Removing low coverage contig (< 2 x): NODE_2781_length_655_cov_1.668478
[shovill] Removing low coverage contig (< 2 x): NODE_2780_length_655_cov_1.923913
[shovill] Removing low coverage contig (< 2 x): NODE_2784_length_654_cov_1.284936
[shovill] Removing low coverage contig (< 2 x): NODE_2789_length_653_cov_1.420000
[shovill] Removing low coverage contig (< 2 x): NODE_2787_length_653_cov_1.643636
[shovill] Removing low coverage contig (< 2 x): NODE_2788_length_653_cov_1.516364
[shovill] Removing low coverage contig (< 2 x): NODE_2791_length_652_cov_0.925319
[shovill] Removing low coverage contig (< 2 x): NODE_2795_length_652_cov_0.783242
[shovill] Removing low coverage contig (< 2 x): NODE_2790_length_652_cov_1.795993
[shovill] Removing low coverage contig (< 2 x): NODE_2796_length_652_cov_0.679417
[shovill] Removing low coverage contig (< 2 x): NODE_2794_length_652_cov_0.825137
[shovill] Removing low coverage contig (< 2 x): NODE_2793_length_652_cov_0.868852
[shovill] Removing low coverage contig (< 2 x): NODE_2792_length_652_cov_0.894353
[shovill] Removing low coverage contig (< 2 x): NODE_2799_length_651_cov_1.184307
[shovill] Removing low coverage contig (< 2 x): NODE_2802_length_651_cov_1.001825
[shovill] Removing low coverage contig (< 2 x): NODE_2798_length_651_cov_1.733577
[shovill] Removing low coverage contig (< 2 x): NODE_2801_length_651_cov_1.016423
[shovill] Removing low coverage contig (< 2 x): NODE_2800_length_651_cov_1.155109
[shovill] Removing low coverage contig (< 2 x): NODE_2806_length_650_cov_1.177331
[shovill] Removing low coverage contig (< 2 x): NODE_2807_length_650_cov_1.020110
[shovill] Removing low coverage contig (< 2 x): NODE_2804_length_650_cov_1.979890
[shovill] Removing low coverage contig (< 2 x): NODE_2805_length_650_cov_1.557587
[shovill] Removing low coverage contig (< 2 x): NODE_2811_length_648_cov_0.844037
[shovill] Removing low coverage contig (< 2 x): NODE_2809_length_648_cov_1.614679
[shovill] Removing low coverage contig (< 2 x): NODE_2808_length_648_cov_1.614679
[shovill] Removing low coverage contig (< 2 x): NODE_2810_length_648_cov_1.222018
[shovill] Removing low coverage contig (< 2 x): NODE_2813_length_647_cov_1.500000
[shovill] Removing low coverage contig (< 2 x): NODE_2815_length_647_cov_1.062500
[shovill] Removing low coverage contig (< 2 x): NODE_2814_length_647_cov_1.113971
[shovill] Removing low coverage contig (< 2 x): NODE_2818_length_646_cov_1.261510
[shovill] Removing low coverage contig (< 2 x): NODE_2817_length_646_cov_1.416206
[shovill] Removing low coverage contig (< 2 x): NODE_2816_length_646_cov_1.889503
[shovill] Removing low coverage contig (< 2 x): NODE_2821_length_645_cov_1.108856
[shovill] Removing low coverage contig (< 2 x): NODE_2820_length_645_cov_1.621771
[shovill] Removing low coverage contig (< 2 x): NODE_2822_length_644_cov_1.561922
[shovill] Removing low coverage contig (< 2 x): NODE_2823_length_644_cov_1.539741
[shovill] Removing low coverage contig (< 2 x): NODE_2824_length_644_cov_1.340111
[shovill] Removing low coverage contig (< 2 x): NODE_2826_length_643_cov_1.972222
[shovill] Removing low coverage contig (< 2 x): NODE_2828_length_643_cov_1.196296
[shovill] Removing low coverage contig (< 2 x): NODE_2827_length_643_cov_1.783333
[shovill] Removing low coverage contig (< 2 x): NODE_2829_length_642_cov_1.614100
[shovill] Removing low coverage contig (< 2 x): NODE_2830_length_642_cov_1.272727
[shovill] Removing low coverage contig (< 2 x): NODE_2831_length_642_cov_0.897959
[shovill] Removing low coverage contig (< 2 x): NODE_2835_length_641_cov_1.180297
[shovill] Removing low coverage contig (< 2 x): NODE_2834_length_641_cov_1.676580
[shovill] Removing low coverage contig (< 2 x): NODE_2832_length_641_cov_1.988848
[shovill] Removing low coverage contig (< 2 x): NODE_2833_length_641_cov_1.882900
[shovill] Removing low coverage contig (< 2 x): NODE_2836_length_641_cov_0.881041
[shovill] Removing low coverage contig (< 2 x): NODE_2837_length_640_cov_1.106145
[shovill] Removing low coverage contig (< 2 x): NODE_2838_length_640_cov_0.986965
[shovill] Removing low coverage contig (< 2 x): NODE_2839_length_638_cov_1.416822
[shovill] Removing low coverage contig (< 2 x): NODE_2842_length_638_cov_1.257944
[shovill] Removing low coverage contig (< 2 x): NODE_2840_length_638_cov_1.295327
[shovill] Removing low coverage contig (< 2 x): NODE_2841_length_638_cov_1.285981
[shovill] Removing low coverage contig (< 2 x): NODE_2845_length_637_cov_1.099251
[shovill] Removing low coverage contig (< 2 x): NODE_2844_length_637_cov_1.337079
[shovill] Removing low coverage contig (< 2 x): NODE_2843_length_637_cov_1.822097
[shovill] Removing low coverage contig (< 2 x): NODE_2850_length_636_cov_0.844278
[shovill] Removing low coverage contig (< 2 x): NODE_2846_length_636_cov_1.829268
[shovill] Removing low coverage contig (< 2 x): NODE_2848_length_636_cov_1.118199
[shovill] Removing low coverage contig (< 2 x): NODE_2849_length_636_cov_1.095685
[shovill] Removing low coverage contig (< 2 x): NODE_2847_length_636_cov_1.632270
[shovill] Removing low coverage contig (< 2 x): NODE_2851_length_635_cov_1.849624
[shovill] Removing low coverage contig (< 2 x): NODE_2852_length_635_cov_1.063910
[shovill] Removing low coverage contig (< 2 x): NODE_2853_length_634_cov_1.768362
[shovill] Removing low coverage contig (< 2 x): NODE_2856_length_633_cov_1.324528
[shovill] Removing low coverage contig (< 2 x): NODE_2855_length_633_cov_1.467925
[shovill] Removing low coverage contig (< 2 x): NODE_2854_length_633_cov_1.471698
[shovill] Removing low coverage contig (< 2 x): NODE_2857_length_633_cov_0.850943
[shovill] Removing low coverage contig (< 2 x): NODE_2858_length_632_cov_1.608696
[shovill] Removing low coverage contig (< 2 x): NODE_2861_length_632_cov_1.098299
[shovill] Removing low coverage contig (< 2 x): NODE_2862_length_632_cov_0.981096
[shovill] Removing low coverage contig (< 2 x): NODE_2860_length_632_cov_1.247637
[shovill] Removing low coverage contig (< 2 x): NODE_2859_length_632_cov_1.281664
[shovill] Removing low coverage contig (< 2 x): NODE_2863_length_632_cov_0.621928
[shovill] Removing low coverage contig (< 2 x): NODE_2865_length_631_cov_1.032197
[shovill] Removing low coverage contig (< 2 x): NODE_2866_length_631_cov_1.009470
[shovill] Removing low coverage contig (< 2 x): NODE_2867_length_631_cov_0.723485
[shovill] Removing low coverage contig (< 2 x): NODE_2864_length_631_cov_1.138258
[shovill] Removing low coverage contig (< 2 x): NODE_2871_length_630_cov_0.977230
[shovill] Removing low coverage contig (< 2 x): NODE_2870_length_630_cov_1.284630
[shovill] Removing low coverage contig (< 2 x): NODE_2869_length_630_cov_1.330171
[shovill] Removing low coverage contig (< 2 x): NODE_2868_length_630_cov_1.935484
[shovill] Removing low coverage contig (< 2 x): NODE_2872_length_630_cov_0.870968
[shovill] Removing low coverage contig (< 2 x): NODE_2873_length_629_cov_1.100760
[shovill] Removing low coverage contig (< 2 x): NODE_2874_length_629_cov_1.089354
[shovill] Removing low coverage contig (< 2 x): NODE_2876_length_628_cov_1.512381
[shovill] Removing low coverage contig (< 2 x): NODE_2877_length_628_cov_1.108571
[shovill] Removing low coverage contig (< 2 x): NODE_2878_length_628_cov_0.961905
[shovill] Removing low coverage contig (< 2 x): NODE_2880_length_627_cov_1.076336
[shovill] Removing low coverage contig (< 2 x): NODE_2879_length_627_cov_1.450382
[shovill] Removing low coverage contig (< 2 x): NODE_2881_length_626_cov_0.718929
[shovill] Removing low coverage contig (< 2 x): NODE_2883_length_625_cov_1.356322
[shovill] Removing low coverage contig (< 2 x): NODE_2882_length_625_cov_1.503831
[shovill] Removing low coverage contig (< 2 x): NODE_2884_length_624_cov_1.998081
[shovill] Removing low coverage contig (< 2 x): NODE_2887_length_623_cov_1.438462
[shovill] Removing low coverage contig (< 2 x): NODE_2886_length_623_cov_1.861538
[shovill] Removing low coverage contig (< 2 x): NODE_2889_length_623_cov_1.323077
[shovill] Removing low coverage contig (< 2 x): NODE_2888_length_623_cov_1.367308
[shovill] Removing low coverage contig (< 2 x): NODE_2891_length_622_cov_1.687861
[shovill] Removing low coverage contig (< 2 x): NODE_2894_length_622_cov_1.312139
[shovill] Removing low coverage contig (< 2 x): NODE_2895_length_622_cov_0.990366
[shovill] Removing low coverage contig (< 2 x): NODE_2890_length_622_cov_1.830443
[shovill] Removing low coverage contig (< 2 x): NODE_2893_length_622_cov_1.396917
[shovill] Removing low coverage contig (< 2 x): NODE_2892_length_622_cov_1.514451
[shovill] Removing low coverage contig (< 2 x): NODE_2897_length_621_cov_1.982625
[shovill] Removing low coverage contig (< 2 x): NODE_2899_length_621_cov_1.206564
[shovill] Removing low coverage contig (< 2 x): NODE_2900_length_621_cov_1.044402
[shovill] Removing low coverage contig (< 2 x): NODE_2898_length_621_cov_1.739382
[shovill] Removing low coverage contig (< 2 x): NODE_2906_length_620_cov_0.911025
[shovill] Removing low coverage contig (< 2 x): NODE_2901_length_620_cov_1.961315
[shovill] Removing low coverage contig (< 2 x): NODE_2905_length_620_cov_0.957447
[shovill] Removing low coverage contig (< 2 x): NODE_2902_length_620_cov_1.818182
[shovill] Removing low coverage contig (< 2 x): NODE_2904_length_620_cov_1.292070
[shovill] Removing low coverage contig (< 2 x): NODE_2903_length_620_cov_1.729207
[shovill] Removing low coverage contig (< 2 x): NODE_2909_length_619_cov_1.124031
[shovill] Removing low coverage contig (< 2 x): NODE_2908_length_619_cov_1.406977
[shovill] Removing low coverage contig (< 2 x): NODE_2915_length_618_cov_0.957282
[shovill] Removing low coverage contig (< 2 x): NODE_2911_length_618_cov_1.629126
[shovill] Removing low coverage contig (< 2 x): NODE_2912_length_618_cov_1.493204
[shovill] Removing low coverage contig (< 2 x): NODE_2916_length_618_cov_0.753398
[shovill] Removing low coverage contig (< 2 x): NODE_2913_length_618_cov_1.454369
[shovill] Removing low coverage contig (< 2 x): NODE_2914_length_618_cov_1.000000
[shovill] Removing low coverage contig (< 2 x): NODE_2920_length_617_cov_0.990272
[shovill] Removing low coverage contig (< 2 x): NODE_2921_length_617_cov_0.859922
[shovill] Removing low coverage contig (< 2 x): NODE_2917_length_617_cov_1.404669
[shovill] Removing low coverage contig (< 2 x): NODE_2918_length_617_cov_1.324903
[shovill] Removing low coverage contig (< 2 x): NODE_2919_length_617_cov_1.200389
[shovill] Removing low coverage contig (< 2 x): NODE_2922_length_616_cov_1.179337
[shovill] Removing low coverage contig (< 2 x): NODE_2924_length_615_cov_1.519531
[shovill] Removing low coverage contig (< 2 x): NODE_2925_length_615_cov_0.945312
[shovill] Removing low coverage contig (< 2 x): NODE_2923_length_615_cov_1.673828
[shovill] Removing low coverage contig (< 2 x): NODE_2928_length_614_cov_1.199609
[shovill] Removing low coverage contig (< 2 x): NODE_2926_length_614_cov_1.479452
[shovill] Removing low coverage contig (< 2 x): NODE_2929_length_614_cov_0.949119
[shovill] Removing low coverage contig (< 2 x): NODE_2927_length_614_cov_1.401174
[shovill] Removing low coverage contig (< 2 x): NODE_2931_length_613_cov_1.327451
[shovill] Removing low coverage contig (< 2 x): NODE_2933_length_613_cov_1.139216
[shovill] Removing low coverage contig (< 2 x): NODE_2932_length_613_cov_1.154902
[shovill] Removing low coverage contig (< 2 x): NODE_2930_length_613_cov_1.778431
[shovill] Removing low coverage contig (< 2 x): NODE_2934_length_613_cov_1.115686
[shovill] Removing low coverage contig (< 2 x): NODE_2937_length_612_cov_1.060904
[shovill] Removing low coverage contig (< 2 x): NODE_2938_length_612_cov_0.968566
[shovill] Removing low coverage contig (< 2 x): NODE_2936_length_612_cov_1.785855
[shovill] Removing low coverage contig (< 2 x): NODE_2940_length_611_cov_1.444882
[shovill] Removing low coverage contig (< 2 x): NODE_2939_length_611_cov_1.606299
[shovill] Removing low coverage contig (< 2 x): NODE_2941_length_611_cov_0.937008
[shovill] Removing low coverage contig (< 2 x): NODE_2946_length_610_cov_1.017751
[shovill] Removing low coverage contig (< 2 x): NODE_2949_length_610_cov_0.832347
[shovill] Removing low coverage contig (< 2 x): NODE_2945_length_610_cov_1.284024
[shovill] Removing low coverage contig (< 2 x): NODE_2943_length_610_cov_1.639053
[shovill] Removing low coverage contig (< 2 x): NODE_2947_length_610_cov_0.992110
[shovill] Removing low coverage contig (< 2 x): NODE_2948_length_610_cov_0.832347
[shovill] Removing low coverage contig (< 2 x): NODE_2944_length_610_cov_1.396450
[shovill] Removing low coverage contig (< 2 x): NODE_2953_length_609_cov_1.428854
[shovill] Removing low coverage contig (< 2 x): NODE_2954_length_609_cov_0.859684
[shovill] Removing low coverage contig (< 2 x): NODE_2952_length_609_cov_1.891304
[shovill] Removing low coverage contig (< 2 x): NODE_2958_length_608_cov_1.037624
[shovill] Removing low coverage contig (< 2 x): NODE_2957_length_608_cov_1.063366
[shovill] Removing low coverage contig (< 2 x): NODE_2955_length_608_cov_1.362376
[shovill] Removing low coverage contig (< 2 x): NODE_2959_length_608_cov_0.944554
[shovill] Removing low coverage contig (< 2 x): NODE_2956_length_608_cov_1.172277
[shovill] Removing low coverage contig (< 2 x): NODE_2960_length_608_cov_0.661386
[shovill] Removing low coverage contig (< 2 x): NODE_2965_length_607_cov_1.055556
[shovill] Removing low coverage contig (< 2 x): NODE_2966_length_607_cov_0.829365
[shovill] Removing low coverage contig (< 2 x): NODE_2964_length_607_cov_1.168651
[shovill] Removing low coverage contig (< 2 x): NODE_2962_length_607_cov_1.240079
[shovill] Removing low coverage contig (< 2 x): NODE_2963_length_607_cov_1.196429
[shovill] Removing low coverage contig (< 2 x): NODE_2961_length_607_cov_1.815476
[shovill] Removing low coverage contig (< 2 x): NODE_2970_length_606_cov_1.045726
[shovill] Removing low coverage contig (< 2 x): NODE_2969_length_606_cov_1.067594
[shovill] Removing low coverage contig (< 2 x): NODE_2967_length_606_cov_1.679920
[shovill] Removing low coverage contig (< 2 x): NODE_2968_length_606_cov_1.206759
[shovill] Removing low coverage contig (< 2 x): NODE_2971_length_606_cov_0.996024
[shovill] Removing low coverage contig (< 2 x): NODE_2973_length_605_cov_0.852590
[shovill] Removing low coverage contig (< 2 x): NODE_2972_length_605_cov_1.507968
[shovill] Removing low coverage contig (< 2 x): NODE_2974_length_604_cov_1.025948
[shovill] Removing low coverage contig (< 2 x): NODE_2975_length_604_cov_1.021956
[shovill] Removing low coverage contig (< 2 x): NODE_2976_length_603_cov_1.806000
[shovill] Removing low coverage contig (< 2 x): NODE_2977_length_603_cov_1.270000
[shovill] Removing low coverage contig (< 2 x): NODE_2981_length_602_cov_1.164329
[shovill] Removing low coverage contig (< 2 x): NODE_2980_length_602_cov_1.278557
[shovill] Removing low coverage contig (< 2 x): NODE_2979_length_602_cov_1.613226
[shovill] Removing low coverage contig (< 2 x): NODE_2982_length_602_cov_0.887776
[shovill] Removing low coverage contig (< 2 x): NODE_2983_length_601_cov_1.251004
[shovill] Removing low coverage contig (< 2 x): NODE_2984_length_601_cov_1.032129
[shovill] Removing low coverage contig (< 2 x): NODE_2985_length_600_cov_1.814889
[shovill] Removing low coverage contig (< 2 x): NODE_2987_length_600_cov_1.177062
[shovill] Removing low coverage contig (< 2 x): NODE_2986_length_600_cov_1.235412
[shovill] Removing low coverage contig (< 2 x): NODE_2989_length_599_cov_1.346774
[shovill] Removing low coverage contig (< 2 x): NODE_2990_length_599_cov_1.185484
[shovill] Removing low coverage contig (< 2 x): NODE_2988_length_599_cov_1.526210
[shovill] Removing low coverage contig (< 2 x): NODE_2992_length_598_cov_1.109091
[shovill] Removing low coverage contig (< 2 x): NODE_2994_length_598_cov_1.010101
[shovill] Removing low coverage contig (< 2 x): NODE_2993_length_598_cov_1.105051
[shovill] Removing low coverage contig (< 2 x): NODE_2996_length_597_cov_1.722672
[shovill] Removing low coverage contig (< 2 x): NODE_2999_length_597_cov_1.008097
[shovill] Removing low coverage contig (< 2 x): NODE_2998_length_597_cov_1.050607
[shovill] Removing low coverage contig (< 2 x): NODE_2995_length_597_cov_1.742915
[shovill] Removing low coverage contig (< 2 x): NODE_2997_length_597_cov_1.224696
[shovill] Removing low coverage contig (< 2 x): NODE_3003_length_596_cov_1.545639
[shovill] Removing low coverage contig (< 2 x): NODE_3005_length_596_cov_0.845842
[shovill] Removing low coverage contig (< 2 x): NODE_3004_length_596_cov_1.227181
[shovill] Removing low coverage contig (< 2 x): NODE_3002_length_596_cov_1.578093
[shovill] Removing low coverage contig (< 2 x): NODE_3001_length_596_cov_1.981744
[shovill] Removing low coverage contig (< 2 x): NODE_3006_length_595_cov_1.841463
[shovill] Removing low coverage contig (< 2 x): NODE_3009_length_595_cov_1.453252
[shovill] Removing low coverage contig (< 2 x): NODE_3008_length_595_cov_1.463415
[shovill] Removing low coverage contig (< 2 x): NODE_3007_length_595_cov_1.721545
[shovill] Removing low coverage contig (< 2 x): NODE_3011_length_595_cov_0.932927
[shovill] Removing low coverage contig (< 2 x): NODE_3010_length_595_cov_1.156504
[shovill] Removing low coverage contig (< 2 x): NODE_3013_length_594_cov_1.150713
[shovill] Removing low coverage contig (< 2 x): NODE_3012_length_594_cov_1.930754
[shovill] Removing low coverage contig (< 2 x): NODE_3015_length_594_cov_0.716904
[shovill] Removing low coverage contig (< 2 x): NODE_3014_length_594_cov_0.820774
[shovill] Removing low coverage contig (< 2 x): NODE_3022_length_593_cov_1.000000
[shovill] Removing low coverage contig (< 2 x): NODE_3019_length_593_cov_1.120408
[shovill] Removing low coverage contig (< 2 x): NODE_3018_length_593_cov_1.132653
[shovill] Removing low coverage contig (< 2 x): NODE_3021_length_593_cov_1.010204
[shovill] Removing low coverage contig (< 2 x): NODE_3016_length_593_cov_1.793878
[shovill] Removing low coverage contig (< 2 x): NODE_3017_length_593_cov_1.669388
[shovill] Removing low coverage contig (< 2 x): NODE_3020_length_593_cov_1.036735
[shovill] Removing low coverage contig (< 2 x): NODE_3026_length_592_cov_0.840491
[shovill] Removing low coverage contig (< 2 x): NODE_3027_length_592_cov_0.760736
[shovill] Removing low coverage contig (< 2 x): NODE_3024_length_592_cov_0.991820
[shovill] Removing low coverage contig (< 2 x): NODE_3025_length_592_cov_0.987730
[shovill] Removing low coverage contig (< 2 x): NODE_3023_length_592_cov_1.173824
[shovill] Removing low coverage contig (< 2 x): NODE_3029_length_591_cov_1.098361
[shovill] Removing low coverage contig (< 2 x): NODE_3030_length_591_cov_0.989754
[shovill] Removing low coverage contig (< 2 x): NODE_3028_length_591_cov_1.465164
[shovill] Removing low coverage contig (< 2 x): NODE_3033_length_590_cov_1.386037
[shovill] Removing low coverage contig (< 2 x): NODE_3035_length_590_cov_0.767967
[shovill] Removing low coverage contig (< 2 x): NODE_3034_length_590_cov_1.032854
[shovill] Removing low coverage contig (< 2 x): NODE_3032_length_590_cov_1.806982
[shovill] Removing low coverage contig (< 2 x): NODE_3031_length_590_cov_1.981520
[shovill] Removing low coverage contig (< 2 x): NODE_3039_length_589_cov_1.625514
[shovill] Removing low coverage contig (< 2 x): NODE_3040_length_589_cov_0.806584
[shovill] Removing low coverage contig (< 2 x): NODE_3038_length_589_cov_1.886831
[shovill] Removing low coverage contig (< 2 x): NODE_3043_length_588_cov_0.991753
[shovill] Removing low coverage contig (< 2 x): NODE_3041_length_588_cov_1.837113
[shovill] Removing low coverage contig (< 2 x): NODE_3042_length_588_cov_1.647423
[shovill] Removing low coverage contig (< 2 x): NODE_3049_length_587_cov_1.101240
[shovill] Removing low coverage contig (< 2 x): NODE_3046_length_587_cov_1.783058
[shovill] Removing low coverage contig (< 2 x): NODE_3048_length_587_cov_1.260331
[shovill] Removing low coverage contig (< 2 x): NODE_3047_length_587_cov_1.774793
[shovill] Removing low coverage contig (< 2 x): NODE_3050_length_587_cov_1.018595
[shovill] Removing low coverage contig (< 2 x): NODE_3055_length_586_cov_1.028986
[shovill] Removing low coverage contig (< 2 x): NODE_3052_length_586_cov_1.693582
[shovill] Removing low coverage contig (< 2 x): NODE_3053_length_586_cov_1.459627
[shovill] Removing low coverage contig (< 2 x): NODE_3051_length_586_cov_1.766046
[shovill] Removing low coverage contig (< 2 x): NODE_3054_length_586_cov_1.200828
[shovill] Removing low coverage contig (< 2 x): NODE_3064_length_585_cov_0.784232
[shovill] Removing low coverage contig (< 2 x): NODE_3058_length_585_cov_1.699170
[shovill] Removing low coverage contig (< 2 x): NODE_3060_length_585_cov_1.543568
[shovill] Removing low coverage contig (< 2 x): NODE_3057_length_585_cov_1.721992
[shovill] Removing low coverage contig (< 2 x): NODE_3061_length_585_cov_1.311203
[shovill] Removing low coverage contig (< 2 x): NODE_3059_length_585_cov_1.663900
[shovill] Removing low coverage contig (< 2 x): NODE_3065_length_585_cov_0.657676
[shovill] Removing low coverage contig (< 2 x): NODE_3062_length_585_cov_1.286307
[shovill] Removing low coverage contig (< 2 x): NODE_3063_length_585_cov_1.170124
[shovill] Removing low coverage contig (< 2 x): NODE_3071_length_584_cov_0.912682
[shovill] Removing low coverage contig (< 2 x): NODE_3068_length_584_cov_1.515593
[shovill] Removing low coverage contig (< 2 x): NODE_3070_length_584_cov_0.929314
[shovill] Removing low coverage contig (< 2 x): NODE_3069_length_584_cov_1.079002
[shovill] Removing low coverage contig (< 2 x): NODE_3072_length_584_cov_0.833680
[shovill] Removing low coverage contig (< 2 x): NODE_3067_length_584_cov_1.644491
[shovill] Removing low coverage contig (< 2 x): NODE_3075_length_583_cov_1.083333
[shovill] Removing low coverage contig (< 2 x): NODE_3074_length_583_cov_1.091667
[shovill] Removing low coverage contig (< 2 x): NODE_3076_length_583_cov_0.985417
[shovill] Removing low coverage contig (< 2 x): NODE_3077_length_583_cov_0.872917
[shovill] Removing low coverage contig (< 2 x): NODE_3073_length_583_cov_1.375000
[shovill] Removing low coverage contig (< 2 x): NODE_3083_length_582_cov_0.972860
[shovill] Removing low coverage contig (< 2 x): NODE_3078_length_582_cov_1.728601
[shovill] Removing low coverage contig (< 2 x): NODE_3084_length_582_cov_0.881002
[shovill] Removing low coverage contig (< 2 x): NODE_3081_length_582_cov_1.346555
[shovill] Removing low coverage contig (< 2 x): NODE_3085_length_582_cov_0.736952
[shovill] Removing low coverage contig (< 2 x): NODE_3082_length_582_cov_1.116910
[shovill] Removing low coverage contig (< 2 x): NODE_3080_length_582_cov_1.398747
[shovill] Removing low coverage contig (< 2 x): NODE_3079_length_582_cov_1.670146
[shovill] Removing low coverage contig (< 2 x): NODE_3088_length_581_cov_1.119247
[shovill] Removing low coverage contig (< 2 x): NODE_3091_length_581_cov_0.845188
[shovill] Removing low coverage contig (< 2 x): NODE_3089_length_581_cov_1.000000
[shovill] Removing low coverage contig (< 2 x): NODE_3090_length_581_cov_0.981172
[shovill] Removing low coverage contig (< 2 x): NODE_3087_length_581_cov_1.186192
[shovill] Removing low coverage contig (< 2 x): NODE_3086_length_581_cov_1.288703
[shovill] Removing low coverage contig (< 2 x): NODE_3092_length_581_cov_0.841004
[shovill] Removing low coverage contig (< 2 x): NODE_3097_length_580_cov_0.993711
[shovill] Removing low coverage contig (< 2 x): NODE_3096_length_580_cov_1.327044
[shovill] Removing low coverage contig (< 2 x): NODE_3095_length_580_cov_1.551363
[shovill] Removing low coverage contig (< 2 x): NODE_3094_length_580_cov_1.555556
[shovill] Removing low coverage contig (< 2 x): NODE_3099_length_579_cov_1.838235
[shovill] Removing low coverage contig (< 2 x): NODE_3100_length_579_cov_1.462185
[shovill] Removing low coverage contig (< 2 x): NODE_3101_length_579_cov_1.195378
[shovill] Removing low coverage contig (< 2 x): NODE_3106_length_578_cov_1.296842
[shovill] Removing low coverage contig (< 2 x): NODE_3104_length_578_cov_1.934737
[shovill] Removing low coverage contig (< 2 x): NODE_3105_length_578_cov_1.808421
[shovill] Removing low coverage contig (< 2 x): NODE_3112_length_577_cov_1.052743
[shovill] Removing low coverage contig (< 2 x): NODE_3108_length_577_cov_1.704641
[shovill] Removing low coverage contig (< 2 x): NODE_3111_length_577_cov_1.223629
[shovill] Removing low coverage contig (< 2 x): NODE_3109_length_577_cov_1.702532
[shovill] Removing low coverage contig (< 2 x): NODE_3110_length_577_cov_1.320675
[shovill] Removing low coverage contig (< 2 x): NODE_3115_length_576_cov_1.257928
[shovill] Removing low coverage contig (< 2 x): NODE_3117_length_576_cov_0.822410
[shovill] Removing low coverage contig (< 2 x): NODE_3113_length_576_cov_1.414376
[shovill] Removing low coverage contig (< 2 x): NODE_3116_length_576_cov_1.196617
[shovill] Removing low coverage contig (< 2 x): NODE_3114_length_576_cov_1.380550
[shovill] Removing low coverage contig (< 2 x): NODE_3122_length_575_cov_1.254237
[shovill] Removing low coverage contig (< 2 x): NODE_3121_length_575_cov_1.625000
[shovill] Removing low coverage contig (< 2 x): NODE_3120_length_575_cov_1.735169
[shovill] Removing low coverage contig (< 2 x): NODE_3119_length_575_cov_1.830508
[shovill] Removing low coverage contig (< 2 x): NODE_3124_length_574_cov_1.611465
[shovill] Removing low coverage contig (< 2 x): NODE_3126_length_574_cov_1.305732
[shovill] Removing low coverage contig (< 2 x): NODE_3123_length_574_cov_1.732484
[shovill] Removing low coverage contig (< 2 x): NODE_3125_length_574_cov_1.418259
[shovill] Removing low coverage contig (< 2 x): NODE_3128_length_574_cov_0.938429
[shovill] Removing low coverage contig (< 2 x): NODE_3127_length_574_cov_1.050955
[shovill] Removing low coverage contig (< 2 x): NODE_3130_length_573_cov_1.372340
[shovill] Removing low coverage contig (< 2 x): NODE_3131_length_573_cov_1.338298
[shovill] Removing low coverage contig (< 2 x): NODE_3129_length_573_cov_1.676596
[shovill] Removing low coverage contig (< 2 x): NODE_3132_length_573_cov_0.972340
[shovill] Removing low coverage contig (< 2 x): NODE_3133_length_573_cov_0.768085
[shovill] Removing low coverage contig (< 2 x): NODE_3138_length_572_cov_0.831557
[shovill] Removing low coverage contig (< 2 x): NODE_3137_length_572_cov_0.848614
[shovill] Removing low coverage contig (< 2 x): NODE_3136_length_572_cov_1.441365
[shovill] Removing low coverage contig (< 2 x): NODE_3140_length_571_cov_1.322650
[shovill] Removing low coverage contig (< 2 x): NODE_3139_length_571_cov_1.495726
[shovill] Removing low coverage contig (< 2 x): NODE_3142_length_571_cov_1.179487
[shovill] Removing low coverage contig (< 2 x): NODE_3143_length_571_cov_0.950855
[shovill] Removing low coverage contig (< 2 x): NODE_3141_length_571_cov_1.301282
[shovill] Removing low coverage contig (< 2 x): NODE_3146_length_570_cov_1.642398
[shovill] Removing low coverage contig (< 2 x): NODE_3148_length_570_cov_0.982869
[shovill] Removing low coverage contig (< 2 x): NODE_3145_length_570_cov_1.661670
[shovill] Removing low coverage contig (< 2 x): NODE_3147_length_570_cov_1.111349
[shovill] Removing low coverage contig (< 2 x): NODE_3149_length_570_cov_0.614561
[shovill] Removing low coverage contig (< 2 x): NODE_3152_length_569_cov_0.748927
[shovill] Removing low coverage contig (< 2 x): NODE_3151_length_569_cov_1.293991
[shovill] Removing low coverage contig (< 2 x): NODE_3158_length_568_cov_0.883871
[shovill] Removing low coverage contig (< 2 x): NODE_3156_length_568_cov_1.380645
[shovill] Removing low coverage contig (< 2 x): NODE_3157_length_568_cov_0.987097
[shovill] Removing low coverage contig (< 2 x): NODE_3155_length_568_cov_1.460215
[shovill] Removing low coverage contig (< 2 x): NODE_3161_length_567_cov_0.898707
[shovill] Removing low coverage contig (< 2 x): NODE_3160_length_567_cov_1.340517
[shovill] Removing low coverage contig (< 2 x): NODE_3164_length_566_cov_1.153348
[shovill] Removing low coverage contig (< 2 x): NODE_3163_length_566_cov_1.561555
[shovill] Removing low coverage contig (< 2 x): NODE_3168_length_565_cov_0.917749
[shovill] Removing low coverage contig (< 2 x): NODE_3169_length_565_cov_0.683983
[shovill] Removing low coverage contig (< 2 x): NODE_3167_length_565_cov_1.787879
[shovill] Removing low coverage contig (< 2 x): NODE_3166_length_565_cov_1.913420
[shovill] Removing low coverage contig (< 2 x): NODE_3175_length_564_cov_0.765727
[shovill] Removing low coverage contig (< 2 x): NODE_3170_length_564_cov_1.544469
[shovill] Removing low coverage contig (< 2 x): NODE_3173_length_564_cov_0.986985
[shovill] Removing low coverage contig (< 2 x): NODE_3171_length_564_cov_1.290672
[shovill] Removing low coverage contig (< 2 x): NODE_3172_length_564_cov_1.249458
[shovill] Removing low coverage contig (< 2 x): NODE_3174_length_564_cov_0.815618
[shovill] Removing low coverage contig (< 2 x): NODE_3178_length_563_cov_1.278261
[shovill] Removing low coverage contig (< 2 x): NODE_3179_length_563_cov_0.782609
[shovill] Removing low coverage contig (< 2 x): NODE_3176_length_563_cov_1.665217
[shovill] Removing low coverage contig (< 2 x): NODE_3180_length_563_cov_0.689130
[shovill] Removing low coverage contig (< 2 x): NODE_3177_length_563_cov_1.602174
[shovill] Removing low coverage contig (< 2 x): NODE_3187_length_562_cov_1.128540
[shovill] Removing low coverage contig (< 2 x): NODE_3184_length_562_cov_1.416122
[shovill] Removing low coverage contig (< 2 x): NODE_3183_length_562_cov_1.450980
[shovill] Removing low coverage contig (< 2 x): NODE_3186_length_562_cov_1.289760
[shovill] Removing low coverage contig (< 2 x): NODE_3185_length_562_cov_1.296296
[shovill] Removing low coverage contig (< 2 x): NODE_3182_length_562_cov_1.618736
[shovill] Removing low coverage contig (< 2 x): NODE_3189_length_561_cov_1.504367
[shovill] Removing low coverage contig (< 2 x): NODE_3192_length_561_cov_1.106987
[shovill] Removing low coverage contig (< 2 x): NODE_3188_length_561_cov_1.965066
[shovill] Removing low coverage contig (< 2 x): NODE_3190_length_561_cov_1.451965
[shovill] Removing low coverage contig (< 2 x): NODE_3191_length_561_cov_1.353712
[shovill] Removing low coverage contig (< 2 x): NODE_3193_length_561_cov_1.045852
[shovill] Removing low coverage contig (< 2 x): NODE_3196_length_560_cov_0.586433
[shovill] Removing low coverage contig (< 2 x): NODE_3194_length_560_cov_1.967177
[shovill] Removing low coverage contig (< 2 x): NODE_3195_length_560_cov_1.641138
[shovill] Removing low coverage contig (< 2 x): NODE_3198_length_559_cov_1.151316
[shovill] Removing low coverage contig (< 2 x): NODE_3197_length_559_cov_1.372807
[shovill] Removing low coverage contig (< 2 x): NODE_3199_length_559_cov_1.070175
[shovill] Removing low coverage contig (< 2 x): NODE_3200_length_559_cov_1.037281
[shovill] Removing low coverage contig (< 2 x): NODE_3204_length_558_cov_1.347253
[shovill] Removing low coverage contig (< 2 x): NODE_3203_length_558_cov_1.606593
[shovill] Removing low coverage contig (< 2 x): NODE_3206_length_558_cov_1.028571
[shovill] Removing low coverage contig (< 2 x): NODE_3205_length_558_cov_1.228571
[shovill] Removing low coverage contig (< 2 x): NODE_3202_length_558_cov_1.984615
[shovill] Removing low coverage contig (< 2 x): NODE_3209_length_557_cov_1.017621
[shovill] Removing low coverage contig (< 2 x): NODE_3208_length_557_cov_1.226872
[shovill] Removing low coverage contig (< 2 x): NODE_3213_length_556_cov_1.701987
[shovill] Removing low coverage contig (< 2 x): NODE_3218_length_556_cov_0.887417
[shovill] Removing low coverage contig (< 2 x): NODE_3212_length_556_cov_1.880795
[shovill] Removing low coverage contig (< 2 x): NODE_3211_length_556_cov_1.969095
[shovill] Removing low coverage contig (< 2 x): NODE_3215_length_556_cov_1.375276
[shovill] Removing low coverage contig (< 2 x): NODE_3216_length_556_cov_1.004415
[shovill] Removing low coverage contig (< 2 x): NODE_3217_length_556_cov_0.953642
[shovill] Removing low coverage contig (< 2 x): NODE_3214_length_556_cov_1.390728
[shovill] Removing low coverage contig (< 2 x): NODE_3226_length_555_cov_1.261062
[shovill] Removing low coverage contig (< 2 x): NODE_3221_length_555_cov_1.884956
[shovill] Removing low coverage contig (< 2 x): NODE_3227_length_555_cov_0.977876
[shovill] Removing low coverage contig (< 2 x): NODE_3222_length_555_cov_1.772124
[shovill] Removing low coverage contig (< 2 x): NODE_3225_length_555_cov_1.482301
[shovill] Removing low coverage contig (< 2 x): NODE_3228_length_555_cov_0.946903
[shovill] Removing low coverage contig (< 2 x): NODE_3224_length_555_cov_1.497788
[shovill] Removing low coverage contig (< 2 x): NODE_3229_length_555_cov_0.778761
[shovill] Removing low coverage contig (< 2 x): NODE_3223_length_555_cov_1.595133
[shovill] Removing low coverage contig (< 2 x): NODE_3233_length_554_cov_0.855876
[shovill] Removing low coverage contig (< 2 x): NODE_3231_length_554_cov_1.470067
[shovill] Removing low coverage contig (< 2 x): NODE_3232_length_554_cov_1.113082
[shovill] Removing low coverage contig (< 2 x): NODE_3230_length_554_cov_1.647450
[shovill] Removing low coverage contig (< 2 x): NODE_3240_length_553_cov_1.117778
[shovill] Removing low coverage contig (< 2 x): NODE_3242_length_553_cov_0.955556
[shovill] Removing low coverage contig (< 2 x): NODE_3234_length_553_cov_1.882222
[shovill] Removing low coverage contig (< 2 x): NODE_3236_length_553_cov_1.580000
[shovill] Removing low coverage contig (< 2 x): NODE_3237_length_553_cov_1.546667
[shovill] Removing low coverage contig (< 2 x): NODE_3239_length_553_cov_1.162222
[shovill] Removing low coverage contig (< 2 x): NODE_3241_length_553_cov_1.108889
[shovill] Removing low coverage contig (< 2 x): NODE_3238_length_553_cov_1.291111
[shovill] Removing low coverage contig (< 2 x): NODE_3235_length_553_cov_1.637778
[shovill] Removing low coverage contig (< 2 x): NODE_3246_length_552_cov_1.449889
[shovill] Removing low coverage contig (< 2 x): NODE_3244_length_552_cov_1.567929
[shovill] Removing low coverage contig (< 2 x): NODE_3249_length_552_cov_0.835189
[shovill] Removing low coverage contig (< 2 x): NODE_3245_length_552_cov_1.543430
[shovill] Removing low coverage contig (< 2 x): NODE_3247_length_552_cov_1.220490
[shovill] Removing low coverage contig (< 2 x): NODE_3248_length_552_cov_1.175947
[shovill] Removing low coverage contig (< 2 x): NODE_3253_length_551_cov_1.323661
[shovill] Removing low coverage contig (< 2 x): NODE_3252_length_551_cov_1.337054
[shovill] Removing low coverage contig (< 2 x): NODE_3254_length_550_cov_1.715884
[shovill] Removing low coverage contig (< 2 x): NODE_3256_length_550_cov_0.697987
[shovill] Removing low coverage contig (< 2 x): NODE_3255_length_550_cov_1.105145
[shovill] Removing low coverage contig (< 2 x): NODE_3258_length_549_cov_1.428251
[shovill] Removing low coverage contig (< 2 x): NODE_3259_length_549_cov_1.410314
[shovill] Removing low coverage contig (< 2 x): NODE_3260_length_549_cov_1.253363
[shovill] Removing low coverage contig (< 2 x): NODE_3257_length_549_cov_1.616592
[shovill] Removing low coverage contig (< 2 x): NODE_3261_length_549_cov_1.118834
[shovill] Removing low coverage contig (< 2 x): NODE_3269_length_548_cov_1.139326
[shovill] Removing low coverage contig (< 2 x): NODE_3265_length_548_cov_1.561798
[shovill] Removing low coverage contig (< 2 x): NODE_3270_length_548_cov_1.078652
[shovill] Removing low coverage contig (< 2 x): NODE_3266_length_548_cov_1.498876
[shovill] Removing low coverage contig (< 2 x): NODE_3264_length_548_cov_1.694382
[shovill] Removing low coverage contig (< 2 x): NODE_3267_length_548_cov_1.269663
[shovill] Removing low coverage contig (< 2 x): NODE_3263_length_548_cov_1.721348
[shovill] Removing low coverage contig (< 2 x): NODE_3268_length_548_cov_1.204494
[shovill] Removing low coverage contig (< 2 x): NODE_3262_length_548_cov_1.988764
[shovill] Removing low coverage contig (< 2 x): NODE_3273_length_547_cov_1.531532
[shovill] Removing low coverage contig (< 2 x): NODE_3275_length_547_cov_1.238739
[shovill] Removing low coverage contig (< 2 x): NODE_3271_length_547_cov_1.709459
[shovill] Removing low coverage contig (< 2 x): NODE_3272_length_547_cov_1.576577
[shovill] Removing low coverage contig (< 2 x): NODE_3274_length_547_cov_1.398649
[shovill] Removing low coverage contig (< 2 x): NODE_3276_length_547_cov_1.009009
[shovill] Removing low coverage contig (< 2 x): NODE_3278_length_546_cov_1.762980
[shovill] Removing low coverage contig (< 2 x): NODE_3280_length_546_cov_1.474041
[shovill] Removing low coverage contig (< 2 x): NODE_3277_length_546_cov_1.900677
[shovill] Removing low coverage contig (< 2 x): NODE_3281_length_546_cov_1.013544
[shovill] Removing low coverage contig (< 2 x): NODE_3279_length_546_cov_1.647856
[shovill] Removing low coverage contig (< 2 x): NODE_3282_length_546_cov_0.774266
[shovill] Removing low coverage contig (< 2 x): NODE_3289_length_545_cov_1.131222
[shovill] Removing low coverage contig (< 2 x): NODE_3290_length_545_cov_0.674208
[shovill] Removing low coverage contig (< 2 x): NODE_3285_length_545_cov_1.791855
[shovill] Removing low coverage contig (< 2 x): NODE_3288_length_545_cov_1.529412
[shovill] Removing low coverage contig (< 2 x): NODE_3284_length_545_cov_1.800905
[shovill] Removing low coverage contig (< 2 x): NODE_3287_length_545_cov_1.667421
[shovill] Removing low coverage contig (< 2 x): NODE_3286_length_545_cov_1.714932
[shovill] Removing low coverage contig (< 2 x): NODE_3291_length_544_cov_1.804989
[shovill] Removing low coverage contig (< 2 x): NODE_3292_length_544_cov_1.689342
[shovill] Removing low coverage contig (< 2 x): NODE_3295_length_544_cov_0.752834
[shovill] Removing low coverage contig (< 2 x): NODE_3293_length_544_cov_1.310658
[shovill] Removing low coverage contig (< 2 x): NODE_3294_length_544_cov_1.265306
[shovill] Removing low coverage contig (< 2 x): NODE_3302_length_543_cov_1.425000
[shovill] Removing low coverage contig (< 2 x): NODE_3305_length_543_cov_1.154545
[shovill] Removing low coverage contig (< 2 x): NODE_3304_length_543_cov_1.229545
[shovill] Removing low coverage contig (< 2 x): NODE_3303_length_543_cov_1.290909
[shovill] Removing low coverage contig (< 2 x): NODE_3301_length_543_cov_1.463636
[shovill] Removing low coverage contig (< 2 x): NODE_3300_length_543_cov_1.679545
[shovill] Removing low coverage contig (< 2 x): NODE_3309_length_542_cov_0.917995
[shovill] Removing low coverage contig (< 2 x): NODE_3307_length_542_cov_1.275626
[shovill] Removing low coverage contig (< 2 x): NODE_3306_length_542_cov_1.332574
[shovill] Removing low coverage contig (< 2 x): NODE_3308_length_542_cov_1.232346
[shovill] Removing low coverage contig (< 2 x): NODE_3310_length_541_cov_1.705479
[shovill] Removing low coverage contig (< 2 x): NODE_3312_length_541_cov_1.648402
[shovill] Removing low coverage contig (< 2 x): NODE_3311_length_541_cov_1.680365
[shovill] Removing low coverage contig (< 2 x): NODE_3314_length_540_cov_1.054920
[shovill] Removing low coverage contig (< 2 x): NODE_3313_length_540_cov_1.503432
[shovill] Removing low coverage contig (< 2 x): NODE_3318_length_539_cov_0.903670
[shovill] Removing low coverage contig (< 2 x): NODE_3317_length_539_cov_1.676606
[shovill] Removing low coverage contig (< 2 x): NODE_3321_length_538_cov_1.533333
[shovill] Removing low coverage contig (< 2 x): NODE_3322_length_538_cov_1.478161
[shovill] Removing low coverage contig (< 2 x): NODE_3320_length_538_cov_1.659770
[shovill] Removing low coverage contig (< 2 x): NODE_3323_length_537_cov_1.792627
[shovill] Removing low coverage contig (< 2 x): NODE_3327_length_537_cov_1.048387
[shovill] Removing low coverage contig (< 2 x): NODE_3326_length_537_cov_1.099078
[shovill] Removing low coverage contig (< 2 x): NODE_3324_length_537_cov_1.589862
[shovill] Removing low coverage contig (< 2 x): NODE_3325_length_537_cov_1.168203
[shovill] Removing low coverage contig (< 2 x): NODE_3328_length_537_cov_0.930876
[shovill] Removing low coverage contig (< 2 x): NODE_3331_length_536_cov_1.692841
[shovill] Removing low coverage contig (< 2 x): NODE_3332_length_536_cov_1.618938
[shovill] Removing low coverage contig (< 2 x): NODE_3333_length_536_cov_1.078522
[shovill] Removing low coverage contig (< 2 x): NODE_3330_length_536_cov_1.854503
[shovill] Removing low coverage contig (< 2 x): NODE_3342_length_535_cov_1.013889
[shovill] Removing low coverage contig (< 2 x): NODE_3343_length_535_cov_0.849537
[shovill] Removing low coverage contig (< 2 x): NODE_3338_length_535_cov_1.942130
[shovill] Removing low coverage contig (< 2 x): NODE_3341_length_535_cov_1.217593
[shovill] Removing low coverage contig (< 2 x): NODE_3339_length_535_cov_1.282407
[shovill] Removing low coverage contig (< 2 x): NODE_3340_length_535_cov_1.263889
[shovill] Removing low coverage contig (< 2 x): NODE_3337_length_535_cov_1.993056
[shovill] Removing low coverage contig (< 2 x): NODE_3344_length_534_cov_1.459397
[shovill] Removing low coverage contig (< 2 x): NODE_3347_length_534_cov_1.122970
[shovill] Removing low coverage contig (< 2 x): NODE_3346_length_534_cov_1.206497
[shovill] Removing low coverage contig (< 2 x): NODE_3345_length_534_cov_1.329466
[shovill] Removing low coverage contig (< 2 x): NODE_3348_length_533_cov_1.455814
[shovill] Removing low coverage contig (< 2 x): NODE_3350_length_533_cov_1.204651
[shovill] Removing low coverage contig (< 2 x): NODE_3351_length_533_cov_1.141860
[shovill] Removing low coverage contig (< 2 x): NODE_3349_length_533_cov_1.444186
[shovill] Removing low coverage contig (< 2 x): NODE_3352_length_533_cov_0.997674
[shovill] Removing low coverage contig (< 2 x): NODE_3362_length_532_cov_0.778555
[shovill] Removing low coverage contig (< 2 x): NODE_3358_length_532_cov_0.958042
[shovill] Removing low coverage contig (< 2 x): NODE_3355_length_532_cov_1.652681
[shovill] Removing low coverage contig (< 2 x): NODE_3354_length_532_cov_1.850816
[shovill] Removing low coverage contig (< 2 x): NODE_3361_length_532_cov_0.869464
[shovill] Removing low coverage contig (< 2 x): NODE_3359_length_532_cov_0.911422
[shovill] Removing low coverage contig (< 2 x): NODE_3356_length_532_cov_1.358974
[shovill] Removing low coverage contig (< 2 x): NODE_3360_length_532_cov_0.878788
[shovill] Removing low coverage contig (< 2 x): NODE_3357_length_532_cov_1.286713
[shovill] Removing low coverage contig (< 2 x): NODE_3365_length_530_cov_1.477752
[shovill] Removing low coverage contig (< 2 x): NODE_3363_length_530_cov_1.765808
[shovill] Removing low coverage contig (< 2 x): NODE_3366_length_530_cov_0.899297
[shovill] Removing low coverage contig (< 2 x): NODE_3367_length_530_cov_0.782201
[shovill] Removing low coverage contig (< 2 x): NODE_3364_length_530_cov_1.498829
[shovill] Removing low coverage contig (< 2 x): NODE_3373_length_529_cov_0.859155
[shovill] Removing low coverage contig (< 2 x): NODE_3370_length_529_cov_1.661972
[shovill] Removing low coverage contig (< 2 x): NODE_3371_length_529_cov_1.354460
[shovill] Removing low coverage contig (< 2 x): NODE_3372_length_529_cov_1.082160
[shovill] Removing low coverage contig (< 2 x): NODE_3369_length_529_cov_1.673709
[shovill] Removing low coverage contig (< 2 x): NODE_3368_length_529_cov_1.734742
[shovill] Removing low coverage contig (< 2 x): NODE_3375_length_528_cov_1.731765
[shovill] Removing low coverage contig (< 2 x): NODE_3378_length_528_cov_1.195294
[shovill] Removing low coverage contig (< 2 x): NODE_3379_length_528_cov_1.131765
[shovill] Removing low coverage contig (< 2 x): NODE_3376_length_528_cov_1.698824
[shovill] Removing low coverage contig (< 2 x): NODE_3374_length_528_cov_1.884706
[shovill] Removing low coverage contig (< 2 x): NODE_3380_length_528_cov_0.905882
[shovill] Removing low coverage contig (< 2 x): NODE_3381_length_528_cov_0.889412
[shovill] Removing low coverage contig (< 2 x): NODE_3383_length_528_cov_0.703529
[shovill] Removing low coverage contig (< 2 x): NODE_3382_length_528_cov_0.887059
[shovill] Removing low coverage contig (< 2 x): NODE_3377_length_528_cov_1.355294
[shovill] Removing low coverage contig (< 2 x): NODE_3391_length_527_cov_1.132075
[shovill] Removing low coverage contig (< 2 x): NODE_3387_length_527_cov_1.452830
[shovill] Removing low coverage contig (< 2 x): NODE_3393_length_527_cov_0.754717
[shovill] Removing low coverage contig (< 2 x): NODE_3388_length_527_cov_1.306604
[shovill] Removing low coverage contig (< 2 x): NODE_3394_length_527_cov_0.691038
[shovill] Removing low coverage contig (< 2 x): NODE_3385_length_527_cov_1.620283
[shovill] Removing low coverage contig (< 2 x): NODE_3386_length_527_cov_1.568396
[shovill] Removing low coverage contig (< 2 x): NODE_3389_length_527_cov_1.165094
[shovill] Removing low coverage contig (< 2 x): NODE_3390_length_527_cov_1.162736
[shovill] Removing low coverage contig (< 2 x): NODE_3392_length_527_cov_0.783019
[shovill] Removing low coverage contig (< 2 x): NODE_3398_length_526_cov_0.888889
[shovill] Removing low coverage contig (< 2 x): NODE_3396_length_526_cov_1.494090
[shovill] Removing low coverage contig (< 2 x): NODE_3397_length_526_cov_1.278960
[shovill] Removing low coverage contig (< 2 x): NODE_3406_length_525_cov_0.748815
[shovill] Removing low coverage contig (< 2 x): NODE_3399_length_525_cov_1.654028
[shovill] Removing low coverage contig (< 2 x): NODE_3404_length_525_cov_0.995261
[shovill] Removing low coverage contig (< 2 x): NODE_3401_length_525_cov_1.511848
[shovill] Removing low coverage contig (< 2 x): NODE_3403_length_525_cov_1.028436
[shovill] Removing low coverage contig (< 2 x): NODE_3405_length_525_cov_0.992891
[shovill] Removing low coverage contig (< 2 x): NODE_3402_length_525_cov_1.502370
[shovill] Removing low coverage contig (< 2 x): NODE_3400_length_525_cov_1.590047
[shovill] Removing low coverage contig (< 2 x): NODE_3407_length_524_cov_1.648456
[shovill] Removing low coverage contig (< 2 x): NODE_3410_length_524_cov_1.280285
[shovill] Removing low coverage contig (< 2 x): NODE_3408_length_524_cov_1.593824
[shovill] Removing low coverage contig (< 2 x): NODE_3409_length_524_cov_1.429929
[shovill] Removing low coverage contig (< 2 x): NODE_3411_length_524_cov_1.004751
[shovill] Removing low coverage contig (< 2 x): NODE_3417_length_523_cov_1.266667
[shovill] Removing low coverage contig (< 2 x): NODE_3415_length_523_cov_1.542857
[shovill] Removing low coverage contig (< 2 x): NODE_3419_length_523_cov_0.778571
[shovill] Removing low coverage contig (< 2 x): NODE_3418_length_523_cov_0.957143
[shovill] Removing low coverage contig (< 2 x): NODE_3416_length_523_cov_1.430952
[shovill] Removing low coverage contig (< 2 x): NODE_3413_length_523_cov_1.552381
[shovill] Removing low coverage contig (< 2 x): NODE_3414_length_523_cov_1.545238
[shovill] Removing low coverage contig (< 2 x): NODE_3423_length_522_cov_1.252983
[shovill] Removing low coverage contig (< 2 x): NODE_3421_length_522_cov_1.517900
[shovill] Removing low coverage contig (< 2 x): NODE_3422_length_522_cov_1.415274
[shovill] Removing low coverage contig (< 2 x): NODE_3424_length_522_cov_0.904535
[shovill] Removing low coverage contig (< 2 x): NODE_3427_length_521_cov_1.583732
[shovill] Removing low coverage contig (< 2 x): NODE_3429_length_521_cov_1.148325
[shovill] Removing low coverage contig (< 2 x): NODE_3430_length_521_cov_1.028708
[shovill] Removing low coverage contig (< 2 x): NODE_3428_length_521_cov_1.265550
[shovill] Removing low coverage contig (< 2 x): NODE_3434_length_520_cov_1.395683
[shovill] Removing low coverage contig (< 2 x): NODE_3435_length_520_cov_1.340528
[shovill] Removing low coverage contig (< 2 x): NODE_3443_length_520_cov_0.880096
[shovill] Removing low coverage contig (< 2 x): NODE_3436_length_520_cov_1.290168
[shovill] Removing low coverage contig (< 2 x): NODE_3437_length_520_cov_1.148681
[shovill] Removing low coverage contig (< 2 x): NODE_3439_length_520_cov_1.043165
[shovill] Removing low coverage contig (< 2 x): NODE_3441_length_520_cov_0.983213
[shovill] Removing low coverage contig (< 2 x): NODE_3433_length_520_cov_1.647482
[shovill] Removing low coverage contig (< 2 x): NODE_3440_length_520_cov_1.004796
[shovill] Removing low coverage contig (< 2 x): NODE_3444_length_520_cov_0.868106
[shovill] Removing low coverage contig (< 2 x): NODE_3442_length_520_cov_0.887290
[shovill] Removing low coverage contig (< 2 x): NODE_3438_length_520_cov_1.136691
[shovill] Removing low coverage contig (< 2 x): NODE_3446_length_519_cov_1.384615
[shovill] Removing low coverage contig (< 2 x): NODE_3447_length_519_cov_1.382212
[shovill] Removing low coverage contig (< 2 x): NODE_3448_length_519_cov_1.307692
[shovill] Removing low coverage contig (< 2 x): NODE_3451_length_519_cov_0.711538
[shovill] Removing low coverage contig (< 2 x): NODE_3445_length_519_cov_1.485577
[shovill] Removing low coverage contig (< 2 x): NODE_3449_length_519_cov_1.002404
[shovill] Removing low coverage contig (< 2 x): NODE_3450_length_519_cov_0.865385
[shovill] Removing low coverage contig (< 2 x): NODE_3455_length_518_cov_1.891566
[shovill] Removing low coverage contig (< 2 x): NODE_3456_length_518_cov_1.144578
[shovill] Removing low coverage contig (< 2 x): NODE_3459_length_517_cov_1.413043
[shovill] Removing low coverage contig (< 2 x): NODE_3460_length_517_cov_1.287440
[shovill] Removing low coverage contig (< 2 x): NODE_3457_length_517_cov_1.833333
[shovill] Removing low coverage contig (< 2 x): NODE_3458_length_517_cov_1.480676
[shovill] Removing low coverage contig (< 2 x): NODE_3463_length_516_cov_1.176755
[shovill] Removing low coverage contig (< 2 x): NODE_3464_length_516_cov_1.138015
[shovill] Removing low coverage contig (< 2 x): NODE_3465_length_516_cov_0.760291
[shovill] Removing low coverage contig (< 2 x): NODE_3462_length_516_cov_1.622276
[shovill] Removing low coverage contig (< 2 x): NODE_3466_length_515_cov_1.944175
[shovill] Removing low coverage contig (< 2 x): NODE_3469_length_515_cov_1.276699
[shovill] Removing low coverage contig (< 2 x): NODE_3468_length_515_cov_1.366505
[shovill] Removing low coverage contig (< 2 x): NODE_3467_length_515_cov_1.682039
[shovill] Removing low coverage contig (< 2 x): NODE_3470_length_515_cov_1.152913
[shovill] Removing low coverage contig (< 2 x): NODE_3476_length_514_cov_0.917275
[shovill] Removing low coverage contig (< 2 x): NODE_3471_length_514_cov_1.970803
[shovill] Removing low coverage contig (< 2 x): NODE_3472_length_514_cov_1.824818
[shovill] Removing low coverage contig (< 2 x): NODE_3474_length_514_cov_1.510949
[shovill] Removing low coverage contig (< 2 x): NODE_3475_length_514_cov_1.048662
[shovill] Removing low coverage contig (< 2 x): NODE_3473_length_514_cov_1.688564
[shovill] Removing low coverage contig (< 2 x): NODE_3478_length_514_cov_0.401460
[shovill] Removing low coverage contig (< 2 x): NODE_3477_length_514_cov_0.912409
[shovill] Removing low coverage contig (< 2 x): NODE_3481_length_513_cov_1.717073
[shovill] Removing low coverage contig (< 2 x): NODE_3486_length_513_cov_0.882927
[shovill] Removing low coverage contig (< 2 x): NODE_3488_length_513_cov_0.748780
[shovill] Removing low coverage contig (< 2 x): NODE_3483_length_513_cov_1.078049
[shovill] Removing low coverage contig (< 2 x): NODE_3484_length_513_cov_0.965854
[shovill] Removing low coverage contig (< 2 x): NODE_3487_length_513_cov_0.836585
[shovill] Removing low coverage contig (< 2 x): NODE_3482_length_513_cov_1.709756
[shovill] Removing low coverage contig (< 2 x): NODE_3485_length_513_cov_0.960976
[shovill] Removing low coverage contig (< 2 x): NODE_3490_length_512_cov_1.711491
[shovill] Removing low coverage contig (< 2 x): NODE_3489_length_512_cov_1.904645
[shovill] Removing low coverage contig (< 2 x): NODE_3493_length_512_cov_0.924205
[shovill] Removing low coverage contig (< 2 x): NODE_3491_length_512_cov_1.286064
[shovill] Removing low coverage contig (< 2 x): NODE_3492_length_512_cov_1.090465
[shovill] Removing low coverage contig (< 2 x): NODE_3497_length_511_cov_1.262255
[shovill] Removing low coverage contig (< 2 x): NODE_3498_length_511_cov_1.262255
[shovill] Removing low coverage contig (< 2 x): NODE_3496_length_511_cov_1.531863
[shovill] Removing low coverage contig (< 2 x): NODE_3499_length_511_cov_1.174020
[shovill] Removing low coverage contig (< 2 x): NODE_3509_length_510_cov_0.941032
[shovill] Removing low coverage contig (< 2 x): NODE_3508_length_510_cov_0.972973
[shovill] Removing low coverage contig (< 2 x): NODE_3501_length_510_cov_1.422604
[shovill] Removing low coverage contig (< 2 x): NODE_3505_length_510_cov_1.199017
[shovill] Removing low coverage contig (< 2 x): NODE_3504_length_510_cov_1.277641
[shovill] Removing low coverage contig (< 2 x): NODE_3503_length_510_cov_1.309582
[shovill] Removing low coverage contig (< 2 x): NODE_3507_length_510_cov_1.036855
[shovill] Removing low coverage contig (< 2 x): NODE_3506_length_510_cov_1.132678
[shovill] Removing low coverage contig (< 2 x): NODE_3510_length_510_cov_0.916462
[shovill] Removing low coverage contig (< 2 x): NODE_3502_length_510_cov_1.373464
[shovill] Removing low coverage contig (< 2 x): NODE_3517_length_509_cov_0.913793
[shovill] Removing low coverage contig (< 2 x): NODE_3515_length_509_cov_1.339901
[shovill] Removing low coverage contig (< 2 x): NODE_3514_length_509_cov_1.455665
[shovill] Removing low coverage contig (< 2 x): NODE_3512_length_509_cov_1.642857
[shovill] Removing low coverage contig (< 2 x): NODE_3516_length_509_cov_1.241379
[shovill] Removing low coverage contig (< 2 x): NODE_3513_length_509_cov_1.571429
[shovill] Removing low coverage contig (< 2 x): NODE_3518_length_509_cov_0.761084
[shovill] Removing low coverage contig (< 2 x): NODE_3521_length_508_cov_0.997531
[shovill] Removing low coverage contig (< 2 x): NODE_3522_length_508_cov_0.871605
[shovill] Removing low coverage contig (< 2 x): NODE_3520_length_508_cov_1.128395
[shovill] Removing low coverage contig (< 2 x): NODE_3519_length_508_cov_1.590123
[shovill] Removing low coverage contig (< 2 x): NODE_3530_length_507_cov_0.992574
[shovill] Removing low coverage contig (< 2 x): NODE_3525_length_507_cov_1.542079
[shovill] Removing low coverage contig (< 2 x): NODE_3529_length_507_cov_1.272277
[shovill] Removing low coverage contig (< 2 x): NODE_3531_length_507_cov_0.856436
[shovill] Removing low coverage contig (< 2 x): NODE_3524_length_507_cov_1.586634
[shovill] Removing low coverage contig (< 2 x): NODE_3527_length_507_cov_1.306931
[shovill] Removing low coverage contig (< 2 x): NODE_3526_length_507_cov_1.403465
[shovill] Removing low coverage contig (< 2 x): NODE_3528_length_507_cov_1.279703
[shovill] Removing low coverage contig (< 2 x): NODE_3532_length_507_cov_0.799505
[shovill] Removing low coverage contig (< 2 x): NODE_3539_length_506_cov_0.833747
[shovill] Removing low coverage contig (< 2 x): NODE_3535_length_506_cov_1.560794
[shovill] Removing low coverage contig (< 2 x): NODE_3534_length_506_cov_1.590571
[shovill] Removing low coverage contig (< 2 x): NODE_3536_length_506_cov_1.275434
[shovill] Removing low coverage contig (< 2 x): NODE_3538_length_506_cov_1.024814
[shovill] Removing low coverage contig (< 2 x): NODE_3537_length_506_cov_1.260546
[shovill] Removing low coverage contig (< 2 x): NODE_3540_length_505_cov_0.962687
[shovill] Removing low coverage contig (< 2 x): NODE_3544_length_504_cov_1.002494
[shovill] Removing low coverage contig (< 2 x): NODE_3543_length_504_cov_1.109726
[shovill] Removing low coverage contig (< 2 x): NODE_3546_length_504_cov_0.593516
[shovill] Removing low coverage contig (< 2 x): NODE_3542_length_504_cov_1.256858
[shovill] Removing low coverage contig (< 2 x): NODE_3541_length_504_cov_1.591022
[shovill] Removing low coverage contig (< 2 x): NODE_3545_length_504_cov_0.768080
[shovill] Removing low coverage contig (< 2 x): NODE_3550_length_503_cov_0.970000
[shovill] Removing low coverage contig (< 2 x): NODE_3549_length_503_cov_1.042500
[shovill] Removing low coverage contig (< 2 x): NODE_3548_length_503_cov_1.247500
[shovill] Removing low coverage contig (< 2 x): NODE_3552_length_503_cov_0.842500
[shovill] Removing low coverage contig (< 2 x): NODE_3551_length_503_cov_0.970000
[shovill] Removing low coverage contig (< 2 x): NODE_3557_length_502_cov_1.165414
[shovill] Removing low coverage contig (< 2 x): NODE_3558_length_502_cov_1.090226
[shovill] Removing low coverage contig (< 2 x): NODE_3554_length_502_cov_1.832080
[shovill] Removing low coverage contig (< 2 x): NODE_3555_length_502_cov_1.631579
[shovill] Removing low coverage contig (< 2 x): NODE_3556_length_502_cov_1.263158
[shovill] Removing low coverage contig (< 2 x): NODE_3567_length_501_cov_1.203518
[shovill] Removing low coverage contig (< 2 x): NODE_3562_length_501_cov_1.688442
[shovill] Removing low coverage contig (< 2 x): NODE_3565_length_501_cov_1.409548
[shovill] Removing low coverage contig (< 2 x): NODE_3569_length_501_cov_0.846734
[shovill] Removing low coverage contig (< 2 x): NODE_3564_length_501_cov_1.472362
[shovill] Removing low coverage contig (< 2 x): NODE_3566_length_501_cov_1.273869
[shovill] Removing low coverage contig (< 2 x): NODE_3568_length_501_cov_1.143216
[shovill] Removing low coverage contig (< 2 x): NODE_3563_length_501_cov_1.670854
[shovill] Removing low coverage contig (< 2 x): NODE_3572_length_500_cov_0.947103
[shovill] Removing low coverage contig (< 2 x): NODE_3570_length_500_cov_1.712846
[shovill] Removing low coverage contig (< 2 x): NODE_3571_length_500_cov_1.549118
[shovill] Removing low coverage contig (< 2 x): NODE_3573_length_499_cov_1.363636
[shovill] Removing low coverage contig (< 2 x): NODE_3574_length_499_cov_1.020202
[shovill] Removing low coverage contig (< 2 x): NODE_3575_length_498_cov_0.858228
[shovill] Removing low coverage contig (< 2 x): NODE_3576_length_497_cov_1.609137
[shovill] Removing low coverage contig (< 2 x): NODE_3577_length_497_cov_1.489848
[shovill] Removing low coverage contig (< 2 x): NODE_3579_length_497_cov_1.175127
[shovill] Removing low coverage contig (< 2 x): NODE_3580_length_497_cov_0.730964
[shovill] Removing low coverage contig (< 2 x): NODE_3578_length_497_cov_1.304569
[shovill] Removing low coverage contig (< 2 x): NODE_3581_length_496_cov_1.880407
[shovill] Removing low coverage contig (< 2 x): NODE_3585_length_496_cov_0.681934
[shovill] Removing low coverage contig (< 2 x): NODE_3584_length_496_cov_1.256997
[shovill] Removing low coverage contig (< 2 x): NODE_3582_length_496_cov_1.478372
[shovill] Removing low coverage contig (< 2 x): NODE_3583_length_496_cov_1.262087
[shovill] Removing low coverage contig (< 2 x): NODE_3589_length_495_cov_1.135204
[shovill] Removing low coverage contig (< 2 x): NODE_3591_length_495_cov_0.951531
[shovill] Removing low coverage contig (< 2 x): NODE_3592_length_495_cov_0.831633
[shovill] Removing low coverage contig (< 2 x): NODE_3588_length_495_cov_1.482143
[shovill] Removing low coverage contig (< 2 x): NODE_3590_length_495_cov_1.066327
[shovill] Removing low coverage contig (< 2 x): NODE_3598_length_494_cov_1.125320
[shovill] Removing low coverage contig (< 2 x): NODE_3600_length_494_cov_0.820972
[shovill] Removing low coverage contig (< 2 x): NODE_3595_length_494_cov_1.585678
[shovill] Removing low coverage contig (< 2 x): NODE_3596_length_494_cov_1.427110
[shovill] Removing low coverage contig (< 2 x): NODE_3594_length_494_cov_1.680307
[shovill] Removing low coverage contig (< 2 x): NODE_3597_length_494_cov_1.358056
[shovill] Removing low coverage contig (< 2 x): NODE_3601_length_494_cov_0.473146
[shovill] Removing low coverage contig (< 2 x): NODE_3599_length_494_cov_0.984655
[shovill] Removing low coverage contig (< 2 x): NODE_3603_length_493_cov_1.056410
[shovill] Removing low coverage contig (< 2 x): NODE_3604_length_493_cov_0.741026
[shovill] Removing low coverage contig (< 2 x): NODE_3602_length_493_cov_1.087179
[shovill] Removing low coverage contig (< 2 x): NODE_3612_length_492_cov_0.997429
[shovill] Removing low coverage contig (< 2 x): NODE_3613_length_492_cov_0.982005
[shovill] Removing low coverage contig (< 2 x): NODE_3611_length_492_cov_0.997429
[shovill] Removing low coverage contig (< 2 x): NODE_3607_length_492_cov_1.431877
[shovill] Removing low coverage contig (< 2 x): NODE_3605_length_492_cov_1.748072
[shovill] Removing low coverage contig (< 2 x): NODE_3615_length_492_cov_0.784062
[shovill] Removing low coverage contig (< 2 x): NODE_3610_length_492_cov_1.089974
[shovill] Removing low coverage contig (< 2 x): NODE_3606_length_492_cov_1.544987
[shovill] Removing low coverage contig (< 2 x): NODE_3614_length_492_cov_0.871465
[shovill] Removing low coverage contig (< 2 x): NODE_3608_length_492_cov_1.372751
[shovill] Removing low coverage contig (< 2 x): NODE_3609_length_492_cov_1.205656
[shovill] Removing low coverage contig (< 2 x): NODE_3617_length_491_cov_1.819588
[shovill] Removing low coverage contig (< 2 x): NODE_3621_length_491_cov_0.822165
[shovill] Removing low coverage contig (< 2 x): NODE_3623_length_491_cov_0.711340
[shovill] Removing low coverage contig (< 2 x): NODE_3618_length_491_cov_1.244845
[shovill] Removing low coverage contig (< 2 x): NODE_3622_length_491_cov_0.755155
[shovill] Removing low coverage contig (< 2 x): NODE_3619_length_491_cov_1.162371
[shovill] Removing low coverage contig (< 2 x): NODE_3620_length_491_cov_1.023196
[shovill] Removing low coverage contig (< 2 x): NODE_3633_length_490_cov_0.875969
[shovill] Removing low coverage contig (< 2 x): NODE_3625_length_490_cov_1.534884
[shovill] Removing low coverage contig (< 2 x): NODE_3631_length_490_cov_1.144703
[shovill] Removing low coverage contig (< 2 x): NODE_3634_length_490_cov_0.819121
[shovill] Removing low coverage contig (< 2 x): NODE_3628_length_490_cov_1.268734
[shovill] Removing low coverage contig (< 2 x): NODE_3635_length_490_cov_0.661499
[shovill] Removing low coverage contig (< 2 x): NODE_3627_length_490_cov_1.379845
[shovill] Removing low coverage contig (< 2 x): NODE_3626_length_490_cov_1.385013
[shovill] Removing low coverage contig (< 2 x): NODE_3629_length_490_cov_1.245478
[shovill] Removing low coverage contig (< 2 x): NODE_3630_length_490_cov_1.173127
[shovill] Removing low coverage contig (< 2 x): NODE_3632_length_490_cov_0.948320
[shovill] Removing low coverage contig (< 2 x): NODE_3636_length_489_cov_1.305699
[shovill] Removing low coverage contig (< 2 x): NODE_3638_length_489_cov_1.222798
[shovill] Removing low coverage contig (< 2 x): NODE_3643_length_489_cov_0.722798
[shovill] Removing low coverage contig (< 2 x): NODE_3640_length_489_cov_1.085492
[shovill] Removing low coverage contig (< 2 x): NODE_3637_length_489_cov_1.295337
[shovill] Removing low coverage contig (< 2 x): NODE_3642_length_489_cov_0.917098
[shovill] Removing low coverage contig (< 2 x): NODE_3639_length_489_cov_1.147668
[shovill] Removing low coverage contig (< 2 x): NODE_3641_length_489_cov_1.069948
[shovill] Removing low coverage contig (< 2 x): NODE_3647_length_488_cov_1.888312
[shovill] Removing low coverage contig (< 2 x): NODE_3652_length_488_cov_1.070130
[shovill] Removing low coverage contig (< 2 x): NODE_3650_length_488_cov_1.184416
[shovill] Removing low coverage contig (< 2 x): NODE_3651_length_488_cov_1.168831
[shovill] Removing low coverage contig (< 2 x): NODE_3649_length_488_cov_1.223377
[shovill] Removing low coverage contig (< 2 x): NODE_3646_length_488_cov_1.901299
[shovill] Removing low coverage contig (< 2 x): NODE_3648_length_488_cov_1.638961
[shovill] Removing low coverage contig (< 2 x): NODE_3657_length_487_cov_1.354167
[shovill] Removing low coverage contig (< 2 x): NODE_3655_length_487_cov_1.718750
[shovill] Removing low coverage contig (< 2 x): NODE_3656_length_487_cov_1.651042
[shovill] Removing low coverage contig (< 2 x): NODE_3654_length_487_cov_1.856771
[shovill] Removing low coverage contig (< 2 x): NODE_3653_length_487_cov_1.989583
[shovill] Removing low coverage contig (< 2 x): NODE_3658_length_487_cov_1.226562
[shovill] Removing low coverage contig (< 2 x): NODE_3662_length_486_cov_1.159269
[shovill] Removing low coverage contig (< 2 x): NODE_3663_length_486_cov_1.093995
[shovill] Removing low coverage contig (< 2 x): NODE_3660_length_486_cov_1.402089
[shovill] Removing low coverage contig (< 2 x): NODE_3661_length_486_cov_1.326371
[shovill] Removing low coverage contig (< 2 x): NODE_3665_length_486_cov_0.684073
[shovill] Removing low coverage contig (< 2 x): NODE_3664_length_486_cov_1.073107
[shovill] Removing low coverage contig (< 2 x): NODE_3666_length_485_cov_1.751309
[shovill] Removing low coverage contig (< 2 x): NODE_3673_length_485_cov_0.795812
[shovill] Removing low coverage contig (< 2 x): NODE_3672_length_485_cov_0.853403
[shovill] Removing low coverage contig (< 2 x): NODE_3674_length_485_cov_0.628272
[shovill] Removing low coverage contig (< 2 x): NODE_3671_length_485_cov_1.314136
[shovill] Removing low coverage contig (< 2 x): NODE_3667_length_485_cov_1.657068
[shovill] Removing low coverage contig (< 2 x): NODE_3670_length_485_cov_1.321990
[shovill] Removing low coverage contig (< 2 x): NODE_3675_length_485_cov_0.628272
[shovill] Removing low coverage contig (< 2 x): NODE_3668_length_485_cov_1.617801
[shovill] Removing low coverage contig (< 2 x): NODE_3669_length_485_cov_1.382199
[shovill] Removing low coverage contig (< 2 x): NODE_3677_length_484_cov_1.755906
[shovill] Removing low coverage contig (< 2 x): NODE_3679_length_484_cov_0.905512
[shovill] Removing low coverage contig (< 2 x): NODE_3678_length_484_cov_1.598425
[shovill] Removing low coverage contig (< 2 x): NODE_3681_length_484_cov_0.850394
[shovill] Removing low coverage contig (< 2 x): NODE_3680_length_484_cov_0.868766
[shovill] Removing low coverage contig (< 2 x): NODE_3686_length_483_cov_0.818421
[shovill] Removing low coverage contig (< 2 x): NODE_3685_length_483_cov_1.023684
[shovill] Removing low coverage contig (< 2 x): NODE_3683_length_483_cov_1.886842
[shovill] Removing low coverage contig (< 2 x): NODE_3684_length_483_cov_1.160526
[shovill] Removing low coverage contig (< 2 x): NODE_3692_length_482_cov_0.617414
[shovill] Removing low coverage contig (< 2 x): NODE_3687_length_482_cov_1.609499
[shovill] Removing low coverage contig (< 2 x): NODE_3691_length_482_cov_0.960422
[shovill] Removing low coverage contig (< 2 x): NODE_3690_length_482_cov_1.050132
[shovill] Removing low coverage contig (< 2 x): NODE_3688_length_482_cov_1.456464
[shovill] Removing low coverage contig (< 2 x): NODE_3689_length_482_cov_1.216359
[shovill] Removing low coverage contig (< 2 x): NODE_3697_length_481_cov_1.119048
[shovill] Removing low coverage contig (< 2 x): NODE_3695_length_481_cov_1.809524
[shovill] Removing low coverage contig (< 2 x): NODE_3698_length_481_cov_0.798942
[shovill] Removing low coverage contig (< 2 x): NODE_3696_length_481_cov_1.632275
[shovill] Removing low coverage contig (< 2 x): NODE_3694_length_481_cov_1.941799
[shovill] Removing low coverage contig (< 2 x): NODE_3704_length_480_cov_1.702918
[shovill] Removing low coverage contig (< 2 x): NODE_3702_length_480_cov_1.946950
[shovill] Removing low coverage contig (< 2 x): NODE_3707_length_480_cov_1.034483
[shovill] Removing low coverage contig (< 2 x): NODE_3705_length_480_cov_1.456233
[shovill] Removing low coverage contig (< 2 x): NODE_3706_length_480_cov_1.363395
[shovill] Removing low coverage contig (< 2 x): NODE_3709_length_480_cov_0.984085
[shovill] Removing low coverage contig (< 2 x): NODE_3711_length_480_cov_0.806366
[shovill] Removing low coverage contig (< 2 x): NODE_3710_length_480_cov_0.931034
[shovill] Removing low coverage contig (< 2 x): NODE_3708_length_480_cov_1.007958
[shovill] Removing low coverage contig (< 2 x): NODE_3703_length_480_cov_1.737401
[shovill] Removing low coverage contig (< 2 x): NODE_3716_length_479_cov_1.146277
[shovill] Removing low coverage contig (< 2 x): NODE_3713_length_479_cov_1.476064
[shovill] Removing low coverage contig (< 2 x): NODE_3715_length_479_cov_1.279255
[shovill] Removing low coverage contig (< 2 x): NODE_3717_length_479_cov_0.954787
[shovill] Removing low coverage contig (< 2 x): NODE_3712_length_479_cov_1.486702
[shovill] Removing low coverage contig (< 2 x): NODE_3714_length_479_cov_1.292553
[shovill] Removing low coverage contig (< 2 x): NODE_3728_length_478_cov_0.808000
[shovill] Removing low coverage contig (< 2 x): NODE_3725_length_478_cov_1.096000
[shovill] Removing low coverage contig (< 2 x): NODE_3727_length_478_cov_0.864000
[shovill] Removing low coverage contig (< 2 x): NODE_3721_length_478_cov_1.600000
[shovill] Removing low coverage contig (< 2 x): NODE_3722_length_478_cov_1.594667
[shovill] Removing low coverage contig (< 2 x): NODE_3723_length_478_cov_1.333333
[shovill] Removing low coverage contig (< 2 x): NODE_3726_length_478_cov_0.997333
[shovill] Removing low coverage contig (< 2 x): NODE_3724_length_478_cov_1.258667
[shovill] Removing low coverage contig (< 2 x): NODE_3720_length_478_cov_1.666667
[shovill] Removing low coverage contig (< 2 x): NODE_3729_length_477_cov_1.917112
[shovill] Removing low coverage contig (< 2 x): NODE_3734_length_477_cov_1.299465
[shovill] Removing low coverage contig (< 2 x): NODE_3735_length_477_cov_0.708556
[shovill] Removing low coverage contig (< 2 x): NODE_3732_length_477_cov_1.326203
[shovill] Removing low coverage contig (< 2 x): NODE_3730_length_477_cov_1.820856
[shovill] Removing low coverage contig (< 2 x): NODE_3733_length_477_cov_1.318182
[shovill] Removing low coverage contig (< 2 x): NODE_3731_length_477_cov_1.745989
[shovill] Removing low coverage contig (< 2 x): NODE_3737_length_476_cov_1.241287
[shovill] Removing low coverage contig (< 2 x): NODE_3736_length_476_cov_1.581769
[shovill] Removing low coverage contig (< 2 x): NODE_3739_length_476_cov_0.847185
[shovill] Removing low coverage contig (< 2 x): NODE_3738_length_476_cov_0.949062
[shovill] Removing low coverage contig (< 2 x): NODE_3741_length_475_cov_1.448925
[shovill] Removing low coverage contig (< 2 x): NODE_3743_length_475_cov_1.298387
[shovill] Removing low coverage contig (< 2 x): NODE_3740_length_475_cov_1.895161
[shovill] Removing low coverage contig (< 2 x): NODE_3742_length_475_cov_1.346774
[shovill] Removing low coverage contig (< 2 x): NODE_3746_length_474_cov_1.221024
[shovill] Removing low coverage contig (< 2 x): NODE_3748_length_474_cov_1.045822
[shovill] Removing low coverage contig (< 2 x): NODE_3744_length_474_cov_1.590296
[shovill] Removing low coverage contig (< 2 x): NODE_3745_length_474_cov_1.493261
[shovill] Removing low coverage contig (< 2 x): NODE_3747_length_474_cov_1.132075
[shovill] Removing low coverage contig (< 2 x): NODE_3760_length_473_cov_0.637838
[shovill] Removing low coverage contig (< 2 x): NODE_3758_length_473_cov_1.027027
[shovill] Removing low coverage contig (< 2 x): NODE_3757_length_473_cov_1.354054
[shovill] Removing low coverage contig (< 2 x): NODE_3755_length_473_cov_1.508108
[shovill] Removing low coverage contig (< 2 x): NODE_3752_length_473_cov_1.645946
[shovill] Removing low coverage contig (< 2 x): NODE_3754_length_473_cov_1.513514
[shovill] Removing low coverage contig (< 2 x): NODE_3750_length_473_cov_1.662162
[shovill] Removing low coverage contig (< 2 x): NODE_3759_length_473_cov_0.994595
[shovill] Removing low coverage contig (< 2 x): NODE_3756_length_473_cov_1.502703
[shovill] Removing low coverage contig (< 2 x): NODE_3753_length_473_cov_1.527027
[shovill] Removing low coverage contig (< 2 x): NODE_3751_length_473_cov_1.648649
[shovill] Removing low coverage contig (< 2 x): NODE_3769_length_472_cov_0.631436
[shovill] Removing low coverage contig (< 2 x): NODE_3768_length_472_cov_0.661247
[shovill] Removing low coverage contig (< 2 x): NODE_3764_length_472_cov_1.455285
[shovill] Removing low coverage contig (< 2 x): NODE_3766_length_472_cov_1.105691
[shovill] Removing low coverage contig (< 2 x): NODE_3767_length_472_cov_0.951220
[shovill] Removing low coverage contig (< 2 x): NODE_3762_length_472_cov_1.571816
[shovill] Removing low coverage contig (< 2 x): NODE_3763_length_472_cov_1.571816
[shovill] Removing low coverage contig (< 2 x): NODE_3765_length_472_cov_1.195122
[shovill] Removing low coverage contig (< 2 x): NODE_3761_length_472_cov_1.753388
[shovill] Removing low coverage contig (< 2 x): NODE_3773_length_471_cov_1.008152
[shovill] Removing low coverage contig (< 2 x): NODE_3770_length_471_cov_1.611413
[shovill] Removing low coverage contig (< 2 x): NODE_3774_length_471_cov_1.000000
[shovill] Removing low coverage contig (< 2 x): NODE_3771_length_471_cov_1.184783
[shovill] Removing low coverage contig (< 2 x): NODE_3775_length_471_cov_0.828804
[shovill] Removing low coverage contig (< 2 x): NODE_3772_length_471_cov_1.168478
[shovill] Removing low coverage contig (< 2 x): NODE_3780_length_470_cov_1.147139
[shovill] Removing low coverage contig (< 2 x): NODE_3778_length_470_cov_1.831063
[shovill] Removing low coverage contig (< 2 x): NODE_3782_length_470_cov_0.517711
[shovill] Removing low coverage contig (< 2 x): NODE_3781_length_470_cov_0.967302
[shovill] Removing low coverage contig (< 2 x): NODE_3776_length_470_cov_1.972752
[shovill] Removing low coverage contig (< 2 x): NODE_3777_length_470_cov_1.861035
[shovill] Removing low coverage contig (< 2 x): NODE_3779_length_470_cov_1.752044
[shovill] Removing low coverage contig (< 2 x): NODE_3785_length_469_cov_1.153005
[shovill] Removing low coverage contig (< 2 x): NODE_3784_length_469_cov_1.398907
[shovill] Removing low coverage contig (< 2 x): NODE_3786_length_469_cov_0.715847
[shovill] Removing low coverage contig (< 2 x): NODE_3791_length_468_cov_1.241096
[shovill] Removing low coverage contig (< 2 x): NODE_3789_length_468_cov_1.504110
[shovill] Removing low coverage contig (< 2 x): NODE_3795_length_468_cov_0.753425
[shovill] Removing low coverage contig (< 2 x): NODE_3793_length_468_cov_1.106849
[shovill] Removing low coverage contig (< 2 x): NODE_3788_length_468_cov_1.835616
[shovill] Removing low coverage contig (< 2 x): NODE_3796_length_468_cov_0.715068
[shovill] Removing low coverage contig (< 2 x): NODE_3792_length_468_cov_1.232877
[shovill] Removing low coverage contig (< 2 x): NODE_3794_length_468_cov_0.964384
[shovill] Removing low coverage contig (< 2 x): NODE_3790_length_468_cov_1.446575
[shovill] Removing low coverage contig (< 2 x): NODE_3800_length_467_cov_1.521978
[shovill] Removing low coverage contig (< 2 x): NODE_3797_length_467_cov_1.758242
[shovill] Removing low coverage contig (< 2 x): NODE_3801_length_467_cov_1.250000
[shovill] Removing low coverage contig (< 2 x): NODE_3798_length_467_cov_1.684066
[shovill] Removing low coverage contig (< 2 x): NODE_3802_length_467_cov_1.153846
[shovill] Removing low coverage contig (< 2 x): NODE_3799_length_467_cov_1.546703
[shovill] Removing low coverage contig (< 2 x): NODE_3809_length_466_cov_0.754821
[shovill] Removing low coverage contig (< 2 x): NODE_3808_length_466_cov_0.944904
[shovill] Removing low coverage contig (< 2 x): NODE_3807_length_466_cov_1.093664
[shovill] Removing low coverage contig (< 2 x): NODE_3805_length_466_cov_1.228650
[shovill] Removing low coverage contig (< 2 x): NODE_3806_length_466_cov_1.140496
[shovill] Removing low coverage contig (< 2 x): NODE_3804_length_466_cov_1.509642
[shovill] Removing low coverage contig (< 2 x): NODE_3811_length_465_cov_1.591160
[shovill] Removing low coverage contig (< 2 x): NODE_3814_length_465_cov_1.129834
[shovill] Removing low coverage contig (< 2 x): NODE_3813_length_465_cov_1.458564
[shovill] Removing low coverage contig (< 2 x): NODE_3812_length_465_cov_1.464088
[shovill] Removing low coverage contig (< 2 x): NODE_3817_length_465_cov_0.745856
[shovill] Removing low coverage contig (< 2 x): NODE_3816_length_465_cov_0.823204
[shovill] Removing low coverage contig (< 2 x): NODE_3815_length_465_cov_1.060773
[shovill] Removing low coverage contig (< 2 x): NODE_3820_length_464_cov_1.922438
[shovill] Removing low coverage contig (< 2 x): NODE_3819_length_464_cov_1.933518
[shovill] Removing low coverage contig (< 2 x): NODE_3823_length_464_cov_1.520776
[shovill] Removing low coverage contig (< 2 x): NODE_3824_length_464_cov_1.385042
[shovill] Removing low coverage contig (< 2 x): NODE_3822_length_464_cov_1.623269
[shovill] Removing low coverage contig (< 2 x): NODE_3818_length_464_cov_1.933518
[shovill] Removing low coverage contig (< 2 x): NODE_3825_length_464_cov_0.828255
[shovill] Removing low coverage contig (< 2 x): NODE_3821_length_464_cov_1.867036
[shovill] Removing low coverage contig (< 2 x): NODE_3829_length_463_cov_1.588889
[shovill] Removing low coverage contig (< 2 x): NODE_3828_length_463_cov_1.783333
[shovill] Removing low coverage contig (< 2 x): NODE_3833_length_463_cov_1.258333
[shovill] Removing low coverage contig (< 2 x): NODE_3827_length_463_cov_1.908333
[shovill] Removing low coverage contig (< 2 x): NODE_3835_length_463_cov_0.975000
[shovill] Removing low coverage contig (< 2 x): NODE_3834_length_463_cov_1.197222
[shovill] Removing low coverage contig (< 2 x): NODE_3831_length_463_cov_1.333333
[shovill] Removing low coverage contig (< 2 x): NODE_3830_length_463_cov_1.344444
[shovill] Removing low coverage contig (< 2 x): NODE_3836_length_463_cov_0.802778
[shovill] Removing low coverage contig (< 2 x): NODE_3832_length_463_cov_1.313889
[shovill] Removing low coverage contig (< 2 x): NODE_3837_length_462_cov_1.841226
[shovill] Removing low coverage contig (< 2 x): NODE_3838_length_462_cov_1.738162
[shovill] Removing low coverage contig (< 2 x): NODE_3840_length_462_cov_0.846797
[shovill] Removing low coverage contig (< 2 x): NODE_3839_length_462_cov_1.011142
[shovill] Removing low coverage contig (< 2 x): NODE_3845_length_461_cov_0.790503
[shovill] Removing low coverage contig (< 2 x): NODE_3844_length_461_cov_0.829609
[shovill] Removing low coverage contig (< 2 x): NODE_3842_length_461_cov_1.578212
[shovill] Removing low coverage contig (< 2 x): NODE_3843_length_461_cov_1.427374
[shovill] Removing low coverage contig (< 2 x): NODE_3852_length_460_cov_1.221289
[shovill] Removing low coverage contig (< 2 x): NODE_3851_length_460_cov_1.302521
[shovill] Removing low coverage contig (< 2 x): NODE_3849_length_460_cov_1.857143
[shovill] Removing low coverage contig (< 2 x): NODE_3855_length_460_cov_0.585434
[shovill] Removing low coverage contig (< 2 x): NODE_3854_length_460_cov_1.028011
[shovill] Removing low coverage contig (< 2 x): NODE_3850_length_460_cov_1.366947
[shovill] Removing low coverage contig (< 2 x): NODE_3853_length_460_cov_1.039216
[shovill] Removing low coverage contig (< 2 x): NODE_3863_length_459_cov_0.969101
[shovill] Removing low coverage contig (< 2 x): NODE_3859_length_459_cov_1.823034
[shovill] Removing low coverage contig (< 2 x): NODE_3860_length_459_cov_1.272472
[shovill] Removing low coverage contig (< 2 x): NODE_3864_length_459_cov_0.887640
[shovill] Removing low coverage contig (< 2 x): NODE_3861_length_459_cov_1.202247
[shovill] Removing low coverage contig (< 2 x): NODE_3862_length_459_cov_1.078652
[shovill] Removing low coverage contig (< 2 x): NODE_3866_length_458_cov_1.580282
[shovill] Removing low coverage contig (< 2 x): NODE_3870_length_458_cov_1.073239
[shovill] Removing low coverage contig (< 2 x): NODE_3872_length_458_cov_0.805634
[shovill] Removing low coverage contig (< 2 x): NODE_3868_length_458_cov_1.318310
[shovill] Removing low coverage contig (< 2 x): NODE_3867_length_458_cov_1.352113
[shovill] Removing low coverage contig (< 2 x): NODE_3871_length_458_cov_0.983099
[shovill] Removing low coverage contig (< 2 x): NODE_3869_length_458_cov_1.298592
[shovill] Removing low coverage contig (< 2 x): NODE_3882_length_457_cov_0.677966
[shovill] Removing low coverage contig (< 2 x): NODE_3876_length_457_cov_1.728814
[shovill] Removing low coverage contig (< 2 x): NODE_3875_length_457_cov_1.912429
[shovill] Removing low coverage contig (< 2 x): NODE_3880_length_457_cov_1.070621
[shovill] Removing low coverage contig (< 2 x): NODE_3878_length_457_cov_1.372881
[shovill] Removing low coverage contig (< 2 x): NODE_3881_length_457_cov_0.694915
[shovill] Removing low coverage contig (< 2 x): NODE_3877_length_457_cov_1.519774
[shovill] Removing low coverage contig (< 2 x): NODE_3879_length_457_cov_1.228814
[shovill] Removing low coverage contig (< 2 x): NODE_3886_length_456_cov_1.209632
[shovill] Removing low coverage contig (< 2 x): NODE_3888_length_456_cov_0.968839
[shovill] Removing low coverage contig (< 2 x): NODE_3883_length_456_cov_1.654391
[shovill] Removing low coverage contig (< 2 x): NODE_3884_length_456_cov_1.529745
[shovill] Removing low coverage contig (< 2 x): NODE_3889_length_456_cov_0.815864
[shovill] Removing low coverage contig (< 2 x): NODE_3885_length_456_cov_1.356941
[shovill] Removing low coverage contig (< 2 x): NODE_3887_length_456_cov_0.997167
[shovill] Removing low coverage contig (< 2 x): NODE_3893_length_455_cov_0.980114
[shovill] Removing low coverage contig (< 2 x): NODE_3891_length_455_cov_1.241477
[shovill] Removing low coverage contig (< 2 x): NODE_3892_length_455_cov_1.014205
[shovill] Removing low coverage contig (< 2 x): NODE_3900_length_454_cov_0.666667
[shovill] Removing low coverage contig (< 2 x): NODE_3897_length_454_cov_1.316239
[shovill] Removing low coverage contig (< 2 x): NODE_3898_length_454_cov_1.142450
[shovill] Removing low coverage contig (< 2 x): NODE_3899_length_454_cov_0.715100
[shovill] Removing low coverage contig (< 2 x): NODE_3896_length_454_cov_1.356125
[shovill] Removing low coverage contig (< 2 x): NODE_3904_length_453_cov_0.800000
[shovill] Removing low coverage contig (< 2 x): NODE_3903_length_453_cov_1.080000
[shovill] Removing low coverage contig (< 2 x): NODE_3905_length_453_cov_0.791429
[shovill] Removing low coverage contig (< 2 x): NODE_3906_length_453_cov_0.568571
[shovill] Removing low coverage contig (< 2 x): NODE_3902_length_453_cov_1.300000
[shovill] Removing low coverage contig (< 2 x): NODE_3912_length_452_cov_1.171920
[shovill] Removing low coverage contig (< 2 x): NODE_3910_length_452_cov_1.260745
[shovill] Removing low coverage contig (< 2 x): NODE_3911_length_452_cov_1.194842
[shovill] Removing low coverage contig (< 2 x): NODE_3908_length_452_cov_1.856734
[shovill] Removing low coverage contig (< 2 x): NODE_3907_length_452_cov_1.988539
[shovill] Removing low coverage contig (< 2 x): NODE_3913_length_452_cov_1.120344
[shovill] Removing low coverage contig (< 2 x): NODE_3909_length_452_cov_1.733524
[shovill] Removing low coverage contig (< 2 x): NODE_3921_length_451_cov_1.089080
[shovill] Removing low coverage contig (< 2 x): NODE_3915_length_451_cov_1.893678
[shovill] Removing low coverage contig (< 2 x): NODE_3920_length_451_cov_1.091954
[shovill] Removing low coverage contig (< 2 x): NODE_3923_length_451_cov_0.951149
[shovill] Removing low coverage contig (< 2 x): NODE_3916_length_451_cov_1.531609
[shovill] Removing low coverage contig (< 2 x): NODE_3919_length_451_cov_1.324713
[shovill] Removing low coverage contig (< 2 x): NODE_3917_length_451_cov_1.410920
[shovill] Removing low coverage contig (< 2 x): NODE_3924_length_451_cov_0.678161
[shovill] Removing low coverage contig (< 2 x): NODE_3922_length_451_cov_1.086207
[shovill] Removing low coverage contig (< 2 x): NODE_3918_length_451_cov_1.333333
[shovill] Removing low coverage contig (< 2 x): NODE_3928_length_450_cov_0.971182
[shovill] Removing low coverage contig (< 2 x): NODE_3926_length_450_cov_1.731988
[shovill] Removing low coverage contig (< 2 x): NODE_3927_length_450_cov_1.170029
[shovill] Removing low coverage contig (< 2 x): NODE_3931_length_449_cov_1.257225
[shovill] Removing low coverage contig (< 2 x): NODE_3935_length_449_cov_0.890173
[shovill] Removing low coverage contig (< 2 x): NODE_3930_length_449_cov_1.297688
[shovill] Removing low coverage contig (< 2 x): NODE_3933_length_449_cov_1.164740
[shovill] Removing low coverage contig (< 2 x): NODE_3934_length_449_cov_0.965318
[shovill] Removing low coverage contig (< 2 x): NODE_3932_length_449_cov_1.193642
[shovill] Removing low coverage contig (< 2 x): NODE_3938_length_448_cov_1.634783
[shovill] Removing low coverage contig (< 2 x): NODE_3936_length_448_cov_1.855072
[shovill] Removing low coverage contig (< 2 x): NODE_3942_length_448_cov_1.086957
[shovill] Removing low coverage contig (< 2 x): NODE_3937_length_448_cov_1.785507
[shovill] Removing low coverage contig (< 2 x): NODE_3943_length_448_cov_1.040580
[shovill] Removing low coverage contig (< 2 x): NODE_3939_length_448_cov_1.315942
[shovill] Removing low coverage contig (< 2 x): NODE_3941_length_448_cov_1.144928
[shovill] Removing low coverage contig (< 2 x): NODE_3940_length_448_cov_1.191304
[shovill] Removing low coverage contig (< 2 x): NODE_3954_length_447_cov_0.776163
[shovill] Removing low coverage contig (< 2 x): NODE_3951_length_447_cov_0.985465
[shovill] Removing low coverage contig (< 2 x): NODE_3953_length_447_cov_0.819767
[shovill] Removing low coverage contig (< 2 x): NODE_3948_length_447_cov_1.694767
[shovill] Removing low coverage contig (< 2 x): NODE_3947_length_447_cov_1.744186
[shovill] Removing low coverage contig (< 2 x): NODE_3955_length_447_cov_0.758721
[shovill] Removing low coverage contig (< 2 x): NODE_3949_length_447_cov_1.433140
[shovill] Removing low coverage contig (< 2 x): NODE_3950_length_447_cov_1.316860
[shovill] Removing low coverage contig (< 2 x): NODE_3952_length_447_cov_0.968023
[shovill] Removing low coverage contig (< 2 x): NODE_3967_length_446_cov_0.758017
[shovill] Removing low coverage contig (< 2 x): NODE_3962_length_446_cov_1.142857
[shovill] Removing low coverage contig (< 2 x): NODE_3963_length_446_cov_1.002915
[shovill] Removing low coverage contig (< 2 x): NODE_3966_length_446_cov_0.778426
[shovill] Removing low coverage contig (< 2 x): NODE_3957_length_446_cov_1.950437
[shovill] Removing low coverage contig (< 2 x): NODE_3964_length_446_cov_0.988338
[shovill] Removing low coverage contig (< 2 x): NODE_3958_length_446_cov_1.556851
[shovill] Removing low coverage contig (< 2 x): NODE_3961_length_446_cov_1.177843
[shovill] Removing low coverage contig (< 2 x): NODE_3959_length_446_cov_1.457726
[shovill] Removing low coverage contig (< 2 x): NODE_3965_length_446_cov_0.897959
[shovill] Removing low coverage contig (< 2 x): NODE_3960_length_446_cov_1.425656
[shovill] Removing low coverage contig (< 2 x): NODE_3970_length_445_cov_0.877193
[shovill] Removing low coverage contig (< 2 x): NODE_3969_length_445_cov_1.421053
[shovill] Removing low coverage contig (< 2 x): NODE_3971_length_445_cov_0.789474
[shovill] Removing low coverage contig (< 2 x): NODE_3974_length_444_cov_1.912023
[shovill] Removing low coverage contig (< 2 x): NODE_3982_length_444_cov_0.829912
[shovill] Removing low coverage contig (< 2 x): NODE_3979_length_444_cov_1.032258
[shovill] Removing low coverage contig (< 2 x): NODE_3981_length_444_cov_0.967742
[shovill] Removing low coverage contig (< 2 x): NODE_3978_length_444_cov_1.114370
[shovill] Removing low coverage contig (< 2 x): NODE_3976_length_444_cov_1.392962
[shovill] Removing low coverage contig (< 2 x): NODE_3983_length_444_cov_0.730205
[shovill] Removing low coverage contig (< 2 x): NODE_3980_length_444_cov_1.026393
[shovill] Removing low coverage contig (< 2 x): NODE_3973_length_444_cov_1.929619
[shovill] Removing low coverage contig (< 2 x): NODE_3977_length_444_cov_1.296188
[shovill] Removing low coverage contig (< 2 x): NODE_3975_length_444_cov_1.818182
[shovill] Removing low coverage contig (< 2 x): NODE_3989_length_443_cov_0.991176
[shovill] Removing low coverage contig (< 2 x): NODE_3987_length_443_cov_1.282353
[shovill] Removing low coverage contig (< 2 x): NODE_3985_length_443_cov_1.479412
[shovill] Removing low coverage contig (< 2 x): NODE_3990_length_443_cov_0.958824
[shovill] Removing low coverage contig (< 2 x): NODE_3991_length_443_cov_0.938235
[shovill] Removing low coverage contig (< 2 x): NODE_3988_length_443_cov_1.070588
[shovill] Removing low coverage contig (< 2 x): NODE_3992_length_443_cov_0.894118
[shovill] Removing low coverage contig (< 2 x): NODE_3986_length_443_cov_1.429412
[shovill] Removing low coverage contig (< 2 x): NODE_4001_length_442_cov_0.846608
[shovill] Removing low coverage contig (< 2 x): NODE_3996_length_442_cov_1.657817
[shovill] Removing low coverage contig (< 2 x): NODE_4003_length_442_cov_0.787611
[shovill] Removing low coverage contig (< 2 x): NODE_4000_length_442_cov_1.244838
[shovill] Removing low coverage contig (< 2 x): NODE_3997_length_442_cov_1.640118
[shovill] Removing low coverage contig (< 2 x): NODE_3999_length_442_cov_1.454277
[shovill] Removing low coverage contig (< 2 x): NODE_3998_length_442_cov_1.622419
[shovill] Removing low coverage contig (< 2 x): NODE_4002_length_442_cov_0.802360
[shovill] Removing low coverage contig (< 2 x): NODE_4006_length_441_cov_1.668639
[shovill] Removing low coverage contig (< 2 x): NODE_4009_length_441_cov_1.171598
[shovill] Removing low coverage contig (< 2 x): NODE_4010_length_441_cov_1.165680
[shovill] Removing low coverage contig (< 2 x): NODE_4008_length_441_cov_1.227811
[shovill] Removing low coverage contig (< 2 x): NODE_4007_length_441_cov_1.588757
[shovill] Removing low coverage contig (< 2 x): NODE_4013_length_441_cov_0.686391
[shovill] Removing low coverage contig (< 2 x): NODE_4012_length_441_cov_0.985207
[shovill] Removing low coverage contig (< 2 x): NODE_4011_length_441_cov_1.094675
[shovill] Removing low coverage contig (< 2 x): NODE_4016_length_440_cov_1.839763
[shovill] Removing low coverage contig (< 2 x): NODE_4019_length_440_cov_0.804154
[shovill] Removing low coverage contig (< 2 x): NODE_4020_length_440_cov_0.750742
[shovill] Removing low coverage contig (< 2 x): NODE_4017_length_440_cov_1.097923
[shovill] Removing low coverage contig (< 2 x): NODE_4018_length_440_cov_1.000000
[shovill] Removing low coverage contig (< 2 x): NODE_4023_length_439_cov_1.437500
[shovill] Removing low coverage contig (< 2 x): NODE_4024_length_439_cov_1.190476
[shovill] Removing low coverage contig (< 2 x): NODE_4026_length_439_cov_1.095238
[shovill] Removing low coverage contig (< 2 x): NODE_4028_length_439_cov_0.750000
[shovill] Removing low coverage contig (< 2 x): NODE_4025_length_439_cov_1.166667
[shovill] Removing low coverage contig (< 2 x): NODE_4027_length_439_cov_1.038690
[shovill] Removing low coverage contig (< 2 x): NODE_4022_length_439_cov_1.633929
[shovill] Removing low coverage contig (< 2 x): NODE_4030_length_438_cov_1.594030
[shovill] Removing low coverage contig (< 2 x): NODE_4035_length_438_cov_0.525373
[shovill] Removing low coverage contig (< 2 x): NODE_4031_length_438_cov_1.528358
[shovill] Removing low coverage contig (< 2 x): NODE_4032_length_438_cov_1.400000
[shovill] Removing low coverage contig (< 2 x): NODE_4034_length_438_cov_0.731343
[shovill] Removing low coverage contig (< 2 x): NODE_4033_length_438_cov_1.253731
[shovill] Removing low coverage contig (< 2 x): NODE_4041_length_437_cov_1.074850
[shovill] Removing low coverage contig (< 2 x): NODE_4042_length_437_cov_0.961078
[shovill] Removing low coverage contig (< 2 x): NODE_4038_length_437_cov_1.946108
[shovill] Removing low coverage contig (< 2 x): NODE_4039_length_437_cov_1.284431
[shovill] Removing low coverage contig (< 2 x): NODE_4043_length_437_cov_0.820359
[shovill] Removing low coverage contig (< 2 x): NODE_4040_length_437_cov_1.095808
[shovill] Removing low coverage contig (< 2 x): NODE_4046_length_436_cov_1.549550
[shovill] Removing low coverage contig (< 2 x): NODE_4044_length_436_cov_1.729730
[shovill] Removing low coverage contig (< 2 x): NODE_4047_length_436_cov_1.465465
[shovill] Removing low coverage contig (< 2 x): NODE_4045_length_436_cov_1.726727
[shovill] Removing low coverage contig (< 2 x): NODE_4048_length_436_cov_1.207207
[shovill] Removing low coverage contig (< 2 x): NODE_4056_length_435_cov_0.786145
[shovill] Removing low coverage contig (< 2 x): NODE_4053_length_435_cov_1.105422
[shovill] Removing low coverage contig (< 2 x): NODE_4052_length_435_cov_1.219880
[shovill] Removing low coverage contig (< 2 x): NODE_4055_length_435_cov_0.966867
[shovill] Removing low coverage contig (< 2 x): NODE_4051_length_435_cov_1.240964
[shovill] Removing low coverage contig (< 2 x): NODE_4054_length_435_cov_0.993976
[shovill] Removing low coverage contig (< 2 x): NODE_4067_length_434_cov_0.622356
[shovill] Removing low coverage contig (< 2 x): NODE_4059_length_434_cov_1.734139
[shovill] Removing low coverage contig (< 2 x): NODE_4060_length_434_cov_1.546828
[shovill] Removing low coverage contig (< 2 x): NODE_4062_length_434_cov_1.537764
[shovill] Removing low coverage contig (< 2 x): NODE_4064_length_434_cov_1.362538
[shovill] Removing low coverage contig (< 2 x): NODE_4065_length_434_cov_1.048338
[shovill] Removing low coverage contig (< 2 x): NODE_4061_length_434_cov_1.543807
[shovill] Removing low coverage contig (< 2 x): NODE_4066_length_434_cov_1.024169
[shovill] Removing low coverage contig (< 2 x): NODE_4063_length_434_cov_1.525680
[shovill] Removing low coverage contig (< 2 x): NODE_4069_length_433_cov_1.669697
[shovill] Removing low coverage contig (< 2 x): NODE_4076_length_433_cov_0.921212
[shovill] Removing low coverage contig (< 2 x): NODE_4068_length_433_cov_1.733333
[shovill] Removing low coverage contig (< 2 x): NODE_4070_length_433_cov_1.569697
[shovill] Removing low coverage contig (< 2 x): NODE_4071_length_433_cov_1.412121
[shovill] Removing low coverage contig (< 2 x): NODE_4073_length_433_cov_1.121212
[shovill] Removing low coverage contig (< 2 x): NODE_4077_length_433_cov_0.903030
[shovill] Removing low coverage contig (< 2 x): NODE_4075_length_433_cov_0.987879
[shovill] Removing low coverage contig (< 2 x): NODE_4074_length_433_cov_1.072727
[shovill] Removing low coverage contig (< 2 x): NODE_4072_length_433_cov_1.184848
[shovill] Removing low coverage contig (< 2 x): NODE_4084_length_432_cov_1.100304
[shovill] Removing low coverage contig (< 2 x): NODE_4080_length_432_cov_1.765957
[shovill] Removing low coverage contig (< 2 x): NODE_4078_length_432_cov_1.939210
[shovill] Removing low coverage contig (< 2 x): NODE_4081_length_432_cov_1.601824
[shovill] Removing low coverage contig (< 2 x): NODE_4085_length_432_cov_0.841945
[shovill] Removing low coverage contig (< 2 x): NODE_4083_length_432_cov_1.118541
[shovill] Removing low coverage contig (< 2 x): NODE_4079_length_432_cov_1.881459
[shovill] Removing low coverage contig (< 2 x): NODE_4082_length_432_cov_1.589666
[shovill] Removing low coverage contig (< 2 x): NODE_4088_length_431_cov_1.515244
[shovill] Removing low coverage contig (< 2 x): NODE_4087_length_431_cov_1.905488
[shovill] Removing low coverage contig (< 2 x): NODE_4090_length_431_cov_0.945122
[shovill] Removing low coverage contig (< 2 x): NODE_4086_length_431_cov_1.935976
[shovill] Removing low coverage contig (< 2 x): NODE_4089_length_431_cov_1.195122
[shovill] Removing low coverage contig (< 2 x): NODE_4092_length_430_cov_1.290520
[shovill] Removing low coverage contig (< 2 x): NODE_4093_length_430_cov_1.061162
[shovill] Removing low coverage contig (< 2 x): NODE_4097_length_430_cov_0.804281
[shovill] Removing low coverage contig (< 2 x): NODE_4094_length_430_cov_0.984709
[shovill] Removing low coverage contig (< 2 x): NODE_4095_length_430_cov_0.981651
[shovill] Removing low coverage contig (< 2 x): NODE_4096_length_430_cov_0.944954
[shovill] Removing low coverage contig (< 2 x): NODE_4098_length_430_cov_0.804281
[shovill] Removing low coverage contig (< 2 x): NODE_4091_length_430_cov_1.480122
[shovill] Removing low coverage contig (< 2 x): NODE_4104_length_429_cov_1.361963
[shovill] Removing low coverage contig (< 2 x): NODE_4102_length_429_cov_1.684049
[shovill] Removing low coverage contig (< 2 x): NODE_4107_length_429_cov_0.941718
[shovill] Removing low coverage contig (< 2 x): NODE_4101_length_429_cov_1.868098
[shovill] Removing low coverage contig (< 2 x): NODE_4105_length_429_cov_1.260736
[shovill] Removing low coverage contig (< 2 x): NODE_4103_length_429_cov_1.530675
[shovill] Removing low coverage contig (< 2 x): NODE_4106_length_429_cov_1.211656
[shovill] Removing low coverage contig (< 2 x): NODE_4110_length_428_cov_1.710769
[shovill] Removing low coverage contig (< 2 x): NODE_4109_length_428_cov_1.929231
[shovill] Removing low coverage contig (< 2 x): NODE_4111_length_428_cov_1.547692
[shovill] Removing low coverage contig (< 2 x): NODE_4114_length_428_cov_1.003077
[shovill] Removing low coverage contig (< 2 x): NODE_4113_length_428_cov_1.095385
[shovill] Removing low coverage contig (< 2 x): NODE_4112_length_428_cov_1.400000
[shovill] Removing low coverage contig (< 2 x): NODE_4115_length_427_cov_1.410494
[shovill] Removing low coverage contig (< 2 x): NODE_4120_length_427_cov_0.820988
[shovill] Removing low coverage contig (< 2 x): NODE_4116_length_427_cov_1.228395
[shovill] Removing low coverage contig (< 2 x): NODE_4121_length_427_cov_0.413580
[shovill] Removing low coverage contig (< 2 x): NODE_4119_length_427_cov_0.993827
[shovill] Removing low coverage contig (< 2 x): NODE_4118_length_427_cov_1.055556
[shovill] Removing low coverage contig (< 2 x): NODE_4117_length_427_cov_1.191358
[shovill] Removing low coverage contig (< 2 x): NODE_4128_length_426_cov_1.458204
[shovill] Removing low coverage contig (< 2 x): NODE_4129_length_426_cov_1.306502
[shovill] Removing low coverage contig (< 2 x): NODE_4125_length_426_cov_1.984520
[shovill] Removing low coverage contig (< 2 x): NODE_4126_length_426_cov_1.826625
[shovill] Removing low coverage contig (< 2 x): NODE_4127_length_426_cov_1.513932
[shovill] Removing low coverage contig (< 2 x): NODE_4133_length_425_cov_1.295031
[shovill] Removing low coverage contig (< 2 x): NODE_4132_length_425_cov_1.354037
[shovill] Removing low coverage contig (< 2 x): NODE_4135_length_425_cov_0.913043
[shovill] Removing low coverage contig (< 2 x): NODE_4131_length_425_cov_1.434783
[shovill] Removing low coverage contig (< 2 x): NODE_4134_length_425_cov_0.968944
[shovill] Removing low coverage contig (< 2 x): NODE_4130_length_425_cov_1.453416
[shovill] Removing low coverage contig (< 2 x): NODE_4139_length_424_cov_1.632399
[shovill] Removing low coverage contig (< 2 x): NODE_4146_length_424_cov_0.635514
[shovill] Removing low coverage contig (< 2 x): NODE_4140_length_424_cov_1.258567
[shovill] Removing low coverage contig (< 2 x): NODE_4141_length_424_cov_1.071651
[shovill] Removing low coverage contig (< 2 x): NODE_4142_length_424_cov_0.975078
[shovill] Removing low coverage contig (< 2 x): NODE_4145_length_424_cov_0.794393
[shovill] Removing low coverage contig (< 2 x): NODE_4143_length_424_cov_0.912773
[shovill] Removing low coverage contig (< 2 x): NODE_4144_length_424_cov_0.856698
[shovill] Removing low coverage contig (< 2 x): NODE_4137_length_424_cov_1.900312
[shovill] Removing low coverage contig (< 2 x): NODE_4138_length_424_cov_1.785047
[shovill] Removing low coverage contig (< 2 x): NODE_4149_length_423_cov_1.059375
[shovill] Removing low coverage contig (< 2 x): NODE_4151_length_423_cov_0.953125
[shovill] Removing low coverage contig (< 2 x): NODE_4150_length_423_cov_0.978125
[shovill] Removing low coverage contig (< 2 x): NODE_4152_length_423_cov_0.825000
[shovill] Removing low coverage contig (< 2 x): NODE_4148_length_423_cov_1.340625
[shovill] Removing low coverage contig (< 2 x): NODE_4157_length_422_cov_1.921630
[shovill] Removing low coverage contig (< 2 x): NODE_4161_length_422_cov_1.664577
[shovill] Removing low coverage contig (< 2 x): NODE_4163_length_422_cov_0.946708
[shovill] Removing low coverage contig (< 2 x): NODE_4159_length_422_cov_1.827586
[shovill] Removing low coverage contig (< 2 x): NODE_4162_length_422_cov_1.115987
[shovill] Removing low coverage contig (< 2 x): NODE_4160_length_422_cov_1.673981
[shovill] Removing low coverage contig (< 2 x): NODE_4158_length_422_cov_1.840125
[shovill] Removing low coverage contig (< 2 x): NODE_4164_length_422_cov_0.727273
[shovill] Removing low coverage contig (< 2 x): NODE_4176_length_421_cov_1.040881
[shovill] Removing low coverage contig (< 2 x): NODE_4167_length_421_cov_1.723270
[shovill] Removing low coverage contig (< 2 x): NODE_4177_length_421_cov_0.855346
[shovill] Removing low coverage contig (< 2 x): NODE_4173_length_421_cov_1.182390
[shovill] Removing low coverage contig (< 2 x): NODE_4178_length_421_cov_0.849057
[shovill] Removing low coverage contig (< 2 x): NODE_4179_length_421_cov_0.833333
[shovill] Removing low coverage contig (< 2 x): NODE_4171_length_421_cov_1.383648
[shovill] Removing low coverage contig (< 2 x): NODE_4174_length_421_cov_1.150943
[shovill] Removing low coverage contig (< 2 x): NODE_4168_length_421_cov_1.606918
[shovill] Removing low coverage contig (< 2 x): NODE_4169_length_421_cov_1.581761
[shovill] Removing low coverage contig (< 2 x): NODE_4175_length_421_cov_1.056604
[shovill] Removing low coverage contig (< 2 x): NODE_4170_length_421_cov_1.418239
[shovill] Removing low coverage contig (< 2 x): NODE_4172_length_421_cov_1.342767
[shovill] Removing low coverage contig (< 2 x): NODE_4181_length_420_cov_1.687697
[shovill] Removing low coverage contig (< 2 x): NODE_4184_length_420_cov_1.044164
[shovill] Removing low coverage contig (< 2 x): NODE_4185_length_420_cov_0.883281
[shovill] Removing low coverage contig (< 2 x): NODE_4182_length_420_cov_1.504732
[shovill] Removing low coverage contig (< 2 x): NODE_4180_length_420_cov_1.779180
[shovill] Removing low coverage contig (< 2 x): NODE_4183_length_420_cov_1.116719
[shovill] Removing low coverage contig (< 2 x): NODE_4190_length_419_cov_1.433544
[shovill] Removing low coverage contig (< 2 x): NODE_4197_length_419_cov_0.563291
[shovill] Removing low coverage contig (< 2 x): NODE_4194_length_419_cov_0.946203
[shovill] Removing low coverage contig (< 2 x): NODE_4193_length_419_cov_1.325949
[shovill] Removing low coverage contig (< 2 x): NODE_4192_length_419_cov_1.373418
[shovill] Removing low coverage contig (< 2 x): NODE_4191_length_419_cov_1.424051
[shovill] Removing low coverage contig (< 2 x): NODE_4195_length_419_cov_0.607595
[shovill] Removing low coverage contig (< 2 x): NODE_4196_length_419_cov_0.569620
[shovill] Removing low coverage contig (< 2 x): NODE_4203_length_418_cov_0.996825
[shovill] Removing low coverage contig (< 2 x): NODE_4201_length_418_cov_1.361905
[shovill] Removing low coverage contig (< 2 x): NODE_4205_length_418_cov_0.758730
[shovill] Removing low coverage contig (< 2 x): NODE_4200_length_418_cov_1.526984
[shovill] Removing low coverage contig (< 2 x): NODE_4199_length_418_cov_1.796825
[shovill] Removing low coverage contig (< 2 x): NODE_4202_length_418_cov_1.323810
[shovill] Removing low coverage contig (< 2 x): NODE_4204_length_418_cov_0.888889
[shovill] Removing low coverage contig (< 2 x): NODE_4209_length_417_cov_1.277070
[shovill] Removing low coverage contig (< 2 x): NODE_4212_length_417_cov_0.882166
[shovill] Removing low coverage contig (< 2 x): NODE_4213_length_417_cov_0.815287
[shovill] Removing low coverage contig (< 2 x): NODE_4215_length_417_cov_0.738854
[shovill] Removing low coverage contig (< 2 x): NODE_4210_length_417_cov_1.162420
[shovill] Removing low coverage contig (< 2 x): NODE_4211_length_417_cov_0.977707
[shovill] Removing low coverage contig (< 2 x): NODE_4216_length_417_cov_0.538217
[shovill] Removing low coverage contig (< 2 x): NODE_4214_length_417_cov_0.808917
[shovill] Removing low coverage contig (< 2 x): NODE_4227_length_416_cov_0.760383
[shovill] Removing low coverage contig (< 2 x): NODE_4225_length_416_cov_1.220447
[shovill] Removing low coverage contig (< 2 x): NODE_4221_length_416_cov_1.910543
[shovill] Removing low coverage contig (< 2 x): NODE_4223_length_416_cov_1.623003
[shovill] Removing low coverage contig (< 2 x): NODE_4222_length_416_cov_1.629393
[shovill] Removing low coverage contig (< 2 x): NODE_4224_length_416_cov_1.616613
[shovill] Removing low coverage contig (< 2 x): NODE_4226_length_416_cov_0.789137
[shovill] Removing low coverage contig (< 2 x): NODE_4238_length_415_cov_0.679487
[shovill] Removing low coverage contig (< 2 x): NODE_4229_length_415_cov_1.541667
[shovill] Removing low coverage contig (< 2 x): NODE_4232_length_415_cov_1.326923
[shovill] Removing low coverage contig (< 2 x): NODE_4233_length_415_cov_1.278846
[shovill] Removing low coverage contig (< 2 x): NODE_4230_length_415_cov_1.397436
[shovill] Removing low coverage contig (< 2 x): NODE_4231_length_415_cov_1.365385
[shovill] Removing low coverage contig (< 2 x): NODE_4235_length_415_cov_1.080128
[shovill] Removing low coverage contig (< 2 x): NODE_4234_length_415_cov_1.153846
[shovill] Removing low coverage contig (< 2 x): NODE_4237_length_415_cov_0.727564
[shovill] Removing low coverage contig (< 2 x): NODE_4236_length_415_cov_0.948718
[shovill] Removing low coverage contig (< 2 x): NODE_4245_length_414_cov_0.749196
[shovill] Removing low coverage contig (< 2 x): NODE_4243_length_414_cov_0.890675
[shovill] Removing low coverage contig (< 2 x): NODE_4244_length_414_cov_0.800643
[shovill] Removing low coverage contig (< 2 x): NODE_4241_length_414_cov_1.369775
[shovill] Removing low coverage contig (< 2 x): NODE_4240_length_414_cov_1.633441
[shovill] Removing low coverage contig (< 2 x): NODE_4239_length_414_cov_1.942122
[shovill] Removing low coverage contig (< 2 x): NODE_4242_length_414_cov_1.118971
[shovill] Removing low coverage contig (< 2 x): NODE_4249_length_413_cov_1.403226
[shovill] Removing low coverage contig (< 2 x): NODE_4250_length_413_cov_1.383871
[shovill] Removing low coverage contig (< 2 x): NODE_4247_length_413_cov_1.693548
[shovill] Removing low coverage contig (< 2 x): NODE_4248_length_413_cov_1.606452
[shovill] Removing low coverage contig (< 2 x): NODE_4252_length_413_cov_0.845161
[shovill] Removing low coverage contig (< 2 x): NODE_4251_length_413_cov_1.229032
[shovill] Removing low coverage contig (< 2 x): NODE_4255_length_412_cov_1.362460
[shovill] Removing low coverage contig (< 2 x): NODE_4258_length_412_cov_1.084142
[shovill] Removing low coverage contig (< 2 x): NODE_4260_length_412_cov_0.789644
[shovill] Removing low coverage contig (< 2 x): NODE_4257_length_412_cov_1.161812
[shovill] Removing low coverage contig (< 2 x): NODE_4259_length_412_cov_0.961165
[shovill] Removing low coverage contig (< 2 x): NODE_4256_length_412_cov_1.171521
[shovill] Removing low coverage contig (< 2 x): NODE_4253_length_412_cov_1.922330
[shovill] Removing low coverage contig (< 2 x): NODE_4254_length_412_cov_1.546926
[shovill] Removing low coverage contig (< 2 x): NODE_4265_length_411_cov_1.490260
[shovill] Removing low coverage contig (< 2 x): NODE_4263_length_411_cov_1.931818
[shovill] Removing low coverage contig (< 2 x): NODE_4266_length_411_cov_1.311688
[shovill] Removing low coverage contig (< 2 x): NODE_4264_length_411_cov_1.711039
[shovill] Removing low coverage contig (< 2 x): NODE_4267_length_411_cov_1.090909
[shovill] Removing low coverage contig (< 2 x): NODE_4268_length_411_cov_0.724026
[shovill] Removing low coverage contig (< 2 x): NODE_4273_length_410_cov_1.315961
[shovill] Removing low coverage contig (< 2 x): NODE_4271_length_410_cov_1.416938
[shovill] Removing low coverage contig (< 2 x): NODE_4272_length_410_cov_1.332248
[shovill] Removing low coverage contig (< 2 x): NODE_4274_length_410_cov_1.172638
[shovill] Removing low coverage contig (< 2 x): NODE_4276_length_410_cov_0.947883
[shovill] Removing low coverage contig (< 2 x): NODE_4275_length_410_cov_1.114007
[shovill] Removing low coverage contig (< 2 x): NODE_4277_length_409_cov_1.715686
[shovill] Removing low coverage contig (< 2 x): NODE_4279_length_409_cov_1.408497
[shovill] Removing low coverage contig (< 2 x): NODE_4282_length_409_cov_0.669935
[shovill] Removing low coverage contig (< 2 x): NODE_4280_length_409_cov_1.225490
[shovill] Removing low coverage contig (< 2 x): NODE_4278_length_409_cov_1.415033
[shovill] Removing low coverage contig (< 2 x): NODE_4281_length_409_cov_0.738562
[shovill] Removing low coverage contig (< 2 x): NODE_4286_length_408_cov_1.580328
[shovill] Removing low coverage contig (< 2 x): NODE_4284_length_408_cov_1.868852
[shovill] Removing low coverage contig (< 2 x): NODE_4285_length_408_cov_1.845902
[shovill] Removing low coverage contig (< 2 x): NODE_4293_length_408_cov_0.839344
[shovill] Removing low coverage contig (< 2 x): NODE_4292_length_408_cov_0.859016
[shovill] Removing low coverage contig (< 2 x): NODE_4287_length_408_cov_1.383607
[shovill] Removing low coverage contig (< 2 x): NODE_4288_length_408_cov_1.327869
[shovill] Removing low coverage contig (< 2 x): NODE_4290_length_408_cov_1.026230
[shovill] Removing low coverage contig (< 2 x): NODE_4289_length_408_cov_1.275410
[shovill] Removing low coverage contig (< 2 x): NODE_4296_length_408_cov_0.672131
[shovill] Removing low coverage contig (< 2 x): NODE_4294_length_408_cov_0.790164
[shovill] Removing low coverage contig (< 2 x): NODE_4295_length_408_cov_0.704918
[shovill] Removing low coverage contig (< 2 x): NODE_4291_length_408_cov_1.022951
[shovill] Removing low coverage contig (< 2 x): NODE_4300_length_407_cov_1.026316
[shovill] Removing low coverage contig (< 2 x): NODE_4301_length_407_cov_0.871711
[shovill] Removing low coverage contig (< 2 x): NODE_4299_length_407_cov_1.430921
[shovill] Removing low coverage contig (< 2 x): NODE_4298_length_407_cov_1.690789
[shovill] Removing low coverage contig (< 2 x): NODE_4310_length_406_cov_0.825083
[shovill] Removing low coverage contig (< 2 x): NODE_4307_length_406_cov_1.577558
[shovill] Removing low coverage contig (< 2 x): NODE_4309_length_406_cov_0.993399
[shovill] Removing low coverage contig (< 2 x): NODE_4306_length_406_cov_1.996700
[shovill] Removing low coverage contig (< 2 x): NODE_4308_length_406_cov_1.495050
[shovill] Removing low coverage contig (< 2 x): NODE_4315_length_405_cov_1.039735
[shovill] Removing low coverage contig (< 2 x): NODE_4316_length_405_cov_1.003311
[shovill] Removing low coverage contig (< 2 x): NODE_4317_length_405_cov_0.824503
[shovill] Removing low coverage contig (< 2 x): NODE_4312_length_405_cov_1.662252
[shovill] Removing low coverage contig (< 2 x): NODE_4318_length_405_cov_0.698675
[shovill] Removing low coverage contig (< 2 x): NODE_4314_length_405_cov_1.473510
[shovill] Removing low coverage contig (< 2 x): NODE_4313_length_405_cov_1.622517
[shovill] Removing low coverage contig (< 2 x): NODE_4321_length_404_cov_1.790698
[shovill] Removing low coverage contig (< 2 x): NODE_4323_length_404_cov_1.192691
[shovill] Removing low coverage contig (< 2 x): NODE_4326_length_404_cov_0.764120
[shovill] Removing low coverage contig (< 2 x): NODE_4320_length_404_cov_1.970100
[shovill] Removing low coverage contig (< 2 x): NODE_4325_length_404_cov_0.867110
[shovill] Removing low coverage contig (< 2 x): NODE_4322_length_404_cov_1.498339
[shovill] Removing low coverage contig (< 2 x): NODE_4324_length_404_cov_1.152824
[shovill] Removing low coverage contig (< 2 x): NODE_4329_length_403_cov_1.643333
[shovill] Removing low coverage contig (< 2 x): NODE_4331_length_403_cov_1.110000
[shovill] Removing low coverage contig (< 2 x): NODE_4335_length_403_cov_0.570000
[shovill] Removing low coverage contig (< 2 x): NODE_4333_length_403_cov_1.090000
[shovill] Removing low coverage contig (< 2 x): NODE_4332_length_403_cov_1.093333
[shovill] Removing low coverage contig (< 2 x): NODE_4330_length_403_cov_1.266667
[shovill] Removing low coverage contig (< 2 x): NODE_4334_length_403_cov_0.663333
[shovill] Removing low coverage contig (< 2 x): NODE_4327_length_403_cov_1.946667
[shovill] Removing low coverage contig (< 2 x): NODE_4328_length_403_cov_1.870000
[shovill] Removing low coverage contig (< 2 x): NODE_4343_length_402_cov_1.013378
[shovill] Removing low coverage contig (< 2 x): NODE_4338_length_402_cov_1.989967
[shovill] Removing low coverage contig (< 2 x): NODE_4339_length_402_cov_1.461538
[shovill] Removing low coverage contig (< 2 x): NODE_4340_length_402_cov_1.444816
[shovill] Removing low coverage contig (< 2 x): NODE_4347_length_402_cov_0.812709
[shovill] Removing low coverage contig (< 2 x): NODE_4346_length_402_cov_0.929766
[shovill] Removing low coverage contig (< 2 x): NODE_4348_length_402_cov_0.692308
[shovill] Removing low coverage contig (< 2 x): NODE_4344_length_402_cov_0.983278
[shovill] Removing low coverage contig (< 2 x): NODE_4342_length_402_cov_1.046823
[shovill] Removing low coverage contig (< 2 x): NODE_4341_length_402_cov_1.414716
[shovill] Removing low coverage contig (< 2 x): NODE_4345_length_402_cov_0.966555
[shovill] Removing low coverage contig (< 2 x): NODE_4354_length_401_cov_0.661074
[shovill] Removing low coverage contig (< 2 x): NODE_4352_length_401_cov_1.281879
[shovill] Removing low coverage contig (< 2 x): NODE_4351_length_401_cov_1.765101
[shovill] Removing low coverage contig (< 2 x): NODE_4353_length_401_cov_1.107383
[shovill] Removing low coverage contig (< 2 x): NODE_4367_length_400_cov_0.855219
[shovill] Removing low coverage contig (< 2 x): NODE_4363_length_400_cov_1.178451
[shovill] Removing low coverage contig (< 2 x): NODE_4364_length_400_cov_1.158249
[shovill] Removing low coverage contig (< 2 x): NODE_4359_length_400_cov_1.481481
[shovill] Removing low coverage contig (< 2 x): NODE_4368_length_400_cov_0.804714
[shovill] Removing low coverage contig (< 2 x): NODE_4369_length_400_cov_0.750842
[shovill] Removing low coverage contig (< 2 x): NODE_4361_length_400_cov_1.350168
[shovill] Removing low coverage contig (< 2 x): NODE_4358_length_400_cov_1.484848
[shovill] Removing low coverage contig (< 2 x): NODE_4365_length_400_cov_1.080808
[shovill] Removing low coverage contig (< 2 x): NODE_4362_length_400_cov_1.245791
[shovill] Removing low coverage contig (< 2 x): NODE_4360_length_400_cov_1.444444
[shovill] Removing low coverage contig (< 2 x): NODE_4356_length_400_cov_1.663300
[shovill] Removing low coverage contig (< 2 x): NODE_4357_length_400_cov_1.602694
[shovill] Removing low coverage contig (< 2 x): NODE_4370_length_400_cov_0.703704
[shovill] Removing low coverage contig (< 2 x): NODE_4355_length_400_cov_1.993266
[shovill] Removing low coverage contig (< 2 x): NODE_4366_length_400_cov_0.932660
[shovill] Removing low coverage contig (< 2 x): NODE_4372_length_399_cov_1.162162
[shovill] Removing low coverage contig (< 2 x): NODE_4373_length_399_cov_1.155405
[shovill] Removing low coverage contig (< 2 x): NODE_4374_length_399_cov_0.956081
[shovill] Removing low coverage contig (< 2 x): NODE_4376_length_398_cov_1.501695
[shovill] Removing low coverage contig (< 2 x): NODE_4380_length_398_cov_1.030508
[shovill] Removing low coverage contig (< 2 x): NODE_4381_length_398_cov_0.830508
[shovill] Removing low coverage contig (< 2 x): NODE_4383_length_398_cov_0.738983
[shovill] Removing low coverage contig (< 2 x): NODE_4377_length_398_cov_1.450847
[shovill] Removing low coverage contig (< 2 x): NODE_4378_length_398_cov_1.094915
[shovill] Removing low coverage contig (< 2 x): NODE_4379_length_398_cov_1.094915
[shovill] Removing low coverage contig (< 2 x): NODE_4382_length_398_cov_0.789831
[shovill] Removing low coverage contig (< 2 x): NODE_4384_length_398_cov_0.732203
[shovill] Removing low coverage contig (< 2 x): NODE_4390_length_397_cov_1.068027
[shovill] Removing low coverage contig (< 2 x): NODE_4391_length_397_cov_0.908163
[shovill] Removing low coverage contig (< 2 x): NODE_4389_length_397_cov_1.343537
[shovill] Removing low coverage contig (< 2 x): NODE_4388_length_397_cov_1.496599
[shovill] Removing low coverage contig (< 2 x): NODE_4392_length_397_cov_0.455782
[shovill] Removing low coverage contig (< 2 x): NODE_4398_length_396_cov_1.122867
[shovill] Removing low coverage contig (< 2 x): NODE_4396_length_396_cov_1.307167
[shovill] Removing low coverage contig (< 2 x): NODE_4397_length_396_cov_1.225256
[shovill] Removing low coverage contig (< 2 x): NODE_4395_length_396_cov_1.477816
[shovill] Removing low coverage contig (< 2 x): NODE_4399_length_396_cov_1.119454
[shovill] Removing low coverage contig (< 2 x): NODE_4400_length_396_cov_1.047782
[shovill] Removing low coverage contig (< 2 x): NODE_4404_length_395_cov_1.780822
[shovill] Removing low coverage contig (< 2 x): NODE_4407_length_395_cov_0.732877
[shovill] Removing low coverage contig (< 2 x): NODE_4403_length_395_cov_1.982877
[shovill] Removing low coverage contig (< 2 x): NODE_4405_length_395_cov_1.102740
[shovill] Removing low coverage contig (< 2 x): NODE_4406_length_395_cov_1.034247
[shovill] Removing low coverage contig (< 2 x): NODE_4408_length_394_cov_1.512027
[shovill] Removing low coverage contig (< 2 x): NODE_4415_length_394_cov_0.522337
[shovill] Removing low coverage contig (< 2 x): NODE_4412_length_394_cov_0.841924
[shovill] Removing low coverage contig (< 2 x): NODE_4413_length_394_cov_0.790378
[shovill] Removing low coverage contig (< 2 x): NODE_4410_length_394_cov_0.955326
[shovill] Removing low coverage contig (< 2 x): NODE_4414_length_394_cov_0.786942
[shovill] Removing low coverage contig (< 2 x): NODE_4411_length_394_cov_0.886598
[shovill] Removing low coverage contig (< 2 x): NODE_4409_length_394_cov_1.144330
[shovill] Removing low coverage contig (< 2 x): NODE_4416_length_394_cov_0.439863
[shovill] Removing low coverage contig (< 2 x): NODE_4419_length_393_cov_1.148276
[shovill] Removing low coverage contig (< 2 x): NODE_4417_length_393_cov_1.679310
[shovill] Removing low coverage contig (< 2 x): NODE_4422_length_393_cov_0.875862
[shovill] Removing low coverage contig (< 2 x): NODE_4418_length_393_cov_1.182759
[shovill] Removing low coverage contig (< 2 x): NODE_4420_length_393_cov_1.124138
[shovill] Removing low coverage contig (< 2 x): NODE_4423_length_393_cov_0.806897
[shovill] Removing low coverage contig (< 2 x): NODE_4424_length_393_cov_0.775862
[shovill] Removing low coverage contig (< 2 x): NODE_4421_length_393_cov_0.910345
[shovill] Removing low coverage contig (< 2 x): NODE_4429_length_392_cov_1.892734
[shovill] Removing low coverage contig (< 2 x): NODE_4428_length_392_cov_1.972318
[shovill] Removing low coverage contig (< 2 x): NODE_4435_length_392_cov_1.477509
[shovill] Removing low coverage contig (< 2 x): NODE_4434_length_392_cov_1.487889
[shovill] Removing low coverage contig (< 2 x): NODE_4433_length_392_cov_1.491349
[shovill] Removing low coverage contig (< 2 x): NODE_4438_length_392_cov_0.965398
[shovill] Removing low coverage contig (< 2 x): NODE_4436_length_392_cov_1.432526
[shovill] Removing low coverage contig (< 2 x): NODE_4431_length_392_cov_1.643599
[shovill] Removing low coverage contig (< 2 x): NODE_4430_length_392_cov_1.650519
[shovill] Removing low coverage contig (< 2 x): NODE_4432_length_392_cov_1.564014
[shovill] Removing low coverage contig (< 2 x): NODE_4437_length_392_cov_1.429066
[shovill] Removing low coverage contig (< 2 x): NODE_4440_length_391_cov_1.791667
[shovill] Removing low coverage contig (< 2 x): NODE_4444_length_391_cov_1.159722
[shovill] Removing low coverage contig (< 2 x): NODE_4445_length_391_cov_1.152778
[shovill] Removing low coverage contig (< 2 x): NODE_4442_length_391_cov_1.451389
[shovill] Removing low coverage contig (< 2 x): NODE_4446_length_391_cov_1.125000
[shovill] Removing low coverage contig (< 2 x): NODE_4441_length_391_cov_1.781250
[shovill] Removing low coverage contig (< 2 x): NODE_4443_length_391_cov_1.166667
[shovill] Removing low coverage contig (< 2 x): NODE_4447_length_391_cov_0.965278
[shovill] Removing low coverage contig (< 2 x): NODE_4451_length_390_cov_1.930314
[shovill] Removing low coverage contig (< 2 x): NODE_4453_length_390_cov_1.296167
[shovill] Removing low coverage contig (< 2 x): NODE_4457_length_390_cov_0.993031
[shovill] Removing low coverage contig (< 2 x): NODE_4452_length_390_cov_1.710801
[shovill] Removing low coverage contig (< 2 x): NODE_4454_length_390_cov_1.073171
[shovill] Removing low coverage contig (< 2 x): NODE_4456_length_390_cov_1.017422
[shovill] Removing low coverage contig (< 2 x): NODE_4455_length_390_cov_1.045296
[shovill] Removing low coverage contig (< 2 x): NODE_4459_length_390_cov_0.613240
[shovill] Removing low coverage contig (< 2 x): NODE_4458_length_390_cov_0.923345
[shovill] Removing low coverage contig (< 2 x): NODE_4461_length_389_cov_1.643357
[shovill] Removing low coverage contig (< 2 x): NODE_4460_length_389_cov_1.888112
[shovill] Removing low coverage contig (< 2 x): NODE_4470_length_389_cov_1.034965
[shovill] Removing low coverage contig (< 2 x): NODE_4473_length_389_cov_0.919580
[shovill] Removing low coverage contig (< 2 x): NODE_4466_length_389_cov_1.059441
[shovill] Removing low coverage contig (< 2 x): NODE_4462_length_389_cov_1.181818
[shovill] Removing low coverage contig (< 2 x): NODE_4474_length_389_cov_0.723776
[shovill] Removing low coverage contig (< 2 x): NODE_4463_length_389_cov_1.181818
[shovill] Removing low coverage contig (< 2 x): NODE_4464_length_389_cov_1.167832
[shovill] Removing low coverage contig (< 2 x): NODE_4465_length_389_cov_1.097902
[shovill] Removing low coverage contig (< 2 x): NODE_4472_length_389_cov_0.982517
[shovill] Removing low coverage contig (< 2 x): NODE_4469_length_389_cov_1.038462
[shovill] Removing low coverage contig (< 2 x): NODE_4471_length_389_cov_1.024476
[shovill] Removing low coverage contig (< 2 x): NODE_4468_length_389_cov_1.038462
[shovill] Removing low coverage contig (< 2 x): NODE_4467_length_389_cov_1.045455
[shovill] Removing low coverage contig (< 2 x): NODE_4478_length_388_cov_1.301754
[shovill] Removing low coverage contig (< 2 x): NODE_4476_length_388_cov_1.782456
[shovill] Removing low coverage contig (< 2 x): NODE_4479_length_388_cov_1.238596
[shovill] Removing low coverage contig (< 2 x): NODE_4477_length_388_cov_1.326316
[shovill] Removing low coverage contig (< 2 x): NODE_4480_length_388_cov_0.550877
[shovill] Removing low coverage contig (< 2 x): NODE_4488_length_387_cov_0.919014
[shovill] Removing low coverage contig (< 2 x): NODE_4489_length_387_cov_0.873239
[shovill] Removing low coverage contig (< 2 x): NODE_4485_length_387_cov_1.102113
[shovill] Removing low coverage contig (< 2 x): NODE_4486_length_387_cov_0.940141
[shovill] Removing low coverage contig (< 2 x): NODE_4484_length_387_cov_1.549296
[shovill] Removing low coverage contig (< 2 x): NODE_4482_length_387_cov_1.753521
[shovill] Removing low coverage contig (< 2 x): NODE_4487_length_387_cov_0.940141
[shovill] Removing low coverage contig (< 2 x): NODE_4490_length_387_cov_0.788732
[shovill] Removing low coverage contig (< 2 x): NODE_4483_length_387_cov_1.735915
[shovill] Removing low coverage contig (< 2 x): NODE_4497_length_386_cov_0.950530
[shovill] Removing low coverage contig (< 2 x): NODE_4499_length_386_cov_0.381625
[shovill] Removing low coverage contig (< 2 x): NODE_4495_length_386_cov_0.989399
[shovill] Removing low coverage contig (< 2 x): NODE_4492_length_386_cov_1.699647
[shovill] Removing low coverage contig (< 2 x): NODE_4498_length_386_cov_0.699647
[shovill] Removing low coverage contig (< 2 x): NODE_4494_length_386_cov_1.183746
[shovill] Removing low coverage contig (< 2 x): NODE_4496_length_386_cov_0.975265
[shovill] Removing low coverage contig (< 2 x): NODE_4493_length_386_cov_1.219081
[shovill] Removing low coverage contig (< 2 x): NODE_4513_length_311_cov_1.514423
[shovill] Removing homopolymer-104G contig: NODE_4576_length_104_cov_2090.000000
[shovill] Removing homopolymer-104T contig: NODE_4575_length_104_cov_6063.000000
[shovill] Assembly is 6943656, estimated genome size was 6275024 (+10.66%)
[shovill] Using genome graph file 'spades/assembly_graph_with_scaffolds.gfa' => 'contigs.gfa'
[shovill] Walltime used: 27 min 9 sec
[shovill] Results in: /panfs/roles/BF/Assembly/363192065_S248_L001
[shovill] Final assembly graph: /panfs/roles/BF/Assembly/363192065_S248_L001/contigs.gfa
[shovill] Final assembly contigs: /panfs/roles/BF/Assembly/363192065_S248_L001/contigs.fa
[shovill] It contains 676 (min=71) contigs totalling 6943656 bp.
[shovill] Remember, genomic repeats > ~800bp will be collapsed into single contigs.
[shovill] Done.
